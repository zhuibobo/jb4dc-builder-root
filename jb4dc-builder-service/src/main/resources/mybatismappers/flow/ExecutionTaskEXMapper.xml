<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jb4dc.workflow.dao.ExecutionTaskMapper">
    <resultMap id="BaseResultMapWithPO" type="com.jb4dc.workflow.po.ExecutionTaskPO">
        <constructor>
            <idArg column="EXTASK_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_INST_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_MODEL_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_RU_TASK_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_RU_EXECUTION_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_RU_PROC_INST_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_RU_PROC_DEF_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_PRE_NODE_KEY" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_PRE_NODE_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_CUR_NODE_KEY" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_CUR_NODE_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_STATUS" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_SENDER_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_SENDER_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_SEND_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="EXTASK_RECEIVER_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_RECEIVER_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_VIEW_ED" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_VIEW_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="EXTASK_START_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="EXTASK_END_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="EXTASK_HANDLE_ED" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_HANDLE_ACTION_KEY" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_HANDLE_ACTION_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_ORDER_NUM" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="EXTASK_HANDLER_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_HANDLER_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_HANDLER_TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_CREATE_BY" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_FROM_TASK_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_FROM_RECALL_TASK_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_FROM_EXECUTION_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="EXTASK_INDEX" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="EXTASK_MULTI_TASK" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_TITLE" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_DESC" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_CUST_DESC" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_CREATE_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="INST_CREATOR" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_CREATOR_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_ORGAN_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_ORGAN_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_STATUS" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_END_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="INST_RU_EXECUTION_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_RU_PROC_INST_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_RU_BUSINESS_KEY" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_RU_PROC_DEF_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_ORDER_NUM" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="INST_MOD_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_MOD_CATEGORY" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_MOD_MODULE_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="INST_MOD_TENANT_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
        </constructor>
    </resultMap>
    <sql id="Inst_Base_Column_List">
        <!--@sql select -->
        INST_ID, INST_TITLE, INST_DESC, INST_CUST_DESC, INST_CREATE_TIME, INST_CREATOR, INST_CREATOR_ID,
    INST_ORGAN_NAME, INST_ORGAN_ID, INST_STATUS, INST_END_TIME, INST_RU_EXECUTION_ID,
    INST_RU_PROC_INST_ID, INST_RU_BUSINESS_KEY, INST_RU_PROC_DEF_ID, INST_ORDER_NUM,
    INST_MOD_ID, INST_MOD_CATEGORY, INST_MOD_MODULE_ID, INST_MOD_TENANT_ID
        <!--@sql from TFLOW_INSTANCE -->
    </sql>
    <select id="selectAll" resultMap="BaseResultMap">select<include refid="Base_Column_List"/> from TFLOW_EXECUTION_TASK ORDER by EXTASK_ORDER_NUM DESC</select>
    <select id="selectAllASC" resultMap="BaseResultMap">select<include refid="Base_Column_List"/> from TFLOW_EXECUTION_TASK ORDER by EXTASK_ORDER_NUM ASC</select>
    <delete id="deleteAll">delete from TFLOW_EXECUTION_TASK</delete>
    <select id="nextOrderNum" resultType="integer">select case when max(EXTASK_ORDER_NUM) is null then 1 else max(EXTASK_ORDER_NUM)+1 end ORDERNUM from TFLOW_EXECUTION_TASK</select>
    <select id="selectBySearch" parameterType="java.util.Map" resultMap="BaseResultMap">select<include refid="Base_Column_List"/>from TFLOW_EXECUTION_TASK<where>
        <if test="extaskInstId !=null and extaskInstId !=''"> and EXTASK_INST_ID like #{extaskInstId} </if>
        <if test="extaskModelId !=null and extaskModelId !=''"> and EXTASK_MODEL_ID like #{extaskModelId} </if>
        <if test="extaskRuTaskId !=null and extaskRuTaskId !=''"> and EXTASK_RU_TASK_ID like #{extaskRuTaskId} </if>
        <if test="extaskRuExecutionId !=null and extaskRuExecutionId !=''"> and EXTASK_RU_EXECUTION_ID like #{extaskRuExecutionId} </if>
        <if test="extaskRuProcInstId !=null and extaskRuProcInstId !=''"> and EXTASK_RU_PROC_INST_ID like #{extaskRuProcInstId} </if>
        <if test="extaskRuProcDefId !=null and extaskRuProcDefId !=''"> and EXTASK_RU_PROC_DEF_ID like #{extaskRuProcDefId} </if>
        <if test="extaskPreNodeKey !=null and extaskPreNodeKey !=''"> and EXTASK_PRE_NODE_KEY like #{extaskPreNodeKey} </if>
        <if test="extaskPreNodeName !=null and extaskPreNodeName !=''"> and EXTASK_PRE_NODE_NAME like #{extaskPreNodeName} </if>
        <if test="extaskCurNodeKey !=null and extaskCurNodeKey !=''"> and EXTASK_CUR_NODE_KEY like #{extaskCurNodeKey} </if>
        <if test="extaskCurNodeName !=null and extaskCurNodeName !=''"> and EXTASK_CUR_NODE_NAME like #{extaskCurNodeName} </if>
        <if test="extaskType !=null and extaskType !=''"> and EXTASK_TYPE like #{extaskType} </if>
        <if test="extaskStatus !=null and extaskStatus !=''"> and EXTASK_STATUS like #{extaskStatus} </if>
        <if test="extaskSenderId !=null and extaskSenderId !=''"> and EXTASK_SENDER_ID like #{extaskSenderId} </if>
        <if test="extaskSenderName !=null and extaskSenderName !=''"> and EXTASK_SENDER_NAME like #{extaskSenderName} </if>
        <if test="extaskReceiverId !=null and extaskReceiverId !=''"> and EXTASK_RECEIVER_ID like #{extaskReceiverId} </if>
        <if test="extaskReceiverName !=null and extaskReceiverName !=''"> and EXTASK_RECEIVER_NAME like #{extaskReceiverName} </if>
        <if test="extaskViewEd !=null and extaskViewEd !=''"> and EXTASK_VIEW_ED like #{extaskViewEd} </if>
        <if test="extaskHandleEd !=null and extaskHandleEd !=''"> and EXTASK_HANDLE_ED like #{extaskHandleEd} </if>
        <if test="extaskHandleActionKey !=null and extaskHandleActionKey !=''"> and EXTASK_HANDLE_ACTION_KEY like #{extaskHandleActionKey} </if>
        <if test="extaskHandleActionName !=null and extaskHandleActionName !=''"> and EXTASK_HANDLE_ACTION_NAME like #{extaskHandleActionName} </if>
    </where>ORDER by EXTASK_ORDER_NUM DESC</select>
    <select id="selectLessThanRecord" parameterType="java.lang.String" resultMap="BaseResultMap"><![CDATA[select * from TFLOW_EXECUTION_TASK
                                                                                                          where EXTASK_ORDER_NUM = (select max(EXTASK_ORDER_NUM) from TFLOW_EXECUTION_TASK where EXTASK_ORDER_NUM<(select EXTASK_ORDER_NUM from TFLOW_EXECUTION_TASK where EXTASK_ID=#{Id,jdbcType=NVARCHAR}))]]></select>
    <select id="selectGreaterThanRecord" parameterType="java.lang.String" resultMap="BaseResultMap"><![CDATA[select * from TFLOW_EXECUTION_TASK
                                                                                                             where EXTASK_ORDER_NUM = (select min(EXTASK_ORDER_NUM) from TFLOW_EXECUTION_TASK where EXTASK_ORDER_NUM>(select EXTASK_ORDER_NUM from TFLOW_EXECUTION_TASK where EXTASK_ID=#{Id,jdbcType=NVARCHAR}))]]></select>

    <select id="selectByInstanceId" resultMap="BaseResultMap">
        select<include refid="Base_Column_List"/> from TFLOW_EXECUTION_TASK where EXTASK_INST_ID=#{instId} ORDER by EXTASK_ORDER_NUM asc
    </select>

    <select id="selectByInstanceIdAndStatus" resultMap="BaseResultMap">
        select<include refid="Base_Column_List"/> from TFLOW_EXECUTION_TASK where EXTASK_INST_ID=#{instId} and EXTASK_STATUS=#{status} ORDER by EXTASK_ORDER_NUM asc
    </select>

    <select id="selectMyProcessTask" resultMap="BaseResultMapWithPO">
        select <include refid="Base_Column_List"/>,<include refid="Inst_Base_Column_List"/> from TFLOW_EXECUTION_TASK join TFLOW_INSTANCE on TFLOW_EXECUTION_TASK.EXTASK_INST_ID=TFLOW_INSTANCE.INST_ID
        where EXTASK_TYPE=#{extaskType} and EXTASK_RECEIVER_ID=#{userId} and INST_MOD_CATEGORY=#{modelCategory} and EXTASK_STATUS='Processing' and INST_MOD_MODULE_ID in (
        select MODULE_ID from tbuild_module where MODULE_LINK_ID=#{linkId}
        )
    </select>

    <select id="selectMyProcessEndTask" resultMap="BaseResultMapWithPO">
        <bind name="instanceTitle" value="'%'+executionTaskSearchModel.instanceTitle+'%'"/>
        select <include refid="Base_Column_List"/>,<include refid="Inst_Base_Column_List"/> from tflow_execution_task
                inner join (
                    select max(EXTASK_ORDER_NUM) MR_EXTASK_ORDER_NUM,EXTASK_INST_ID MR_EXTASK_INST_ID from tflow_execution_task where EXTASK_HANDLER_ID=#{executionTaskSearchModel.jb4DCSession.userId,jdbcType=VARCHAR} and EXTASK_STATUS='End' and  EXTASK_TYPE=#{executionTaskSearchModel.extaskType}
                    group by EXTASK_INST_ID
                ) maxrecordtable on tflow_execution_task.EXTASK_INST_ID=maxrecordtable.MR_EXTASK_INST_ID and tflow_execution_task.EXTASK_ORDER_NUM=maxrecordtable.MR_EXTASK_ORDER_NUM
                inner join TFLOW_INSTANCE on tflow_execution_task.EXTASK_INST_ID=TFLOW_INSTANCE.INST_ID
        where INST_MOD_MODULE_ID in (
            select MODULE_ID from tbuild_module where MODULE_LINK_ID=#{executionTaskSearchModel.linkId,jdbcType=VARCHAR}
        )
        <if test="executionTaskSearchModel.instanceTitle != null and executionTaskSearchModel.instanceTitle != ''">
            and INST_TITLE like #{instanceTitle}
        </if>
        <if test="executionTaskSearchModel.instanceStartDateBegin != null">
            <![CDATA[
                and EXTASK_END_TIME>=#{executionTaskSearchModel.instanceStartDateBegin}
            ]]>
        </if>
        <if test="executionTaskSearchModel.instanceStartDateEnd != null">
            <![CDATA[
                and EXTASK_END_TIME<=#{executionTaskSearchModel.instanceStartDateEnd}
            ]]>
        </if>
        order by EXTASK_END_TIME desc
    </select>

    <select id="selectListByInstanceAndStatus" resultMap="BaseResultMap">
        select<include refid="Base_Column_List"/> from TFLOW_EXECUTION_TASK where EXTASK_INST_ID in
        <foreach collection="instanceIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and EXTASK_STATUS=#{exTaskStatus}
    </select>

    <update id="updateProcessingToCancelStatus">
        update TFLOW_EXECUTION_TASK set EXTASK_STATUS='Cancel' where EXTASK_INST_ID=#{instanceId} and EXTASK_STATUS='Processing'
    </update>

    <select id="selectNextExtaskIndexByInstanceId" resultType="int">
        select case when max(EXTASK_INDEX) is null then 1000000 else max(EXTASK_INDEX)+1000 end EXTASK_INDEX from TFLOW_EXECUTION_TASK where EXTASK_INST_ID=#{instanceId}
    </select>

    <select id="selectProcessingTaskByInstanceIdAndFromTaskId" resultMap="BaseResultMap">
        select<include refid="Base_Column_List"/> from TFLOW_EXECUTION_TASK where EXTASK_INST_ID=#{instanceId} and EXTASK_STATUS='Processing' and EXTASK_FROM_TASK_ID=#{extaskFromTaskId}
    </select>

    <select id="selectProcessingTaskByInstanceIdAndFromTaskNodeKey" resultMap="BaseResultMap">
        select<include refid="Base_Column_List"/> from TFLOW_EXECUTION_TASK where EXTASK_INST_ID=#{instanceId} and EXTASK_STATUS='Processing' and EXTASK_PRE_NODE_KEY=#{extaskPreNodeKey}
    </select>
</mapper>
