"use strict";var EditTable_FieldName={Get_EditStatus_HtmlElem:function(e,t,l,a,n,i,u,r){var d="",f=t.BindName;if(null!=t.DefaultValue&&null!=t.DefaultValue)d=EditTableDefauleValue.GetValue(t);null!=r&&null!=r&&(d=r[f]),null!=i&&null!=i&&(d=i.html());var o=$("<input type='text' style='width: 98%' />");return o.val(d),o.attr("BindName",t.BindName),o.attr("Val",d),o.attr("IsSerialize","true"),o},Get_CompletedStatus_HtmlElem:function(e,t,l,a,n,i){var u=i.val().toUpperCase();return $("<label IsSerialize='true' BindName='"+t.BindName+"' Value='"+u+"'>"+u+"</label>")},ValidateToCompletedEnable:function(e,t,l,a,n,i){var u=i.val(),r=EditTableValidate.Validate(u,t);return r.Success&&n.find("[renderer=EditTable_FieldName]").each(function(){$(this).find("label").each(function(){var e=$(this);e.text()!=u&&e.text()!=u.toUpperCase()||(r={Success:!1,Msg:"[字段名称]不能重复!"})})}),r}},EditTable_SelectDefaultValue={Get_EditStatus_HtmlElem:function(e,t,l,a,n,i,u,r){var d="",f="",o="";null!=r&&null!=r&&(d=r.fieldDefaultType?r.fieldDefaultType:"",f=r.fieldDefaultValue?r.fieldDefaultValue:"",o=r.fieldDefaultText?r.fieldDefaultText:""),null!=i&&null!=i&&i.find("label").each(function(){"fieldDefaultType"==$(this).attr("BindName")?d=$(this).attr("Value"):"fieldDefaultText"==$(this).attr("BindName")?o=$(this).attr("Value"):"fieldDefaultValue"==$(this).attr("BindName")&&(f=$(this).attr("Value"))});var p=$("<div></div>"),T=$("<input type='text' style='width: 80%' readonly />");T.attr("fieldDefaultType",d),T.attr("fieldDefaultValue",f),T.attr("fieldDefaultText",o),T.val(DefaultValueUtility.formatText(d,o));var s=$("<input class='normalbutton-v1' style='margin-left: 4px;' type='button' value='...'/>");return p.append(T).append(s),window.$Temp$Inputtxt=T,s.click(function(){window.tableDesion?tableDesion.selectDefaultValueDialogBegin(EditTable_SelectDefaultValue,null):(window.parent.listDesign.selectDefaultValueDialogBegin(window,null),window._SelectBindObj={setSelectEnvVariableResultValue:function(e){EditTable_SelectDefaultValue.setSelectEnvVariableResultValue(e)}})}),p},Get_CompletedStatus_HtmlElem:function(e,t,l,a,n,i){var u=i.find("input[type='text']");if(0<u.length){var r=u.attr("fieldDefaultType"),d=u.attr("fieldDefaultValue"),f=u.attr("fieldDefaultText"),o=$("<div></div>");return o.append("<label>"+DefaultValueUtility.formatText(r,f)+"</label>"),o.append("<label IsSerialize='true' BindName='fieldDefaultType' Value='"+r+"' style='display:none'/>"),o.append("<label IsSerialize='true' BindName='fieldDefaultText' Value='"+f+"' style='display:none'/>"),o.append("<label IsSerialize='true' BindName='fieldDefaultValue' Value='"+d+"' style='display:none'/>"),o}return $("<label></label>")},ValidateToCompletedEnable:function(e,t,l,a,n,i){var u=i.val();return EditTableValidate.Validate(u,t)},setSelectEnvVariableResultValue:function(e){var t=window.$Temp$Inputtxt;null!=e?(t.attr("fieldDefaultType",e.Type),t.attr("fieldDefaultValue",e.Value),t.attr("fieldDefaultText",e.Text),t.val(DefaultValueUtility.formatText(e.Type,e.Text))):(t.attr("fieldDefaultType",""),t.attr("fieldDefaultValue",""),t.attr("fieldDefaultText",""),t.val(""))}},EditTable_SelectFieldTypeDataLoader={_fieldDataTypeArray:null,GetFieldDataTypeArray:function(){if(null==this._fieldDataTypeArray){var l=this;AjaxUtility.PostSync("/Rest/Builder/DataStorage/DataBase/Table/GetTableFieldType",{},function(e){if(1==e.success){var t=JsonUtility.StringToJson(e.data);null!=t&&null!=t&&(l._fieldDataTypeArray=t)}else DialogUtility.Alert(window,"AlertLoadingQueryError",{},"加载字段类型失败！",null)},this)}return this._fieldDataTypeArray},GetFieldDataTypeObjectByValue:function(e){for(var t=this.GetFieldDataTypeArray(),l=0;l<t.length;l++){var a=t[l];if(a.Value==e)return a}alert("找不到指定的数据类型，请确认是否支持该类型！")},GetFieldDataTypeObjectByText:function(e){for(var t=this.GetFieldDataTypeArray(),l=0;l<t.length;l++){var a=t[l];if(a.Text==e)return a}alert("找不到指定的数据类型，请确认是否支持该类型！")}},EditTable_SelectFieldType={Get_EditStatus_HtmlElem:function(e,t,l,a,n,i,u,r){var d="",f=$("<select />");null!=r&&null!=r&&(d=r.fieldDataType),null!=i&&null!=i&&(d=i.attr("Value"));for(var o=EditTable_SelectFieldTypeDataLoader.GetFieldDataTypeArray(),p=0;p<o.length;p++){var T=o[p].Value,s=o[p].Text;f.append("<option value='"+T+"'>"+s+"</option>")}return""!=d?f.val(d):f.val(EditTable_SelectFieldTypeDataLoader.GetFieldDataTypeObjectByText("字符串").Value),f.change(function(){var e=$(this).val();"整数"==e?($(l).next().find("input").attr("disabled",!0),$(l).next().find("input").val(0),$(l).next().next().find("input").attr("disabled",!0),$(l).next().next().find("input").val(0)):"小数"==e?($(l).next().find("input").attr("disabled",!1),$(l).next().find("input").val(10),$(l).next().next().find("input").attr("disabled",!1),$(l).next().next().find("input").val(2)):"日期时间"==e?($(l).next().find("input").attr("disabled",!0),$(l).next().find("input").val(20),$(l).next().next().find("input").attr("disabled",!0),$(l).next().next().find("input").val(0)):"字符串"==e?($(l).next().find("input").attr("disabled",!1),$(l).next().find("input").val(50),$(l).next().next().find("input").attr("disabled",!0),$(l).next().next().find("input").val(0)):"长字符串"==e&&($(l).next().find("input").attr("disabled",!0),$(l).next().find("input").val(0),$(l).next().next().find("input").attr("disabled",!0),$(l).next().next().find("input").val(0))}),f},Get_CompletedStatus_HtmlElem:function(e,t,l,a,n,i){var u=i.val(),r=EditTable_SelectFieldTypeDataLoader.GetFieldDataTypeObjectByValue(u).Text;return $("<label IsSerialize='true' BindName='"+t.BindName+"' Value='"+u+"'>"+r+"</label>")},ValidateToCompletedEnable:function(e,t,l,a,n,i){var u=i.val();return EditTableValidate.Validate(u,t)}},Column_RTTableIsMain={Get_EditStatus_HtmlElem:function(e,t,l,a,n,i,u,r){var d=[{Value:"是",Text:"是"},{Value:"否",Text:"否"}],f="",o=t.BindName;if(null!=t.DefaultValue&&null!=t.DefaultValue)f=EditTableDefauleValue.GetValue(t);null!=r&&null!=r&&(f=r[o]),null!=i&&null!=i&&(f=i.attr("Value"));for(var p=$("<select style='width: 100%' />"),T=0;T<d.length;T++){var s=d[T];p.append("<option value='"+s.Value+"' text='"+s.Text+"'>"+s.Text+"</option>")}return p.val(f),"function"==typeof t.ChangeEvent&&p.change(function(){t.ChangeEvent(this,e,t,l,a,n,i)}),p},Get_CompletedStatus_HtmlElem:function(e,t,l,a,n,i){var u=i.find("option:selected").attr("Value"),r=i.find("option:selected").attr("Text");return u||(u=""),r||(r=""),$("<label IsSerialize='true' BindName='"+t.BindName+"' Value='"+u+"' Text='"+r+"'>"+r+"</label>")},ValidateToCompletedEnable:function(e,t,l,a,n,i){var u=i.val();return EditTableValidate.Validate(u,t)}},Column_SelectDefaultValue={Get_EditStatus_HtmlElem:function(e,t,l,a,n,i,u,r){var d="",f="",o="";null!=r&&null!=r&&(d=r.columnDefaultType?r.columnDefaultType:"",f=r.columnDefaultValue?r.columnDefaultValue:"",o=r.columnDefaultText?r.columnDefaultText:""),null!=i&&null!=i&&i.find("label").each(function(){"columnDefaultType"==$(this).attr("BindName")?d=$(this).attr("Value"):"columnDefaultText"==$(this).attr("BindName")?o=$(this).attr("Value"):"columnDefaultValue"==$(this).attr("BindName")&&(f=$(this).attr("Value"))});var p=$("<div></div>"),T=$("<input type='text' style='width: 82%' readonly />");T.attr("columnDefaultType",d),T.attr("columnDefaultValue",f),T.attr("columnDefaultText",o),T.val(DefaultValueUtility.formatText(d,o));var s=$("<input class='normalbutton-v1' style='margin-left: 4px;' type='button' value='...'/>");return p.append(T).append(s),window.$Temp$Inputtxt=T,s.click(function(){JBuild4DSelectView.SelectEnvVariable.beginSelect("Column_SelectDefaultValue")}),p},Get_CompletedStatus_HtmlElem:function(e,t,l,a,n,i){var u=i.find("input[type='text']");if(0<u.length){var r=u.attr("columnDefaultType"),d=u.attr("columnDefaultValue"),f=u.attr("columnDefaultText"),o=$("<div></div>");return o.append("<label>"+DefaultValueUtility.formatText(r,f)+"</label>"),o.append("<label IsSerialize='true' BindName='columnDefaultType' Value='"+r+"' style='display:none'/>"),o.append("<label IsSerialize='true' BindName='columnDefaultText' Value='"+f+"' style='display:none'/>"),o.append("<label IsSerialize='true' BindName='columnDefaultValue' Value='"+d+"' style='display:none'/>"),o}return $("<label></label>")},ValidateToCompletedEnable:function(e,t,l,a,n,i){var u=i.val();return EditTableValidate.Validate(u,t)},setSelectEnvVariableResultValue:function(e){var t=window.$Temp$Inputtxt;null!=e?(t.attr("columnDefaultType",e.Type),t.attr("columnDefaultValue",e.Value),t.attr("columnDefaultText",e.Text),t.val(DefaultValueUtility.formatText(e.Type,e.Text))):(t.attr("columnDefaultType",""),t.attr("columnDefaultValue",""),t.attr("columnDefaultText",""),t.val(""))}},Column_SelectFieldTypeDataLoader={_fieldDataTypeArray:null,GetFieldDataTypeArray:function(){if(null==this._fieldDataTypeArray){var l=this;AjaxUtility.PostSync("/Rest/Builder/DataStorage/DataBase/Table/GetTableFieldType",{},function(e){if(1==e.success){var t=JsonUtility.StringToJson(e.data);null!=t&&null!=t&&(l._fieldDataTypeArray=t)}else DialogUtility.Alert(window,"AlertLoadingQueryError",{},"加载字段类型失败！",null)},this)}return this._fieldDataTypeArray},GetFieldDataTypeObjectByValue:function(e){for(var t=this.GetFieldDataTypeArray(),l=0;l<t.length;l++){var a=t[l];if(a.Value==e)return a}alert("找不到指定的数据类型，请确认是否支持该类型！")},GetFieldDataTypeObjectByText:function(e){for(var t=this.GetFieldDataTypeArray(),l=0;l<t.length;l++){var a=t[l];if(a.Text==e)return a}alert("找不到指定的数据类型，请确认是否支持该类型！")}},Column_SelectFieldType={Get_EditStatus_HtmlElem:function(e,t,l,a,n,i,u,r){var d="",f=$("<select />");null!=r&&null!=r&&(d=r.columnDataTypeName),null!=i&&null!=i&&(d=i.attr("Value"));for(var o=Column_SelectFieldTypeDataLoader.GetFieldDataTypeArray(),p=0;p<o.length;p++){var T=o[p].Value,s=o[p].Text;f.append("<option value='"+T+"'>"+s+"</option>")}return""!=d?f.val(d):f.val(Column_SelectFieldTypeDataLoader.GetFieldDataTypeObjectByText("字符串").Value),f},Get_CompletedStatus_HtmlElem:function(e,t,l,a,n,i){var u=i.val(),r=Column_SelectFieldTypeDataLoader.GetFieldDataTypeObjectByValue(u).Text;return $("<label IsSerialize='true' BindName='"+t.BindName+"' Value='"+u+"'>"+r+"</label>")},ValidateToCompletedEnable:function(e,t,l,a,n,i){var u=i.val();return EditTableValidate.Validate(u,t)}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
