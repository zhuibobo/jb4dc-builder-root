"use strict";Vue.component("select-default-value-dialog",{data:function(){var i=this;return{acInterface:{getGroupTreeData:"/Rest/Builder/EnvVariableGroup/GetTreeData",reloadListData:"/Rest/Builder/EnvVariable/GetListData"},selectType:"Const",selectValue:"",selectText:"",constValue:"",listHeight:470,tree:{treeIdFieldName:"envGroupId",treeObj:null,treeSelectedNode:null,treeSetting:{async:{enable:!0,url:""},data:{key:{name:"envGroupText"},simpleData:{enable:!0,idKey:"envGroupId",pIdKey:"envGroupParentId",rootId:0}},callback:{onClick:function(e,t,i){this.getZTreeObj(t)._host.treeNodeSelected(e,t,i)},onAsyncSuccess:function(e,t,i,a){appList.treeObj.expandAll(!0)}}}},tableData:[],columnsConfig:[{title:"变量名称",key:"envVarText",align:"center"},{title:"变量值",key:"envVarValue",align:"center"},{title:"操作",key:"envVarId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.SelectedButton(e,t,"envVarId",i)])}}],searchCondition:{envVarGroupId:{value:"",type:SearchUtility.SearchFieldType.StringType}},pageTotal:0,pageSize:100,pageNum:1}},mounted:function(){this.loadData()},methods:{beginSelect:function(e){console.log(e);var t=this.$refs.selectDefaultValueDialogWrap;DialogUtility.DialogElemObj(t,{modal:!0,height:680,width:980,title:"设置默认值"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),null==e&&(this.selectValue="",this.selectText="",this.constValue="")},loadData:function(){AjaxUtility.Post(this.acInterface.getGroupTreeData,{},function(e){if(console.log(e),e.success){if(null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++);this.tree.treeObj=$.fn.zTree.init($("#zTreeUL"),this.tree.treeSetting,e.data),this.tree.treeObj.expandAll(!0),this.tree.treeObj._host=this}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,function(){})},this)},getSelectInstanceName:function(){return BaseUtility.GetUrlParaValue("instanceName")},selectComplete:function(){var e={};if("Const"==this.selectType){if(""==this.constValue)return void DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请设置常量默认值！",null);e.Type="Const",e.Value=this.constValue,e.Text=this.constValue}else e.Type="EnvVar",e.Value=this.selectValue,e.Text=this.selectText;this.$emit("on-selected-default-value",e),this.handleClose()},clearComplete:function(){this.$emit("on-selected-default-value",null),this.handleClose()},handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectDefaultValueDialogWrap)},selectionChange:function(){},clearSearchCondition:function(){for(var e in this.searchCondition)this.searchCondition[e].value=""},treeNodeSelected:function(e,t,i){this.pageNum=1,this.clearSearchCondition(),this.searchCondition.envVarGroupId.value=i[this.tree.treeIdFieldName],this.reloadData()},reloadData:function(){ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadListData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:"envVarId",autoSelectedOldRows:!0,successFunc:null,loadDict:!1,custParas:{}})},selected:function(e,t){console.log(t),this.selectValue=t.row.envVarValue,this.selectText=t.row.envVarText}},template:'<div  ref="selectDefaultValueDialogWrap" class="general-edit-page-wrap" style="display: none;margin-top: 0px">\n                    <tabs :value="selectType" v-model="selectType">\n                        <tab-pane label="常量" name="Const" >\n                            <i-form :label-width="80" style="width: 80%;margin: 50px auto auto;">\n                                <form-item label="常量：">\n                                    <i-input v-model="constValue"></i-input>\n                                </form-item>\n                            </i-form>\n                        </tab-pane>\n                        <tab-pane label="环境变量" name="EnvVar">\n                            <div style="height: 45px;border-bottom: dotted 1px #8a8a8a;margin-bottom: 10px;">\n                                <div style="float: right;padding: 8px;border-radius: 8px;color:orangered;border: solid 1px #adbed8;">已经选择：{{selectText}}</div>\n                            </div>\n                            <div>\n                                <div style="width: 30%;float: left;height: 514px">\n                                    <div class="inner-wrap">\n                                        <div>\n                                            <ul id="zTreeUL" class="ztree"></ul>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style="width: 68%;float: left;height: 514px" class="iv-list-page-wrap">\n                                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"\n                                             class="iv-list-table" :highlight-row="true"\n                                             @on-selection-change="selectionChange"></i-table>\n                                </div>\n                            </div>\n                        </tab-pane>\n                    </tabs>\n                    <div class="button-outer-wrap">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="selectComplete()"> 确 认 </i-button>\n                                <i-button type="primary" @click="clearComplete()"> 清 空 </i-button>\n                                <i-button @click="handleClose()">关 闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'});var DefaultValueUtility={formatText:function(e,t){return"Const"==e?"静态值:【"+t+"】":"EnvVar"==e?"环境变量:【"+t+"】":""==e?"【无】":"未知类型"+t}};Vue.component("select-single-table-dialog",{data:function(){return{acInterface:{getTableDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList"},jsEditorInstance:null,tableTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;"Table"==i.nodeTypeName?a.selectedTable(e,t,i):a.selectedTable(e,t,null)}}},treeData:null,clickNode:null},selectedTableData:null}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectTableModelDialogWrap)},beginSelectTable:function(){var e=this.$refs.selectTableModelDialogWrap;this.getTableDataInitTree();var t=450;550<PageStyleUtility.GetPageHeight()&&(t=600),DialogUtility.DialogElemObj(e,{modal:!0,width:570,height:t,title:"选择表"})},getTableDataInitTree:function(){var t=this;AjaxUtility.Post(this.acInterface.getTableDataUrl,{},function(e){e.success?(t.tableTree.treeData=e.data,t.$refs.tableZTreeUL.setAttribute("id","select-table-single-comp-"+StringUtility.Guid()),t.tableTree.treeObj=$.fn.zTree.init($(t.$refs.tableZTreeUL),t.tableTree.treeSetting,t.tableTree.treeData),t.tableTree.treeObj.expandAll(!0),t.tableTree.treeObj._host=t,fuzzySearchTreeObj(t.tableTree.treeObj,t.$refs.txt_table_search_text.$refs.input,null,!0)):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedTable:function(e,t,i){this.selectedTableData=i},completed:function(){this.selectedTableData?(this.$emit("on-selected-table",this.selectedTableData),this.handleClose()):DialogUtility.AlertText("请选择表!")}},template:'<div ref="selectTableModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                    <div class="c1-select-model-source-wrap c1-select-model-source-has-buttons-wrap">\n                        <i-input search class="input_border_bottom" ref="txt_table_search_text" placeholder="请输入表名或者标题">\n                        </i-input>\n                        <div class="inner-wrap div-custom-scroll">\n                            <ul ref="tableZTreeUL" class="ztree"></ul>\n                        </div>\n                    </div>\n                    <div class="button-outer-wrap" style="bottom: 12px;right: 12px">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="completed()" icon="md-checkmark">确认</i-button>\n                                <i-button @click="handleClose()" icon="md-close">关闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n               </div>'}),Vue.component("select-single-webform-dialog",{data:function(){return{acInterface:{getTableDataUrl:"/Rest/Builder/Form/GetWebFormForZTreeNodeList"},jsEditorInstance:null,tree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;"WebForm"==i.nodeTypeName&&a.selectedForm(e,t,i)}}},treeData:null},selectedFormData:null,oldSelectedFormId:""}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectModelDialogWrap)},beginSelectForm:function(e){var t=this.$refs.selectModelDialogWrap;this.getFormDataInitTree(),this.oldSelectedFormId=e;DialogUtility.DialogElemObj(t,{modal:!0,width:570,height:500,title:"选择窗体"})},getFormDataInitTree:function(){var a=this;AjaxUtility.Post(this.acInterface.getTableDataUrl,{},function(e){if(e.success){a.tree.treeData=e.data;for(var t=0;t<a.tree.treeData.length;t++)"WebForm"==a.tree.treeData[t].nodeTypeName?a.tree.treeData[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/table.png":"Module"==a.tree.treeData[t].nodeTypeName&&(a.tree.treeData[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/folder-table.png");if(a.$refs.formZTreeUL.setAttribute("id","select-form-single-comp-"+StringUtility.Guid()),a.tree.treeObj=$.fn.zTree.init($(a.$refs.formZTreeUL),a.tree.treeSetting,a.tree.treeData),a.tree.treeObj.expandAll(!0),a.tree.treeObj._host=a,fuzzySearchTreeObj(a.tree.treeObj,a.$refs.txt_form_search_text.$refs.input,null,!0),null!=a.oldSelectedFormId&&""!=a.oldSelectedFormId){var i=a.tree.treeObj.getNodeByParam("id",a.oldSelectedFormId);a.tree.treeObj.selectNode(i)}}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedForm:function(e,t,i){this.selectedFormData=i},completed:function(){if(this.selectedFormData){var e={formModuleId:this.selectedFormData.attr4,formModuleName:this.selectedFormData.attr3,formId:this.selectedFormData.id,formName:this.selectedFormData.attr1,formCode:this.selectedFormData.attr2};this.$emit("on-selected-form",e),this.handleClose()}else DialogUtility.AlertText("请选择窗体!")}},template:'<div ref="selectModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none;">\n                    <div class="c1-select-model-source-wrap c1-select-model-source-has-buttons-wrap">\n                        <i-input search class="input_border_bottom" ref="txt_form_search_text" placeholder="请输入表单名称">\n                        </i-input>\n                        <div class="inner-wrap div-custom-scroll">\n                            <ul ref="formZTreeUL" class="ztree"></ul>\n                        </div>\n                    </div>\n                    <div class="button-outer-wrap" style="bottom: 12px;right: 12px">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="completed()" icon="md-checkmark">确认</i-button>\n                                <i-button @click="handleClose()" icon="md-close">关闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n               </div>'}),Vue.component("select-validate-rule-dialog",{data:function(){var i=this;return{selectValidateType:"NoEmpty",ruleParas:{msg:"字段",numLength:4,decimalLength:0,jsMethodName:"",regularText:"",regularMsg:""},addedValidateRule:[],validateColumnsConfig:[{title:"类型",key:"validateType",width:150,align:"center"},{title:"参数",key:"validateParas",align:"center"},{title:"删除",key:"validateId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[e("div",{class:"list-row-button del",on:{click:function(){i.delValidate(t.row.validateId)}}})])}}]}},mounted:function(){},methods:{beginSelect:function(e){var t=this.$refs.selectValidateRuleDialogWrap;DialogUtility.DialogElemObj(t,{modal:!0,height:680,width:980,title:"设置验证规则"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.ruleParas.msg="字段",this.ruleParas.numLength=4,this.ruleParas.decimalLength=0,this.ruleParas.jsMethodName="",this.ruleParas.regularText="",this.ruleParas.regularMsg="",this.addedValidateRule=[],this.bindOldSelectedValue(e)},bindOldSelectedValue:function(e){var t=e;0<t.rules.length&&(this.addedValidateRule=t.rules,this.msg=t.msg)},getSelectInstanceName:function(){return BaseUtility.GetUrlParaValue("instanceName")},selectComplete:function(){var e=this.addedValidateRule;if(0<this.addedValidateRule.length){e={msg:this.ruleParas.msg,rules:this.addedValidateRule};this.$emit("on-selected-validate-rule",JsonUtility.CloneSimple(e)),this.handleClose()}else this.clearComplete()},clearComplete:function(){this.$emit("on-clear-validate-rule"),this.handleClose()},handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectValidateRuleDialogWrap)},addValidateRule:function(){var e="";"Number"==this.selectValidateType?e=JsonUtility.JsonToString({numLength:this.ruleParas.numLength,decimalLength:this.ruleParas.decimalLength}):"Regular"==this.selectValidateType?e=JsonUtility.JsonToString({regularText:this.ruleParas.regularText,regularMsg:this.ruleParas.regularMsg}):"JsMethod"==this.selectValidateType&&(e=JsonUtility.JsonToString({jsMethodName:this.ruleParas.jsMethodName}));var t={validateId:StringUtility.Timestamp(),validateType:this.selectValidateType,validateParas:e};this.addedValidateRule.push(t)},delValidate:function(e){for(var t=0;t<this.addedValidateRule.length;t++)this.addedValidateRule[t].validateId==e&&this.addedValidateRule.splice(t,1)}},template:'<div ref="selectValidateRuleDialogWrap" v-cloak class="general-edit-page-wrap" style="display: none">\n                    <card style="margin-top: 10px" >\n                        <p slot="title">设置验证规则</p>\n                        <div>\n                            <radio-group type="button" style="margin: auto" v-model="selectValidateType">\n                                <radio label="NoEmpty">不为空</radio>\n                                <radio label="Number">数字</radio>\n                                <radio label="Mobile">手机</radio>\n                                <radio label="Date">日期</radio>\n                                <radio label="Time">时间</radio>\n                                <radio label="DateTime">日期时间</radio>\n                                <radio label="EMail">邮件</radio>\n                                <radio label="IDCard">身份证</radio>\n                                <radio label="URL">URL</radio>\n                                <radio label="ENCode">英文</radio>\n                                <radio label="SimpleCode">特殊字符</radio>\n                                <radio label="Regular">正则表达式</radio>\n                                <radio label="JsMethod">JS方法</radio>\n                            </radio-group>\n                            <i-button type="success" shape="circle" icon="md-add" style="margin-left: 15px;cursor: pointer" @click="addValidateRule"></i-button>\n                        </div>\n                        <div>\n                            <divider orientation="left" :dashed="true" style="font-size: 12px">参数设置</divider>\n                            \x3c!--数字类型参数设置--\x3e\n                            <div v-if="selectValidateType==\'Number\'">\n                                <i-form :label-width="80">\n                                    <form-item label="长度：">\n                                        <row>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <input-number :max="10" :min="1" v-model="ruleParas.numLength" size="small" style="width: 80%"></input-number>\n                                                </form-item>\n                                            </i-col>\n                                            <i-col span="4" style="text-align: center">小数位数：</i-col>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <input-number :max="10" :min="0" v-model="ruleParas.decimalLength" size="small" style="width: 80%"></input-number>\n                                                </form-item>\n                                            </i-col>\n                                        </row>\n                                    </form-item>\n                                </i-form>\n                            </div>\n                            \x3c!--正则表达式类型参数设置--\x3e\n                            <div v-if="selectValidateType==\'Regular\'">\n                                <i-form :label-width="80">\n                                    <form-item label="表达式：">\n                                        <row>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <i-input size="small" placeholder="Enter something..." v-model="ruleParas.regularText" style="width: 80%"></i-input>\n                                                </form-item>\n                                            </i-col>\n                                            <i-col span="4" style="text-align: center">提示信息：</i-col>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <i-input size="small" placeholder="Enter something..." v-model="ruleParas.regularMsg" style="width: 80%"></i-input>\n                                                </form-item>\n                                            </i-col>\n                                        </row>\n                                    </form-item>\n                                </i-form>\n                            </div>\n                            \x3c!--JS方法类型参数设置--\x3e\n                            <div v-if="selectValidateType==\'JsMethod\'">\n                                <i-form :label-width="80">\n                                    <form-item label="方法名：">\n                                        <i-input size="small" placeholder="Enter something..." v-model="ruleParas.jsMethodName" style="width: 90%"></i-input>\n                                    </form-item>\n                                </i-form>\n                            </div>\n                        </div>\n                    </card>\n                    <card style="margin-top: 10px">\n                        <p slot="title">已添加规则</p>\n                        <div>\n                            <divider orientation="left" :dashed="true" style="font-size: 12px;margin-top: 0px;margin-bottom: 6px">提示信息</divider>\n                            <i-form :label-width="0">\n                                <form-item label="">\n                                    <i-input  placeholder="请输入提示信息..."  v-model="ruleParas.msg"></i-input>\n                                </form-item>\n                            </i-form>\n                        </div>\n                        <div style="margin-bottom: 10px;overflow: auto" class="iv-list-page-wrap">\n                            <divider orientation="left" :dashed="true" style="font-size: 12px;margin-top: 0px;margin-bottom: 6px">验证规则</divider>\n                            <i-table border :columns="validateColumnsConfig" :data="addedValidateRule"\n                                     class="iv-list-table" size="small" no-data-text="请添加验证规则" :height="130"></i-table>\n                        </div>\n                    </card>\n                    <div class="button-outer-wrap">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="selectComplete()"> 确 认 </i-button>\n                                <i-button type="primary" @click="clearComplete()"> 清 空 </i-button>\n                                <i-button @click="handleClose()">关 闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("table-relation-connect-two-table-dialog",{data:function(){return{acInterface:{getTablesFieldsByTableIds:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesFieldsByTableIds"},fromTableField:{fieldData:[],columnsConfig:[{title:"字段名称",key:"fieldName",align:"center"},{title:"标题",key:"fieldCaption",align:"center"}]},toTableField:{fieldData:[],columnsConfig:[{title:"字段名称",key:"fieldName",align:"center"},{title:"标题",key:"fieldCaption",align:"center"}]},dialogHeight:0,resultData:{from:{tableId:"",text:""},to:{tableId:"",text:""}}}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.connectTableFieldModelDialogWrap)},completed:function(){""!=this.resultData.from.text&&""!=this.resultData.to.text?(this.$emit("on-completed-connect",this.resultData),this.handleClose()):DialogUtility.AlertText("请设置关联字段")},getFieldsAndBind:function(l,n){var e=[l,n],o=this;AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:e},function(e){if(e.success){var t=e.data,i=(e.exKVData.Tables,o.getSingleTableFieldsData(t,l)),a=o.getSingleTableFieldsData(t,n);o.fromTableField.fieldData=i,o.toTableField.fieldData=a}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},beginSelectConnect:function(e,t){var i=this.$refs.connectTableFieldModelDialogWrap;this.resultData.from.tableId=e,this.resultData.to.tableId=t,this.resultData.from.text="",this.resultData.to.text="",this.getFieldsAndBind(e,t);var a=450;550<PageStyleUtility.GetPageHeight()&&(a=600),this.dialogHeight=a,DialogUtility.DialogElemObj(i,{modal:!0,width:870,height:a,title:"设置关联"})},getSingleTableFieldsData:function(e,t){for(var i=[],a=0;a<e.length;a++)e[a].fieldTableId==t&&i.push(e[a]);return i},selectedFromField:function(e,t){this.resultData.from.text=e.fieldName+"[1]"},selectedToField:function(e,t){this.resultData.to.text=e.fieldName+"[0..N]"}},template:'<div ref="connectTableFieldModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                    <div class="c1-select-model-source-wrap c1-select-model-source-has-buttons-wrap" style="padding: 10px">\n                        <div style="float: left;width: 49%;height: 100%;">\n                            <i-input v-model="resultData.from.text" suffix="md-done-all" placeholder="开始关联字段" style="margin-bottom: 10px">\n                            </i-input>\n                            <i-table @on-row-click="selectedFromField" size="small" :height="dialogHeight-180" stripe border :columns="fromTableField.columnsConfig" :data="fromTableField.fieldData"\n                                         class="iv-list-table" :highlight-row="true"></i-table>\n                        </div>\n                        <div style="float:right;width: 49%;height: 100%;">\n                            <i-input v-model="resultData.to.text" suffix="md-done-all" placeholder="结束关联字段" style="margin-bottom: 10px">\n                            </i-input>\n                            <i-table @on-row-click="selectedToField" size="small" :height="dialogHeight-180" stripe border :columns="toTableField.columnsConfig" :data="toTableField.fieldData"\n                                         class="iv-list-table" :highlight-row="true"></i-table>\n                        </div>\n                    </div>\n                    <div class="button-outer-wrap" style="bottom: 12px;right: 12px">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="completed()" icon="md-checkmark">确认</i-button>\n                                <i-button @click="handleClose()" icon="md-close">关闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n               </div>'}),Vue.component("dataset-simple-select-comp",{data:function(){var a=this;return{acInterface:{getDataSetData:"/Rest/Builder/DataSet/DataSetMain/GetDataSetsForZTreeNodeList"},dataSetTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){"DataSet"==i.nodeTypeName&&a.selectedNode(i)}}},treeData:null,selectedTableName:"无"}}},mounted:function(){this.bindDataSetTree()},methods:{bindDataSetTree:function(){var i=this;AjaxUtility.Post(this.acInterface.getDataSetData,{},function(e){if(e.success){if(null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++)"DataSetGroup"==e.data[t].nodeTypeName?e.data[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/package.png":e.data[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/application_view_columns.png";i.dataSetTree.treeData=e.data,i.dataSetTree.treeObj=$.fn.zTree.init($("#dataSetZTreeUL"),i.dataSetTree.treeSetting,i.dataSetTree.treeData),i.dataSetTree.treeObj.expandAll(!0),fuzzySearchTreeObj(i.dataSetTree.treeObj,i.$refs.txt_search_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedNode:function(e){this.$emit("on-selected-dataset",e)}},template:'<div class="js-code-fragment-wrap">                    <i-input search class="input_border_bottom" ref="txt_search_text" placeholder="请输入表名或者标题"></i-input>                    <ul id="dataSetZTreeUL" class="ztree"></ul>                </div>'}),Vue.component("js-design-code-fragment",{data:function(){return{jsEditorInstance:null}},mounted:function(){},methods:{setJSEditorInstance:function(e){this.jsEditorInstance=e},getJsEditorInst:function(){return this.jsEditorInstance},insertJs:function(e){var t=this.getJsEditorInst().getDoc(),i=t.getCursor();t.replaceRange(e,i)},formatJS:function(){CodeMirror.commands.selectAll(this.getJsEditorInst());var e={from:this.getJsEditorInst().getCursor(!0),to:this.getJsEditorInst().getCursor(!1)};this.getJsEditorInst().autoFormatRange(e.from,e.to)},alertDesc:function(){},refScript:function(){this.insertJs('<script type="text/javascript" src="${contextPath}/UIComponent/TreeTable/Js/TreeTable.js"><\/script>')},callServiceMethod:function(){}},template:'<div class="js-code-fragment-wrap">            <div class="js-code-fragment-item" @click="formatJS">格式化</div>            <div class="js-code-fragment-item">说明</div>            <div class="js-code-fragment-item" @click="refScript">引入脚本</div>            <div class="js-code-fragment-item">获取URL参数</div>            <div class="js-code-fragment-item">调用服务方法</div>            <div class="js-code-fragment-item">加载数据字典</div>        </div>'}),Vue.component("sql-general-design-comp",{props:["sqlDesignerHeight","value","showField"],data:function(){return{sqlText:"",selectedItemValue:"说明",selfTableFields:[],parentTableFields:[]}},watch:{sqlText:function(e){this.$emit("input",e)},value:function(e){this.sqlText=e}},mounted:function(){this.sqlCodeMirror=CodeMirror.fromTextArea($("#TextAreaSQLEditor")[0],{mode:"text/x-sql",lineNumbers:!0,lineWrapping:!0,foldGutter:!0,theme:"monokai"}),console.log(this.sqlDesignerHeight),this.sqlCodeMirror.setSize("100%",this.sqlDesignerHeight);var t=this;this.sqlCodeMirror.on("change",function(e){console.log(e.getValue()),t.sqlText=e.getValue()})},methods:{getValue:function(){this.sqlCodeMirror.getValue()},setValue:function(e){this.sqlCodeMirror.setValue(e)},setAboutTableFields:function(e,t){this.selfTableFields=e,this.parentTableFields=t},insertEnvToEditor:function(e){this.insertCodeAtCursor(e)},insertFieldToEditor:function(e,t){var i=null;i="selfTableFields"==e?this.selfTableFields:this.parentTableFields;for(var a=0;a<i.length;a++)i[a].fieldName==t&&this.insertCodeAtCursor(i[a].tableName+"."+i[a].fieldName)},insertCodeAtCursor:function(e){var t=this.sqlCodeMirror.getDoc(),i=t.getCursor();t.replaceRange(e,i)}},template:'<div>                <textarea id="TextAreaSQLEditor"></textarea>                <div style="text-align: right;margin-top: 8px">                    <ButtonGroup size="small">                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户所在组织ID}\')">组织Id</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户所在组织名称}\')">组织名称</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户ID}\')">用户Id</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户名称}\')">用户名称</Button>                        <Button @click="insertEnvToEditor(\'#{DateTime.年年年年-月月-日日}\')">yyyy-MM-dd</Button>                        <Button>说明</Button>                    </ButtonGroup>                </div>                <div style="margin-top: 8px" v-if="showField">                    <div style="float: left;margin: 4px 10px">本表字段</div>                    <div style="float: left">                        <i-select placeholder="默认使用Id字段" size="small" style="width:175px" @on-change="insertFieldToEditor(\'selfTableFields\',$event)">                            <i-option v-for="item in selfTableFields" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                        </i-select>                    </div>                    <div style="float: left;margin: 4px 10px">父表字段</div>                    <div style="float: left">                        <i-select placeholder="默认使用Id字段" size="small" style="width:177px" @on-change="insertFieldToEditor(\'parentTableFields\',$event)">                            <i-option v-for="item in parentTableFields" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                        </i-select>                    </div>                </div>              </div>'}),Vue.component("table-relation-content-comp",{props:["relation"],data:function(){return{acInterface:{getTablesFieldsByTableIds:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesFieldsByTableIds",saveDiagram:"/Rest/Builder/DataStorage/TableRelation/TableRelation/SaveDiagram",getSingleDiagramData:"/Rest/Builder/DataStorage/TableRelation/TableRelation/GetDetailData",tableView:"/HTML/Builder/DataStorage/DataBase/TableEdit.html"},tableRelationDiagram:null,displayDesc:!0,formatJson:null,recordId:this.relation.relationId}},mounted:function(){$(this.$refs.relationContentOuterWrap).css("height",PageStyleUtility.GetPageHeight()-75),PageStyleUtility.GetPageWidth()<1e3&&(this.displayDesc=!1,$(".table-relation-op-buttons-outer-wrap").css("width","100%")),this.initDiagram(),this.loadRelationDetailData()},methods:{init:function(){window.goSamples&&goSamples();var e=go.GraphObject.make,t=e(go.Diagram,"tableRelationDiagramDiv",{allowDelete:!1,allowCopy:!1,layout:e(go.ForceDirectedLayout),"undoManager.isEnabled":!0}),i=e(go.Brush,"Linear",{0:"rgb(150, 150, 250)",.5:"rgb(86, 86, 186)",1:"rgb(86, 86, 186)"}),a=e(go.Brush,"Linear",{0:"rgb(158, 209, 159)",1:"rgb(67, 101, 56)"}),l=e(go.Brush,"Linear",{0:"rgb(206, 106, 100)",1:"rgb(180, 56, 50)"}),n=e(go.Brush,"Linear",{0:"rgb(254, 221, 50)",1:"rgb(254, 182, 50)"}),o=e(go.Brush,"Linear",{1:"#E6E6FA",0:"#FFFAF0"}),d=e(go.Panel,"Horizontal",e(go.Shape,{desiredSize:new go.Size(10,10)},new go.Binding("figure","figure"),new go.Binding("fill","color")),e(go.TextBlock,{stroke:"#333333",font:"bold 14px sans-serif"},new go.Binding("text","name")));t.nodeTemplate=e(go.Node,"Auto",{selectionAdorned:!0,resizable:!0,layoutConditions:go.Part.LayoutStandard&~go.Part.LayoutNodeSized,fromSpot:go.Spot.AllSides,toSpot:go.Spot.AllSides,isShadowed:!0,shadowColor:"#C5C1AA"},new go.Binding("location","location").makeTwoWay(),new go.Binding("desiredSize","visible",function(e){return new go.Size(NaN,NaN)}).ofObject("LIST"),e(go.Shape,"Rectangle",{fill:o,stroke:"#756875",strokeWidth:3}),e(go.Panel,"Table",{margin:8,stretch:go.GraphObject.Fill},e(go.RowColumnDefinition,{row:0,sizing:go.RowColumnDefinition.None}),e(go.TextBlock,{row:0,alignment:go.Spot.Center,margin:new go.Margin(0,14,0,2),font:"bold 16px sans-serif"},new go.Binding("text","key")),e("PanelExpanderButton","LIST",{row:0,alignment:go.Spot.TopRight}),e(go.Panel,"Vertical",{name:"LIST",row:1,padding:3,alignment:go.Spot.TopLeft,defaultAlignment:go.Spot.Left,stretch:go.GraphObject.Horizontal,itemTemplate:d},new go.Binding("itemArray","items")))),t.linkTemplate=e(go.Link,{selectionAdorned:!0,layerName:"Foreground",reshapable:!0,routing:go.Link.AvoidsNodes,corner:5,curve:go.Link.JumpOver},e(go.Shape,{stroke:"#303B45",strokeWidth:2.5}),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:0,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","text")),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:-1,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","toText")));var r=[{key:"Products",items:[{name:"ProductID",iskey:!0,figure:"Decision",color:n},{name:"ProductName",iskey:!1,figure:"Cube1",color:i},{name:"SupplierID",iskey:!1,figure:"Decision",color:"purple"},{name:"CategoryID",iskey:!1,figure:"Decision",color:"purple"}]},{key:"Suppliers",items:[{name:"SupplierID",iskey:!0,figure:"Decision",color:n},{name:"CompanyName",iskey:!1,figure:"Cube1",color:i},{name:"ContactName",iskey:!1,figure:"Cube1",color:i},{name:"Address",iskey:!1,figure:"Cube1",color:i}]},{key:"Categories",items:[{name:"CategoryID",iskey:!0,figure:"Decision",color:n},{name:"CategoryName",iskey:!1,figure:"Cube1",color:i},{name:"Description",iskey:!1,figure:"Cube1",color:i},{name:"Picture",iskey:!1,figure:"TriangleUp",color:l}]},{key:"Order Details",items:[{name:"OrderID",iskey:!0,figure:"Decision",color:n},{name:"ProductID",iskey:!0,figure:"Decision",color:n},{name:"UnitPrice",iskey:!1,figure:"MagneticData",color:a},{name:"Quantity",iskey:!1,figure:"MagneticData",color:a},{name:"Discount",iskey:!1,figure:"MagneticData",color:a}]}];t.model=e(go.GraphLinksModel,{copiesArrays:!0,copiesArrayObjects:!0,nodeDataArray:r,linkDataArray:[{from:"Products",to:"Suppliers",text:"0..N",toText:"1"},{from:"Products",to:"Categories",text:"0..N",toText:"1"},{from:"Order Details",to:"Products",text:"0..N",toText:"1"}]})},showSelectTableDialog:function(){this.$refs.selectSingleTableDialog.beginSelectTable()},showSelectFieldConnectDialog:function(){var t="",i="",a=0;this.tableRelationDiagram.selection.each(function(e){e instanceof go.Node&&(0==a?(t=e.data.tableId,a++):i=e.data.tableId)}),i||(i=t),""!=t&&""!=i?this.$refs.tableRelationConnectTwoTableDialog.beginSelectConnect(t,i):DialogUtility.AlertText("请先选中2个节点")},addTableToDiagram:function(e){var o=e.id,t=[o],d=this;this.tableIsExistInDiagram(o)?DialogUtility.AlertText("该画布中已经存在表:"+e.text):AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:t},function(e){if(e.success){for(var t=e.data,i=e.exKVData.Tables[0],a=[],l=0;l<t.length;l++)t[l].displayText=t[l].fieldName+"["+t[l].fieldCaption+"]",a.push(d.rendererFieldStyle(t[l]));var n={tableId:o,loc:"0 0",fields:a,tableData:i,tableName:i.tableName,tableCaption:i.tableCaption,tableDisplayText:i.tableName+"["+i.tableCaption+"]",key:i.tableId};d.tableRelationDiagram.model.startTransaction("flash"),d.tableRelationDiagram.model.addNodeData(n),d.tableRelationDiagram.model.commitTransaction("flash")}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},deleteSelection:function(){this.tableRelationDiagram.commandHandler.canDeleteSelection()&&this.tableRelationDiagram.commandHandler.deleteSelection()},connectSelectionNode:function(e){this.tableRelationDiagram.model.startTransaction("flash");var t={lineId:StringUtility.Guid(),from:e.from.tableId,to:e.to.tableId,fromText:e.from.text,toText:e.to.text};this.tableRelationDiagram.model.addLinkData(t),this.tableRelationDiagram.model.commitTransaction("flash")},saveModelToServer:function(){if(this.recordId){var e={recordId:this.recordId,relationContent:JsonUtility.JsonToString(this.getDataJson()),relationDiagramJson:this.getDiagramJson()};AjaxUtility.Post(this.acInterface.saveDiagram,e,function(e){DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)}},initDiagram:function(){var a=this;window.goSamples&&goSamples();var e=go.GraphObject.make;this.tableRelationDiagram=e(go.Diagram,"tableRelationDiagramDiv",{allowDelete:!0,allowCopy:!1,layout:e(go.ForceDirectedLayout,{isOngoing:!1}),"undoManager.isEnabled":!0});var t=this.tableRelationDiagram,i=e(go.Brush,"Linear",{1:"#E6E6FA",0:"#FFFAF0"}),l=e(go.Panel,"Horizontal",e(go.Shape,{desiredSize:new go.Size(10,10)},new go.Binding("figure","figure"),new go.Binding("fill","color")),e(go.TextBlock,{stroke:"#333333",font:"bold 14px sans-serif"},new go.Binding("text","displayText")));t.nodeTemplate=e(go.Node,"Auto",{selectionAdorned:!0,resizable:!0,layoutConditions:go.Part.LayoutStandard&~go.Part.LayoutNodeSized,fromSpot:go.Spot.AllSides,toSpot:go.Spot.AllSides,isShadowed:!0,shadowColor:"#C5C1AA",doubleClick:function(e,t){var i=BaseUtility.BuildView(a.acInterface.tableView,{op:"view",recordId:t.data.tableId});DialogUtility.Frame_OpenIframeWindow(window,DialogUtility.DialogId,i,{title:"表设计"},0)}},new go.Binding("location","loc",go.Point.parse),new go.Binding("desiredSize","visible",function(e){return new go.Size(NaN,NaN)}).ofObject("LIST"),e(go.Shape,"RoundedRectangle",{fill:i,stroke:"#756875",strokeWidth:1}),e(go.Panel,"Table",{margin:8,stretch:go.GraphObject.Fill},e(go.RowColumnDefinition,{row:0,sizing:go.RowColumnDefinition.None}),e(go.TextBlock,{row:0,alignment:go.Spot.Center,margin:new go.Margin(0,14,0,2),font:"bold 16px sans-serif"},new go.Binding("text","tableDisplayText")),e("PanelExpanderButton","LIST",{row:0,alignment:go.Spot.TopRight}),e(go.Panel,"Vertical",{name:"LIST",row:1,padding:3,alignment:go.Spot.TopLeft,defaultAlignment:go.Spot.Left,stretch:go.GraphObject.Horizontal,itemTemplate:l},new go.Binding("itemArray","fields")))),t.linkTemplate=e(go.Link,{selectionAdorned:!0,layerName:"Foreground",reshapable:!0,routing:go.Link.AvoidsNodes,corner:5,curve:go.Link.JumpOver},e(go.Shape,{stroke:"#303B45",strokeWidth:1.5}),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:0,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","fromText")),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:-1,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","toText")))},loadRelationDetailData:function(){var i=this;AjaxUtility.Post(this.acInterface.getSingleDiagramData,{recordId:this.recordId,op:"Edit"},function(e){if(e.success){if(e.data.relationContent){var t=JsonUtility.StringToJson(e.data.relationContent);console.log(t),i.setDataJson(t),i.convertToFullJson(t,i.drawObjInDiagram)}}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},drawObjInDiagram:function(i){var e=go.GraphObject.make;e(go.Brush,"Linear",{0:"rgb(150, 150, 250)",.5:"rgb(86, 86, 186)",1:"rgb(86, 86, 186)"}),e(go.Brush,"Linear",{0:"rgb(158, 209, 159)",1:"rgb(67, 101, 56)"}),e(go.Brush,"Linear",{0:"rgb(206, 106, 100)",1:"rgb(180, 56, 50)"}),e(go.Brush,"Linear",{0:"rgb(254, 221, 50)",1:"rgb(254, 182, 50)"}),i.lineList;this.tableRelationDiagram.model=e(go.GraphLinksModel,{copiesArrays:!0,copiesArrayObjects:!0,nodeDataArray:i.tableList});var a=this;window.setTimeout(function(){a.tableRelationDiagram.model.startTransaction("flash");for(var e=0;e<i.lineList.length;e++){var t=i.lineList[e];a.tableRelationDiagram.model.addLinkData(t)}a.tableRelationDiagram.model.commitTransaction("flash")},500)},convertToFullJson:function(e,t){for(var o=JsonUtility.CloneSimple(e),i=new Array,a=0;a<e.tableList.length;a++)i.push(e.tableList[a].tableId);var d=this;AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:i},function(e){if(e.success){for(var t=e.data,i=e.exKVData.Tables,a=0;a<o.tableList.length;a++){var l=d.getSingleTableData(i,o.tableList[a].tableId);o.tableList[a].tableData=l,o.tableList[a].tableName=l.tableName,o.tableList[a].tableCaption=l.tableCaption,o.tableList[a].tableDisplayText=l.displayText;var n=d.getSingleTableFieldsData(t,o.tableList[a].tableId);o.tableList[a].fields=n,o.tableList[a].key=o.tableList[a].tableId}d.drawObjInDiagram(o)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},getSingleTableData:function(e,t){for(var i=0;i<e.length;i++)if(e[i].tableId==t)return e[i].displayText=e[i].tableName+"["+e[i].tableCaption+"]",e[i];return null},getSingleTableFieldsData:function(e,t){for(var i=[],a=0;a<e.length;a++)e[a].fieldTableId==t&&(e[a].displayText=e[a].fieldName+"["+e[a].fieldCaption+"]",i.push(this.rendererFieldStyle(e[a])));return i},rendererFieldStyle:function(e){return"是"==e.fieldIsPk?(e.color=this.getKeyFieldBrush(),e.figure="Decision"):(e.color=this.getNorFieldBrush(),e.figure="Cube1"),e},getKeyFieldBrush:function(){return go.GraphObject.make(go.Brush,"Linear",{0:"rgb(254, 221, 50)",1:"rgb(254, 182, 50)"})},getNorFieldBrush:function(){return go.GraphObject.make(go.Brush,"Linear",{0:"rgb(150, 150, 250)",.5:"rgb(86, 86, 186)",1:"rgb(86, 86, 186)"})},getDataJson:function(){var t={tableList:[],lineList:[]};return this.tableRelationDiagram.nodes.each(function(e){e instanceof go.Node?t.tableList.push({tableId:e.data.tableId,loc:e.location.x+" "+e.location.y}):e instanceof go.Link&&alert("line")}),this.tableRelationDiagram.links.each(function(e){e instanceof go.Link&&t.lineList.push({lineId:e.data.lineId,from:e.data.from,to:e.data.to,fromText:e.data.fromText,toText:e.data.toText})}),t},setDataJson:function(e){this.formatJson=e},getDiagramJson:function(){return this.tableRelationDiagram.model.toJson()},alertDataJson:function(){var e=this.getDataJson();DialogUtility.AlertJsonCode(e)},alertDiagramJson:function(){var e=this.getDiagramJson();DialogUtility.AlertJsonCode(e)},tableIsExistInDiagram:function(t){var i=!1;return this.tableRelationDiagram.nodes.each(function(e){e instanceof go.Node&&e.data.tableId==t&&(i=!0)}),i},downLoadModelPNG:function(){this.tableRelationDiagram.makeImageData({background:"white",returnType:"blob",scale:1,callback:function(e){var t=window.URL.createObjectURL(e),i="myBlobFile1.png",a=document.createElement("a");a.style="display: none",a.href=t,a.download=i,void 0===window.navigator.msSaveBlob?(document.body.appendChild(a),requestAnimationFrame(function(){a.click(),window.URL.revokeObjectURL(t),document.body.removeChild(a)})):window.navigator.msSaveBlob(e,i)}})}},template:'<div ref="relationContentOuterWrap" class="table-relation-content-outer-wrap">\n                    <div class="table-relation-content-header-wrap">\n                        <div class="table-relation-desc-outer-wrap" v-if="displayDesc">\n                            <div class="table-relation-desc">\n                                备注：{{relation.relationDesc}}\n                            </div>\n                        </div>\n                        <div class="table-relation-op-buttons-outer-wrap">\n                            <div class="table-relation-op-buttons-inner-wrap">\n                                <button-group shape="circle">\n                                    <i-button @click="showSelectTableDialog" type="success" icon="md-add"></i-button>\n                                    <i-button @click="showSelectFieldConnectDialog" type="primary" icon="logo-steam">连接</i-button>\n                                    <i-button disabled type="primary" icon="md-return-left">引入</i-button>\n                                    <i-button disabled type="primary" icon="md-qr-scanner">全屏</i-button>\n                                    <i-button disabled type="primary" icon="md-git-compare">历史</i-button>\n                                    <i-button @click="alertDataJson" type="primary" icon="md-code">数据Json</i-button>\n                                    <i-button @click="alertDiagramJson" type="primary" icon="md-code-working">图形Json</i-button>\n                                    <i-button @click="downLoadModelPNG" type="primary" icon="md-cloud-download">下载</i-button>\n                                    <i-button @click="saveModelToServer" type="primary" icon="logo-instagram">保存</i-button>\n                                    <i-button @click="deleteSelection" type="primary" icon="md-close"></i-button>\n                                </button-group>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="table-relation-content-wrap" id="tableRelationDiagramDiv"></div>\n                    <select-single-table-dialog ref="selectSingleTableDialog" @on-selected-table="addTableToDiagram"></select-single-table-dialog>\n                    <table-relation-connect-two-table-dialog ref="tableRelationConnectTwoTableDialog" @on-completed-connect="connectSelectionNode"></table-relation-connect-two-table-dialog>\n                </div>'}),Vue.component("db-table-relation-comp",{data:function(){return{acInterface:{getTablesDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList",getTableFieldsUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTableFieldsByTableId"},relationTableTree:{treeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){window._dbtablerelationcomp.selectedRelationTableNode(i)}}},tableTreeRootData:{id:"-1",text:"数据关联",parentId:"",nodeTypeName:"根节点",icon:"../../../Themes/Png16X16/coins_add.png",_nodeExType:"root",tableId:"-1"},currentSelectedNode:null},relationTableEditorView:{isShowTableEditDetail:!1,isSubEditTr:!1,isMainEditTr:!1,selPKData:[],selSelfKeyData:[],selForeignKeyData:[]},emptyEditorData:{id:"",parentId:"",singleName:"",pkFieldName:"",desc:"",selfKeyFieldName:"",outerKeyFieldName:"",relationType:"1ToN",isSave:"true",condition:"",tableId:"",tableName:"",tableCaption:""},currentEditorData:{id:"",parentId:"",singleName:"",pkFieldName:"",desc:"",selfKeyFieldName:"",outerKeyFieldName:"",relationType:"1ToN",isSave:"true",condition:"",tableId:"",tableName:"",tableCaption:""},selectTableTree:{oldSelectedDBLinkId:"JBuild4dLocationDBLink",disabledDBLink:!1,dbLinkEntities:[],tableTreeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!0,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){if("Table"==i.nodeTypeName){var a=window._dbtablerelationcomp;$("#divSelectTable").dialog("close"),a.addTableToRelationTableTree(i)}}}},tableTreeData:null,allTableTreeData:null,selectedTableName:"无"},tempDataStore:{},resultData:[],treeNodeSetting:{MainTableNodeImg:"../../../Themes/Png16X16/page_key.png",SubTableNodeImg:"../../../Themes/Png16X16/page_refresh.png"}}},mounted:function(){this.getTablesAndBindOldSelected(),this.relationTableTree.treeObj=$.fn.zTree.init($("#dataRelationZTreeUL"),this.relationTableTree.tableTreeSetting,this.relationTableTree.tableTreeRootData),this.relationTableTree.treeObj.expandAll(!0),this.relationTableTree.currentSelectedNode=this.relationTableTree.treeObj.getNodeByParam("id","-1"),window._dbtablerelationcomp=this},watch:{currentEditorData:{handler:function(e,t){for(var i=0;i<this.resultData.length;i++)this.resultData[i].id==e.id&&this.resultItemCopyEditEnableValue(this.resultData[i],e)},deep:!0}},methods:{resultItemCopyEditEnableValue:function(e,t){e.singleName=t.singleName,e.pkFieldName=t.pkFieldName,e.desc=t.desc,e.selfKeyFieldName=t.selfKeyFieldName,e.outerKeyFieldName=t.outerKeyFieldName,e.relationType=t.relationType,e.isSave=t.isSave,e.condition=t.condition},getTableFieldsByTableId:function(t){if("-1"==t)return null;if(this.tempDataStore["tableField_"+t])return this.tempDataStore["tableField_"+t];var i=this;return AjaxUtility.PostSync(this.acInterface.getTableFieldsUrl,{tableId:t},function(e){e.success?i.tempDataStore["tableField_"+t]=e.data:DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this),this.tempDataStore["tableField_"+t]?this.tempDataStore["tableField_"+t]:null},getEmptyResultItem:function(){return JsonUtility.CloneSimple(this.emptyEditorData)},getExistResultItem:function(e){for(var t=0;t<this.resultData.length;t++)if(this.resultData[t].id==e)return this.resultData[t];return null},getTablesAndBindOldSelected:function(){var t=this;AjaxUtility.Post(this.acInterface.getTablesDataUrl,{},function(e){e.success?(t.selectTableTree.dbLinkEntities=e.exKVData.dbLinkEntityList,t.selectTableTree.allTableTreeData=e.data,t.bindSelectTableTree(!0),fuzzySearchTreeObj(t.selectTableTree.tableTreeObj,t.$refs.txt_table_search_text.$refs.input,null,!0)):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},bindSelectTableTree:function(e){var t=CookieUtility.GetCookie("DBTRCDBLINKID");t&&e?this.selectTableTree.oldSelectedDBLinkId=t:t=this.selectTableTree.oldSelectedDBLinkId;for(var i=[],a=0;a<this.selectTableTree.allTableTreeData.length;a++)t==this.selectTableTree.allTableTreeData[a].outerId&&i.push(this.selectTableTree.allTableTreeData[a]);this.selectTableTree.tableTreeData=i,this.selectTableTree.tableTreeObj=$.fn.zTree.init($("#selectTableZTreeUL"),this.selectTableTree.tableTreeSetting,this.selectTableTree.tableTreeData),this.selectTableTree.tableTreeObj.expandAll(!0)},changeDBLink:function(e){CookieUtility.SetCookie1Month("DBTRCDBLINKID",e),this.bindSelectTableTree(!0)},getMainTableDBLinkId:function(){for(var e=0;e<this.selectTableTree.allTableTreeData.length;e++)if(this.selectTableTree.allTableTreeData[e].id==this.getMainTableId())return this.selectTableTree.allTableTreeData[e].outerId;return""},deleteSelectedRelationTreeNode:function(){if(this.relationTableTree.currentSelectedNode)if(this.isSelectedRootRelationTableNode())DialogUtility.AlertText("不能删除根节点!");else if(this.relationTableTree.currentSelectedNode.isParent)DialogUtility.AlertText("不能删除父节点!");else{for(var e=0;e<this.resultData.length;e++)if(this.resultData[e].id==this.relationTableTree.currentSelectedNode.id){this.resultData.splice(e,1);break}this.resultItemCopyEditEnableValue(this.currentEditorData,this.emptyEditorData),this.currentEditorData.id="",this.currentEditorData.parentId="",this.$refs.sqlGeneralDesignComp.setValue(""),this.relationTableEditorView.selPKData=[],this.relationTableEditorView.selSelfKeyData=[],this.relationTableEditorView.selForeignKeyData=[],this.relationTableEditorView.isShowTableEditDetail=!1,this.relationTableTree.treeObj.removeNode(this.relationTableTree.currentSelectedNode,!1),this.relationTableTree.currentSelectedNode=null}else DialogUtility.AlertText("请选择要删除的节点!")},beginSelectTableToRelationTable:function(){if(this.relationTableTree.currentSelectedNode){$("#divSelectTable").dialog({modal:!0,height:600,width:700});var e=this.getMainTableDBLinkId();this.selectTableTree.disabledDBLink=!!e&&(this.selectTableTree.oldSelectedDBLinkId=e,this.bindSelectTableTree(!1),!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"选择一个父节点!",null)},appendMainTableNodeProp:function(e){e._nodeExType="MainNode",e.icon=this.treeNodeSetting.MainTableNodeImg},appendSubTableNodeProp:function(e){e._nodeExType="SubNode",e.icon=this.treeNodeSetting.SubTableNodeImg},buildRelationTableNode:function(e,t){return"root"==this.relationTableTree.currentSelectedNode._nodeExType?this.appendMainTableNodeProp(e):this.appendSubTableNodeProp(e),e.tableId=e.id,e.id=t||StringUtility.Guid(),e},getMainRelationTableNode:function(){var e=this.relationTableTree.treeObj.getNodeByParam("_nodeExType","MainNode");return e||null},getMainTableId:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().tableId:""},getMainTableName:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().value:""},getMainTableCaption:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().attr1:""},isSelectedRootRelationTableNode:function(){return"-1"==this.relationTableTree.currentSelectedNode.id},isSelectedMainRelationTableNode:function(){return"MainNode"==this.relationTableTree.currentSelectedNode._nodeExType},addTableToRelationTableTree:function(e){if(e=this.buildRelationTableNode(e),null!=this.getMainRelationTableNode()&&this.isSelectedRootRelationTableNode())DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"只允许存在一个主记录!",null);else{this.relationTableTree.treeObj.addNodes(this.relationTableTree.currentSelectedNode,-1,e,!1);var t=this.getEmptyResultItem();t.id=e.id,t.parentId=this.relationTableTree.currentSelectedNode.id,t.tableId=e.tableId,t.tableName=e.value,t.tableCaption=e.attr1,t.tableCode=e.code,this.resultData.push(t)}},selectedRelationTableNode:function(e){if(this.relationTableTree.currentSelectedNode=e,this.relationTableEditorView.isShowTableEditDetail=!this.isSelectedRootRelationTableNode(),this.relationTableEditorView.isMainEditTr=this.isSelectedMainRelationTableNode(),this.relationTableEditorView.isSubEditTr=!this.isSelectedMainRelationTableNode(),!this.isSelectedRootRelationTableNode()){this.relationTableEditorView.selPKData=null!=this.getTableFieldsByTableId(e.tableId)?this.getTableFieldsByTableId(e.tableId):[],this.relationTableEditorView.selSelfKeyData=null!=this.getTableFieldsByTableId(e.tableId)?this.getTableFieldsByTableId(e.tableId):[];var t=e.getParentNode();this.relationTableEditorView.selForeignKeyData=null!=this.getTableFieldsByTableId(t.tableId)?this.getTableFieldsByTableId(t.tableId):[],this.currentEditorData.id=this.relationTableTree.currentSelectedNode.id,this.currentEditorData.parentId=t.id;var i=this.getExistResultItem(e.id);if(null!=i){this.resultItemCopyEditEnableValue(this.currentEditorData,i);var a=this;window.setTimeout(function(){a.$refs.sqlGeneralDesignComp.setValue(a.currentEditorData.condition),a.$refs.sqlGeneralDesignComp.setAboutTableFields(a.relationTableEditorView.selSelfKeyData,a.relationTableEditorView.selForeignKeyData)},300)}else alert("通过getExistResultItem获取不到数据!")}},getResultData:function(){return this.resultData},serializeRelation:function(e){alert("serializeRelation已经停用")},deserializeRelation:function(e){alert("deserializeRelation已经停用")},getValue:function(){return{mainTableId:this.getMainTableId(),mainTableName:this.getMainTableName(),mainTableCaption:this.getMainTableCaption(),relationData:this.resultData}},setValue:function(e){var t=JsonUtility.StringToJson(e);this.resultData=t;for(var i=new Array,a=0;a<t.length;a++){var l={value:t[a].tableName,attr1:t[a].tableCaption,text:"【"+t[a].tableCode+"】"+t[a].tableCaption+"【"+t[a].tableName+"】",id:t[a].id,parentId:t[a].parentId,tableId:t[a].tableId,tableName:t[a].tableName,tableCaption:t[a].tableCaption,tableCode:t[a].tableCode};"-1"==t[a].parentId?this.appendMainTableNodeProp(l):this.appendSubTableNodeProp(l),i.push(l)}i.push(this.relationTableTree.tableTreeRootData),this.relationTableTree.treeObj=$.fn.zTree.init($("#dataRelationZTreeUL"),this.relationTableTree.tableTreeSetting,i),this.relationTableTree.treeObj.expandAll(!0)},alertSerializeRelation:function(){DialogUtility.AlertJsonCode(this.resultData)},inputDeserializeRelation:function(){DialogUtility.Prompt(window,{width:900,height:600},DialogUtility.DialogPromptId,"请贴入数据关联Json设置字符串",function(e){try{window._dbtablerelationcomp.setValue(e)}catch(e){alert("反序列化失败:"+e)}})}},template:'<div class="db-table-relation-comp">\n                <divider orientation="left" :dashed="true" style="font-size: 12px;margin-top: 0px;margin-bottom: 10px">数据关系关联设置</divider>\n                <div style="float: left;width: 350px;height: 330px;border: #ddddf1 1px solid;border-radius: 4px;padding: 10px 10px 10px 10px;">\n                    <button-group shape="circle" style="margin: auto">\n                        <i-button type="success" @click="beginSelectTableToRelationTable">&nbsp;添加&nbsp;</i-button>\n                        <i-button @click="deleteSelectedRelationTreeNode">&nbsp;删除&nbsp;</i-button>\n                        <i-button @click="alertSerializeRelation">序列化</i-button>\n                        <i-button @click="inputDeserializeRelation">反序列化</i-button>\n                        <i-button>说明</i-button>\n                    </button-group>\n                    <ul id="dataRelationZTreeUL" class="ztree" style="overflow-x: hidden"></ul>\n                </div>\n                <div style="float: right;width: 630px;height: 330px;border: #ddddf1 1px solid;border-radius: 4px;padding: 10px 10px 10px 10px;">\n                    <table class="light-gray-table" cellpadding="0" cellspacing="0" border="0" v-if="relationTableEditorView.isShowTableEditDetail">\n                        <colgroup>\n                            <col style="width: 17%" />\n                            <col style="width: 33%" />\n                            <col style="width: 15%" />\n                            <col style="width: 35%" />\n                        </colgroup>\n                        <tbody>\n                            <tr>\n                                <td class="label">SingleName：</td>\n                                <td>\n                                    <i-input v-model="currentEditorData.singleName" size="small" placeholder="本关联中的唯一名称,可以为空" />\n                                </td>\n                                <td class="label">PKKey：</td>\n                                <td>\n                                    <i-select placeholder="默认使用Id字段" v-model="currentEditorData.pkFieldName" size="small" style="width:199px">\n                                        <i-option v-for="item in relationTableEditorView.selPKData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>\n                                    </i-select>\n                                </td>\n                            </tr>\n                            <tr v-if="relationTableEditorView.isSubEditTr">\n                                <td class="label">数据关系：</td>\n                                <td>\n                                    <radio-group v-model="currentEditorData.relationType" type="button" size="small">\n                                        <radio label="1To1">1:1</radio>\n                                        <radio label="1ToN">1:N</radio>\n                                    </radio-group>\n                                </td>\n                                <td class="label">是否保存：</td>\n                                <td>\n                                    <radio-group v-model="currentEditorData.isSave" type="button" size="small">\n                                        <radio label="true">是</radio>\n                                        <radio label="false">否</radio>\n                                    </radio-group>\n                                </td>\n                            </tr>\n                            <tr v-if="relationTableEditorView.isSubEditTr">\n                                <td class="label">本身关联字段：</td>\n                                <td>\n                                     <i-select placeholder="默认使用Id字段" v-model="currentEditorData.selfKeyFieldName" size="small" style="width:199px">\n                                        <i-option v-for="item in relationTableEditorView.selSelfKeyData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>\n                                    </i-select>\n                                </td>\n                                <td class="label">外联字段：</td>\n                                <td>\n                                     <i-select placeholder="默认使用Id字段" v-model="currentEditorData.outerKeyFieldName" size="small" style="width:199px">\n                                        <i-option v-for="item in relationTableEditorView.selForeignKeyData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>\n                                    </i-select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class="label">Desc：</td>\n                                <td colspan="3">\n                                    <i-input v-model="currentEditorData.desc" size="small" placeholder="说明" />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class="label">加载条件：</td>\n                                <td colspan="3">\n                                    <sql-general-design-comp ref="sqlGeneralDesignComp" :sqlDesignerHeight="74" v-model="currentEditorData.condition" :showField="true"></sql-general-design-comp>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div id="divSelectTable" title="请选择表" style="display: none">\n                    <i-input search class="input_border_bottom" ref="txt_table_search_text" placeholder="请输入表名或者标题">\n                        <i-select v-model="selectTableTree.oldSelectedDBLinkId" slot="prepend" style="width: 280px" @on-change="changeDBLink" :disabled="selectTableTree.disabledDBLink">\n                            <i-option :value="item.dbId" v-for="item in selectTableTree.dbLinkEntities">{{item.dbLinkName}}</i-option>\n                        </i-select>\n                    </i-input>\n                    <ul id="selectTableZTreeUL" class="ztree div-custom-scroll" style="height: 500px;overflow-y:scroll;overflow-x:hidden"></ul>\n                </div>\n              </div>'}),Vue.component("design-html-elem-list",{data:function(){return{}},mounted:function(){},methods:{},template:'<div class="design-html-elem-list-wrap">            <div class="design-html-elem-list-item">格式化</div>            <div class="design-html-elem-list-item">说明</div>        </div>'}),Vue.component("fd-control-base-info",{props:["value"],data:function(){return{baseInfo:{id:"",serialize:"",name:"",className:"",placeholder:"",custReadonly:"",custDisabled:"",style:"",desc:"",status:""}}},watch:{baseInfo:function(e){this.$emit("input",e)},value:function(e){this.baseInfo=e}},mounted:function(){this.baseInfo=this.value,this.baseInfo.status||(this.baseInfo.status="enable")},methods:{},template:'<table class="html-design-plugin-dialog-table-wraper" cellpadding="0" cellspacing="0" border="0">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 240px" />\n                        <col style="width: 90px" />\n                        <col style="width: 120px" />\n                        <col style="width: 90px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>ID：</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.id" />\n                            </td>\n                            <td>Serialize：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.serialize">\n                                    <radio label="true">是</radio>\n                                    <radio label="false">否</radio>\n                                </radio-group>\n                            </td>\n                            <td>启用：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.status">\n                                    <radio label="enable">是</radio>\n                                    <radio label="disable">否</radio>\n                                </radio-group>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Name：</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.name" />\n                            </td>\n                            <td>ClassName：</td>\n                            <td colspan="3">\n                                <input type="text" v-model="baseInfo.className" />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Placeholder</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.placeholder" />\n                            </td>\n                            <td>Readonly：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.custReadonly">\n                                    <radio label="readonly">是</radio>\n                                    <radio label="noreadonly">否</radio>\n                                </radio-group>\n                            </td>\n                            <td>Disabled：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.custDisabled">\n                                    <radio label="disabled">是</radio>\n                                    <radio label="nodisabled">否</radio>\n                                </radio-group>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>样式：</td>\n                            <td colspan="5">\n                                <textarea rows="7" v-model="baseInfo.style"></textarea>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>备注：</td>\n                            <td colspan="5">\n                                <textarea rows="8" v-model="baseInfo.desc"></textarea>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("fd-control-bind-to",{props:["bindToFieldProp","defaultValueProp","validateRulesProp"],data:function(){return{bindToField:{relationId:"",tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},validateRules:{msg:"",rules:[]},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tempData:{defaultDisplayText:""}}},watch:{bindToProp:function(e){console.log(e)},bindToFieldProp:function(e){this.bindToField=e},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))},validateRulesProp:function(e){this.validateRules=e}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{setCompleted:function(){this.$emit("on-set-completed",this.bindToField,this.defaultValue,this.validateRules)},selectBindFieldView:function(){window._SelectBindObj=this,window.parent.appForm.selectBindToSingleFieldDialogBegin(window,this.getSelectFieldResultValue())},setSelectFieldResultValue:function(e){this.bindToField={},this.bindToField.relationId=null!=e?(this.bindToField.fieldName=e.fieldName,this.bindToField.tableId=e.tableId,this.bindToField.tableName=e.tableName,this.bindToField.tableCaption=e.tableCaption,this.bindToField.fieldCaption=e.fieldCaption,this.bindToField.fieldDataType=e.fieldDataType,this.bindToField.fieldLength=e.fieldLength,e.relationId):(this.bindToField.fieldName="",this.bindToField.tableId="",this.bindToField.tableName="",this.bindToField.tableCaption="",this.bindToField.fieldCaption="",this.bindToField.fieldDataType="",this.bindToField.fieldLength=""),this.setCompleted()},getSelectFieldResultValue:function(){return JsonUtility.CloneSimple(this.bindToField)},selectDefaultValueView:function(){window._SelectBindObj=this,window.parent.appForm.selectDefaultValueDialogBegin(window,null)},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText=""),this.setCompleted()},selectValidateRuleView:function(){window._SelectBindObj=this,window.parent.appForm.selectValidateRuleDialogBegin(window,this.getSelectValidateRuleResultValue())},setSelectValidateRuleResultValue:function(e){null!=e?(this.validateRules=e,this.setCompleted()):(this.validateRules.msg="",this.validateRules.rules=[])},getSelectValidateRuleResultValue:function(){return this.validateRules}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col style="width: 100px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td colspan="4">\n                                绑定到表<button class="btn-select fright" v-on:click="selectBindFieldView">...</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>表编号：</td>\n                            <td>{{bindToField.tableId}}</td>\n                            <td>数据源：</td>\n                            <td>\n                                \n                            </td>\n                        </tr>\n                        <tr>\n                            <td>表名：</td>\n                            <td>{{bindToField.tableName}}</td>\n                            <td>表标题：</td>\n                            <td>{{bindToField.tableCaption}}</td>\n                        </tr>\n                        <tr>\n                            <td>字段名：</td>\n                            <td>{{bindToField.fieldName}}</td>\n                            <td>字段标题：</td>\n                            <td>{{bindToField.fieldCaption}}</td>\n                        </tr>\n                        <tr>\n                            <td>类型：</td>\n                            <td>{{bindToField.fieldDataType}}</td>\n                            <td>长度：</td>\n                            <td>{{bindToField.fieldLength}}</td>\n                        </tr>\n                        <tr>\n                            <td colspan="4">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td>\n                        </tr>\n                        <tr style="height: 35px">\n                            <td colspan="4" style="background-color: #ffffff;">\n                            {{tempData.defaultDisplayText}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="4">\n                                校验规则<button class="btn-select fright" v-on:click="selectValidateRuleView">...</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="4" style="background-color: #ffffff">\n                                <table class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 100px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td style="text-align: center;">提示消息：</td>\n                                            <td>{{validateRules.msg}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td style="text-align: center;">验证类型</td>\n                                            <td style="background: #e8eaec;text-align: center;">参数</td>\n                                        </tr>\n                                        <tr v-for="ruleItem in validateRules.rules">\n                                            <td style="background: #ffffff;text-align: center;color: #ad9361">{{ruleItem.validateType}}</td>\n                                            <td style="background: #ffffff;text-align: center;"><p v-if="ruleItem.validateParas === \'\'">无参数</p><p v-else>{{ruleItem.validateParas}}</p></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("fd-control-datasource",{data:function(){return{normalDataSource:{defaultIsNull:"true",sqlDataSource:"",dictionaryIdDataSource:"",restDataSource:"",staticDataSource:""}}},watch:{},mounted:function(){},methods:{getValue:function(){return this.normalDataSource.sqlDataSource=encodeURIComponent(this.normalDataSource.sqlDataSource),this.normalDataSource},setValue:function(e){this.normalDataSource=e,this.normalDataSource.sqlDataSource=decodeURIComponent(e.sqlDataSource),this.$refs.sqlGeneralDesignComp.setValue(this.normalDataSource.sqlDataSource)}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col style="width: 100px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>\n                                默认空：\n                            </td>\n                            <td>\n                                <radio-group type="button" style="margin: auto" v-model="normalDataSource.defaultIsNull">\n                                    <radio label="true">是</radio>\n                                    <radio label="false">否</radio>\n                                </radio-group>\n                            </td>\n                            <td colspan="2">\n                                获取数据源优先级别->Rest接口->本地接口->sql->静态值\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                静态值：\n                            </td>\n                            <td colspan="3">\n\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                数据字典：\n                            </td>\n                            <td colspan="3">\n\n                            </td>\n                        </tr>\n                        <tr>\n                            <td rowspan="2">\n                                SQL数据源：\n                            </td>\n                            <td colspan="3">\n                                <span style="color: red">[ITEXT与IVALUE请使用大写]</span>示例:【SELECT \'1\' ITEXT,\'2\' IVALUE】\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="3" style="background-color: #FFFFFF">\n                                <sql-general-design-comp ref="sqlGeneralDesignComp" :sql-designer-height="74"  v-model="normalDataSource.sqlDataSource"></sql-general-design-comp>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                REST数据源：\n                            </td>\n                            <td colspan="3">\n                                \n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("fd-control-select-bind-to-single-field-dialog",{data:function(){var a=this;return{acInterface:{getTablesDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList",getTableFieldsDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTableFieldsByTableId",getTablesFieldsByTableIds:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesFieldsByTableIds"},selectedData:{relationId:"",tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},tableTree:{tableTreeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"displayText"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.selectedData.tableId=i.tableId,a.selectedData.tableName=i.tableName,a.selectedData.tableCaption=i.tableCaption,a.selectedData.fieldName="",a.selectedData.fieldCaption="",a.selectedData.fieldDataType="",a.selectedData.fieldLength="",a.fieldTable.fieldData=[],a.filterAllFieldsToTable(a.selectedData.tableId)},onDblClick:function(e,t,i){},onAsyncSuccess:function(e,t,i,a){}}},tableTreeData:null,selectedTableName:"无"},fieldTable:{fieldData:[],tableHeight:470,columnsConfig:[{title:" ",width:60,key:"isSelectedToBind",render:function(e,t){return"1"==t.row.isSelectedToBind?e("div",{class:"list-row-button-wrap"},[e("div",{class:"list-row-button selected"})]):e("div",{class:""},"")}},{title:"名称",key:"fieldName",align:"center"},{title:"标题",key:"fieldCaption",align:"center"}]},oldRelationDataString:"",relationData:null,allFields:null,oldBindFieldData:null}},mounted:function(){},methods:{beginSelect:function(e,t){if(console.log("关联表数据："),console.log(e),console.log("已经绑定了的数据："),console.log(t),null==e||""==e||0==e.length)return DialogUtility.AlertText("请先设置表单的数据关联！"),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),void $(window.document).find(".ui-dialog").css("zIndex",10101);var i=this.$refs.fdControlSelectBindToSingleFieldDialogWrap;if(DialogUtility.DialogElemObj(i,{modal:!0,height:680,width:980,title:"选择绑定字段"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.oldBindFieldData=t,this.selectedData=JsonUtility.CloneSimple(t),JsonUtility.JsonToString(e)!=this.oldRelationDataString){for(var a=0;a<e.length;a++)e[a].displayText=e[a].tableName+"["+e[a].tableCaption+"]("+e[a].relationType+")","-1"==e[a].parentId&&(e[a].displayText=e[a].tableName+"["+e[a].tableCaption+"]"),e[a].icon="../../../Themes/Png16X16/table.png";this.tableTree.tableTreeObj=$.fn.zTree.init($("#tableZTreeUL"),this.tableTree.tableTreeSetting,e),this.tableTree.tableTreeObj.expandAll(!0),this.oldRelationDataString=JsonUtility.JsonToString(e),this.relationData=e,this.getAllTablesFields(e)}else this.resetFieldToSelectedStatus(this.allFields);if(t&&t.tableId&&""!=t.tableId){var l=this.tableTree.tableTreeObj.getNodeByParam("tableId",t.tableId);this.tableTree.tableTreeObj.selectNode(l,!1,!0)}},resetFieldToSelectedStatus:function(e){for(var t=0;t<this.fieldTable.fieldData.length;t++)this.fieldTable.fieldData[t].isSelectedToBind="0";if(e){for(t=0;t<e.length;t++)e[t].isSelectedToBind="0",e[t].fieldTableId==this.oldBindFieldData.tableId&&e[t].fieldName==this.oldBindFieldData.fieldName&&(e[t].isSelectedToBind="1");this.allFields=e}this.filterAllFieldsToTable(this.oldBindFieldData.tableId)},getAllTablesFields:function(e){for(var t=[],i=0;i<e.length;i++)t.push(e[i].tableId);var a=this;AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:t},function(e){if(e.success){var t=e.data;e.exKVData.Tables[0];console.log("重新获取数据"),console.log(t),a.resetFieldToSelectedStatus(t)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},filterAllFieldsToTable:function(e){if(e){for(var t=[],i=0;i<this.allFields.length;i++)this.allFields[i].fieldTableId==e&&t.push(this.allFields[i]);this.fieldTable.fieldData=t,console.log(this.fieldTable.fieldData)}},selectedField:function(e,t){this.selectedData.fieldName=e.fieldName,this.selectedData.fieldCaption=e.fieldCaption,this.selectedData.fieldDataType=e.fieldDataType,this.selectedData.fieldLength=e.fieldDataLength;var i=this.tableTree.tableTreeObj.getNodeByParam("tableId",e.fieldTableId);this.selectedData.tableId=i.tableId,this.selectedData.tableName=i.tableName,this.selectedData.tableCaption=i.tableCaption,this.selectedData.relationId=i.id},selectComplete:function(){var e=this.selectedData;StringUtility.IsNullOrEmpty(e.tableId)||StringUtility.IsNullOrEmpty(e.fieldName)?DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择需要绑定的字段!",null):(this.$emit("on-selected-bind-to-single-field",e),this.handleClose())},clearComplete:function(){window.OpenerWindowObj[this.getSelectInstanceName()].setSelectFieldResultValue(null),this.handleClose()},handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.fdControlSelectBindToSingleFieldDialogWrap)}},template:'<div ref="fdControlSelectBindToSingleFieldDialogWrap" class="general-edit-page-wrap design-dialog-wraper-single-dialog" style="display: none">\n                    <div class="select-table-wraper">\n                        <divider orientation="left" :dashed="true" style="font-size: 12px">选择表</divider>\n                        \x3c!--<input type="text" id="txtSearchTableTree" style="width: 100%;height: 32px;margin-top: 2px" />--\x3e\n                        <ul id="tableZTreeUL" class="ztree"></ul>\n                    </div>\n                    <div class="select-field-wraper iv-list-page-wrap">\n                        <divider orientation="left" :dashed="true" style="font-size: 12px">选择字段</divider>\n                        <i-table border :columns="fieldTable.columnsConfig" :data="fieldTable.fieldData"\n                                 class="iv-list-table" :highlight-row="true"\n                                 @on-row-click="selectedField" :height="fieldTable.tableHeight" size="small" no-data-text="请选择表"></i-table>\n                    </div>\n                    <div class="button-outer-wrap">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="selectComplete()"> 确 认 </i-button>\n                                <i-button type="primary" @click="clearComplete()"> 清 空 </i-button>\n                                <i-button @click="handleClose()">关 闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("inner-form-button-list-comp",{props:["formId"],data:function(){var a=this;return{columnsConfig:[{title:"标题",key:"caption",align:"center"},{title:"类型",key:"buttonType",align:"center"},{title:"操作",key:"id",width:200,align:"center",render:function(e,t){var i=[];return"保存按钮"==t.row.buttonType&&i.push(ListPageUtility.IViewTableInnerButton.EditButton(e,t,"id",a)),i.push(ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,"id",a)),i.push(ListPageUtility.IViewTableInnerButton.MoveUpButton(e,t,"id",a)),i.push(ListPageUtility.IViewTableInnerButton.MoveDownButton(e,t,"id",a)),e("div",{class:"list-row-button-wrap"},i)}}],tableData:[],innerSaveButtonEditData:{caption:"",saveAndClose:"true",apis:[],fields:[],id:"",buttonType:"保存按钮",custServerResolveMethod:"",custServerResolveMethodPara:"",custClientRendererMethod:"",custClientRendererMethodPara:"",custClientRendererAfterMethod:"",custClientRendererAfterMethodPara:"",custClientClickBeforeMethod:"",custClientClickBeforeMethodPara:""},api:{acInterface:{getAPIData:"/Rest/Builder/ApiItem/GetAPISForZTreeNodeList"},apiTreeObj:null,apiTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.api.apiSelectData=i}}},apiData:null,apiSelectData:null,editTableObject:null,editTableConfig:{Status:"Edit",AddAfterRowEvent:null,DataField:"fieldName",Templates:[{Title:"API名称",BindName:"value",Renderer:"EditTable_Label",TitleCellClassName:"TitleCell",Formater:function(e){return a.getAPIText(e)}},{Title:"调用顺序",BindName:"runTime",Renderer:"EditTable_Select",ClientDataSource:[{Text:"之前",Value:"之前"},{Text:"之后",Value:"之后"}],Width:100}],RowIdCreater:function(){},TableClass:"edit-table",RendererTo:"apiContainer",TableId:"apiContainerTable",TableAttrs:{cellpadding:"1",cellspacing:"1",border:"1"}}},field:{acInterface:{getFormMainTableFields:"/Rest/Builder/Form/GetFormMainTableFields"},editTableObject:null,editTableConfig:{Status:"Edit",AddAfterRowEvent:null,DataField:"fieldName",Templates:[{Title:"表名标题",BindName:"tableName",Renderer:"EditTable_Label"},{Title:"字段标题",BindName:"fieldName",Renderer:"EditTable_Select"},{Title:"默认值",BindName:"defaultValue",Renderer:"EditTable_SelectDefaultValue",Hidden:!1}],RowIdCreater:function(){},TableClass:"edit-table",RendererTo:"fieldContainer",TableId:"fieldContainerTable",TableAttrs:{cellpadding:"1",cellspacing:"1",border:"1"}}},oldFormId:""}},mounted:function(){},methods:{ready:function(e){null!=e&&""!=e&&(this.tableData=JsonUtility.StringToJson(e)),this.bindAPITreeAndInitEditTable(null)},getJson:function(){return JsonUtility.JsonToString(this.tableData)},handleClose:function(e){DialogUtility.CloseDialogElem(this.$refs[e])},edit:function(e,t){"保存按钮"==t.row.buttonType&&this.editInnerFormSaveButton(t)},del:function(e,t){for(var i=0;i<this.tableData.length;i++)this.tableData[i].id==e&&ArrayUtility.Delete(this.tableData,i)},moveUp:function(e,t){for(var i=0;i<this.tableData.length;i++)if(this.tableData[i].id==e)return void ArrayUtility.MoveUp(this.tableData,i)},moveDown:function(e,t){for(var i=0;i<this.tableData.length;i++)if(this.tableData[i].id==e)return void ArrayUtility.MoveDown(this.tableData,i)},addInnerFormSaveButton:function(){if(null!=this.formId&&""!=this.formId){this.editSaveButtonStatuc="add",this.resetInnerSaveButtonData();var e=this.$refs.innerFormButtonEdit;DialogUtility.DialogElemObj(e,{modal:!0,height:520,width:720,title:"窗体内按钮"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.innerSaveButtonEditData.id="inner_form_button_"+StringUtility.Timestamp(),this.bindTableFields(null),this.clearAPI()}else DialogUtility.AlertText("请先设置绑定的窗体!")},editInnerFormSaveButton:function(e){this.addInnerFormSaveButton(),this.innerSaveButtonEditData=JsonUtility.CloneStringify(e.row),this.editSaveButtonStatuc="edit",this.bindAPITreeAndInitEditTable(this.innerSaveButtonEditData.apis),this.bindTableFields(this.innerSaveButtonEditData.fields)},resetInnerSaveButtonData:function(){this.innerSaveButtonEditData={caption:"",saveAndClose:"true",apis:[],fields:[],id:"",buttonType:"保存按钮",custServerResolveMethod:"",custServerResolveMethodPara:"",custClientRendererMethod:"",custClientRendererMethodPara:"",custClientRendererAfterMethod:"",custClientRendererAfterMethodPara:"",custClientClickBeforeMethod:"",custClientClickBeforeMethodPara:""}},saveInnerSaveButtonToList:function(){var e=JsonUtility.CloneSimple(this.innerSaveButtonEditData);if(this.api.editTableObject.CompletedEditingRow(),e.apis=this.api.editTableObject.GetSerializeJson(),this.field.editTableObject.CompletedEditingRow(),e.fields=this.field.editTableObject.GetSerializeJson(),"add"==this.editSaveButtonStatuc)this.tableData.push(e);else for(var t=0;t<this.tableData.length;t++)this.tableData[t].id==e.id&&Vue.set(this.tableData,t,e);this.handleClose("innerFormButtonEdit")},bindTableFields:function(a){this.oldFormId!=this.formId&&AjaxUtility.Post(this.field.acInterface.getFormMainTableFields,{formId:this.formId},function(e){for(var t=[],i=0;i<e.data.length;i++)t.push({Value:e.data[i].fieldName,Text:e.data[i].fieldCaption});this.field.editTableConfig.Templates[0].DefaultValue={Type:"Const",Value:e.data[0].tableName},this.field.editTableConfig.Templates[1].ClientDataSource=t,this.field.editTableObject||(this.field.editTableObject=Object.create(EditTable),this.field.editTableObject.Initialization(this.field.editTableConfig)),this.oldFormId=this.formId,a&&this.field.editTableObject.LoadJsonData(a)},this),this.field.editTableObject&&this.field.editTableObject.RemoveAllRow(),a&&this.field.editTableObject&&this.field.editTableObject.LoadJsonData(a)},addField:function(){this.field.editTableObject.AddEditingRowByTemplate()},removeField:function(){this.field.editTableObject.RemoveRow()},addInnerFormCloseButton:function(){var e={caption:"关闭",id:"inner_close_button_"+StringUtility.Timestamp(),buttonType:"关闭按钮"};this.tableData.push(e)},bindAPITreeAndInitEditTable:function(e){this.api.apiData||(AjaxUtility.Post(this.api.acInterface.getAPIData,{},function(e){if(e.success){if(this.api.apiData=e.data,null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++)"Group"==e.data[t].nodeTypeName?e.data[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/package.png":e.data[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/application_view_columns.png";this.api.apiTreeObj=$.fn.zTree.init($("#apiZTreeUL"),this.api.apiTreeSetting,e.data),this.api.apiTreeObj.expandAll(!0),fuzzySearchTreeObj(this.api.apiTreeObj,this.$refs.txt_search_api_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this),this.api.editTableObject=Object.create(EditTable),this.api.editTableObject.Initialization(this.api.editTableConfig)),this.api.editTableObject.RemoveAllRow(),e&&this.api.editTableObject.LoadJsonData(e)},getApiConfigAndBindToTable:function(){},addAPI:function(){"API"==this.api.apiSelectData.nodeTypeName?this.api.editTableObject.AddEditingRowByTemplate([],{value:this.api.apiSelectData.value,runTime:"之后"}):DialogUtility.AlertText("请选择需要添加的API!")},removeAPI:function(){this.api.editTableObject.RemoveRow()},clearAPI:function(){this.api.editTableObject.RemoveAllRow()},getAPIText:function(e){for(var t=0;t<this.api.apiData.length;t++)if("API"==this.api.apiData[t].nodeTypeName&&this.api.apiData[t].value==e)return this.api.apiData[t].text;return""}},template:'<div style="height: 210px" class="iv-list-page-wrap">\n                    <div ref="innerFormButtonEdit" class="html-design-plugin-dialog-wraper general-edit-page-wrap" style="display: none;margin-top: 0px">\n                        <tabs size="small">\n                            <tab-pane label="绑定信息">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 60px" />\n                                        <col style="width: 220px" />\n                                        <col style="width: 100px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td>标题：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.caption" />\n                                            </td>\n                                            <td>保存并关闭：</td>\n                                            <td>\n                                                <radio-group type="button" style="margin: auto" v-model="innerSaveButtonEditData.saveAndClose">\n                                                    <radio label="true">是</radio>\n                                                    <radio label="false">否</radio>\n                                                </radio-group>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>字段：</td>\n                                            <td colspan="3">\n                                                <div style="height: 140px">\n                                                    <div style="float: left;width: 94%">\n                                                        <div id="fieldContainer" class="edit-table-wrap" style="height: 320px;overflow: auto;width: 98%;margin: auto"></div>\n                                                    </div>\n                                                    <div style="float: right;width: 5%">\n                                                        <button-group vertical>\n                                                            <i-button size="small" type="success" icon="md-add" @click="addField"></i-button>\n                                                            <i-button size="small" type="primary" icon="md-close" @click="removeField"></i-button>\n                                                        </button-group>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                            <tab-pane label="API设置">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 320px" />\n                                        <col style="width: 60px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td style="background: #ffffff">\n                                                <i-input search class="input_border_bottom" ref="txt_search_api_text" placeholder="请输入API名称"></i-input>\n                                                <ul id="apiZTreeUL" class="ztree" style="height: 320px;overflow: auto"></ul>\n                                            </td>\n                                            <td style="text-align: center;background-color: #f8f8f8">\n                                                <button-group vertical>\n                                                    <i-button size="small" type="success" icon="md-add" @click="addAPI"></i-button>\n                                                    <i-button size="small" type="primary" icon="md-close" @click="removeAPI"></i-button>\n                                                    <i-button size="small" type="primary" icon="ios-trash" @click="clearAPI"></i-button>\n                                                </button-group>\n                                            </td>\n                                            <td style="background: #ffffff;" valign="top">\n                                                <div id="apiContainer" class="edit-table-wrap" style="height: 340px;overflow: auto;width: 98%;margin: auto"></div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                            <tab-pane label="开发扩展">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 150px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td>ID：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.id" size="small" placeholder="" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>服务端解析类：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custServerResolveMethod" size="small" placeholder="按钮进行服务端解析时,类全称,将调用该类,需要实现接口IFormButtonCustResolve" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custServerResolveMethodPara" size="small" placeholder="服务端解析类的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端渲染方法：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererMethod" size="small" placeholder="客户端渲染方法,按钮将经由该方法渲染,最终形成页面元素,需要返回最终元素的HTML对象" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererMethodPara" size="small" placeholder="客户端渲染方法的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端渲染后方法：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererAfterMethod" size="small" placeholder="客户端渲染后调用方法,经过默认的渲染,无返回值" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererAfterMethodPara" size="small" placeholder="客户端渲染后方法的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端点击前方法：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientClickBeforeMethod" size="small" placeholder="客户端点击该按钮时的前置方法,如果返回false将阻止默认调用" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientClickBeforeMethodPara" size="small" placeholder="客户端点击前方法的参数" />\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                        </tabs>\n                        <div class="button-outer-wrap">\n                            <div class="button-inner-wrap">\n                                <button-group>\n                                    <i-button type="primary" @click="saveInnerSaveButtonToList()"> 保 存</i-button>\n                                    <i-button @click="handleClose(\'innerFormButtonEdit\')">关 闭</i-button>\n                                </button-group>\n                            </div>\n                        </div>\n                    </div>\n                    <div style="height: 210px;width: 100%">\n                        <div style="float: left;width: 84%">\n                            <i-table :height="210" width="100%" stripe border :columns="columnsConfig" :data="tableData"\n                                                     class="iv-list-table" :highlight-row="true"\n                                                     size="small"></i-table>\n                        </div>\n                        <div style="float: right;width: 15%">\n                            <ButtonGroup vertical>\n                                <i-button type="success" @click="addInnerFormSaveButton()" icon="md-add">保存按钮</i-button>\n                                <i-button icon="md-add" disabled>意见按钮</i-button>\n                                <i-button type="primary" @click="addInnerFormCloseButton()" icon="md-add">关闭按钮</i-button>\n                                <i-button disabled icon="md-add">拷贝Json</i-button>\n                                <i-button disabled icon="md-add">黏贴Json</i-button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("list-search-control-bind-to-comp",{props:["bindToSearchFieldProp","dataSetId"],data:function(){var a=this;return{bindToSearchField:{columnTitle:"",columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",columnOperator:"匹配"},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"pid",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.selectColumn(i)},onDblClick:function(e,t,i){},onAsyncSuccess:function(e,t,i,a){}}},treeData:null},tempData:{defaultDisplayText:""}}},watch:{bindToSearchFieldProp:function(e){console.log(e)},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{init:function(e){console.log(e);var t=[],i={pid:"-1",text:e.dsName,id:e.dsId,nodeType:"DataSet"};t.push(i);for(var a=0;a<e.relatedTableVoList.length;a++){t.push({pid:e.dsId,text:e.relatedTableVoList[a].rtTableCaption,id:e.relatedTableVoList[a].rtTableId,nodeType:"Table"});for(var l=0;l<e.relatedTableVoList[a].tableFieldPOList.length;l++){var n=e.relatedTableVoList[a].tableFieldPOList[l];n.pid=e.relatedTableVoList[a].rtTableId,n.text=n.fieldCaption+"["+n.fieldName+"]",n.nodeType="TableField",n.id=n.fieldId,n.icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/page.png",t.push(n)}}this.tree.treeObj=$.fn.zTree.init($(this.$refs.zTreeUL),this.tree.treeSetting,t),this.tree.treeObj.expandAll(!0),fuzzySearchTreeObj(this.tree.treeObj,this.$refs.txt_search_text.$refs.input,null,!0)},selectColumn:function(e){"TableField"==e.nodeType&&(this.bindToSearchField.columnTableName=e.tableName,this.bindToSearchField.columnName=e.fieldName,this.bindToSearchField.columnCaption=e.fieldCaption,this.bindToSearchField.columnDataTypeName=e.fieldDataType)},getData:function(){return console.log(this.bindToSearchField),{bindToSearchField:this.bindToSearchField,defaultValue:this.defaultValue}},setData:function(e,t){console.log(e),this.bindToSearchField=e,this.defaultValue=t,this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)},selectDefaultValueView:function(){window._SelectBindObj=this,window.parent.listDesign.selectDefaultValueDialogBegin(window,null)},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText="")}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>\n                                标题：\n                            </td>\n                            <td>\n                                <input type="text" v-model="bindToSearchField.columnTitle" />\n                            </td>\n                            <td rowspan="9" valign="top">\n                                <i-input search class="input_border_bottom" ref="txt_search_text" placeholder="请输入列名或者标题"></i-input>                                <ul ref="zTreeUL" class="ztree div-custom-scroll" style="height: 430px;overflow-x:hidden;overflow-y: scroll"></ul>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                所属表：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnTableName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                绑定字段：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnCaption}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段名称：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段类型：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnDataTypeName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                运算符：\n                            </td>\n                            <td>\n                                <i-select v-model="bindToSearchField.columnOperator" style="width:260px">\n                                    <i-option value="eq">等于</i-option>\n                                    <i-option value="like">匹配</i-option>\n                                    <i-option value="not_eq">不等于</i-option>\n                                    <i-option value="gt">大于</i-option>\n                                    <i-option value="gt_eq">大于等于</i-option>\n                                    <i-option value="lt">小于</i-option>\n                                    <i-option value="lt_eq">小于等于</i-option>\n                                    <i-option value="left_like">左匹配</i-option>\n                                    <i-option value="right_like">右匹配</i-option>\n                                    <i-option value="include">包含[暂时不支持]</i-option>\n                                </i-select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="2">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td>\n                        </tr>\n                        <tr style="height: 35px">\n                            <td colspan="2" style="background-color: #ffffff;">\n                                {{tempData.defaultDisplayText}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                备注：\n                            </td>\n                            <td>\n                                <textarea rows="8"></textarea>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("list-table-label-bind-to-comp",{props:["bindPropProp","dataSetId"],data:function(){var a=this;return{bindProp:{columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",targetButtonId:"",columnAlign:"居中对齐"},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"pid",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.selectColumn(i)},onDblClick:function(e,t,i){},onAsyncSuccess:function(e,t,i,a){}}},treeData:null},tempData:{defaultDisplayText:""},buttons:[]}},watch:{bindPropProp:function(e){console.log(e)},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{init:function(e,t){console.log(e);for(var i=[],a=e.columnVoList,l=0;l<a.length;l++){var n=a[l];n.pid=e.dsId,n.text=n.columnCaption+"["+n.columnName+"]",n.nodeType="DataSetColumn",n.id=n.columnId,n.icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/page.png",i.push(n)}var o={pid:"-1",text:e.dsName,id:e.dsId,nodeType:"DataSet"};i.push(o),this.tree.treeObj=$.fn.zTree.init($(this.$refs.zTreeUL),this.tree.treeSetting,i),this.tree.treeObj.expandAll(!0),this.buttons=t},selectColumn:function(e){this.bindProp.columnTableName=e.columnTableName,this.bindProp.columnName=e.columnName,this.bindProp.columnCaption=e.columnCaption,this.bindProp.columnDataTypeName=e.columnDataTypeName},getData:function(){return console.log(this.bindProp),this.bindProp.targetButtonId||(this.bindProp.targetButtonId=""),{bindProp:this.bindProp,defaultValue:this.defaultValue}},setData:function(e,t){console.log(e),this.bindProp=e,this.defaultValue=t,this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)},selectDefaultValueView:function(){window._SelectBindObj=this,window.parent.listDesign.selectDefaultValueDialogBegin(window,null)},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText="")}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>\n                                对齐方式：\n                            </td>\n                            <td>\n                                <i-select v-model="bindProp.columnAlign" style="width:260px">\n                                    <i-option value="左对齐">左对齐</i-option>\n                                    <i-option value="居中对齐">居中对齐</i-option>\n                                    <i-option value="右对齐">右对齐</i-option>\n                                </i-select>\n                            </td>\n                            <td rowspan="9" valign="top">\n                                <ul ref="zTreeUL" class="ztree"></ul>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                所属表：\n                            </td>\n                            <td>\n                                {{bindProp.columnTableName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                绑定字段：\n                            </td>\n                            <td>\n                                {{bindProp.columnCaption}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段名称：\n                            </td>\n                            <td>\n                                {{bindProp.columnName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段类型： \n                            </td>\n                            <td>\n                                {{bindProp.columnDataTypeName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                触发按钮：\n                            </td>\n                            <td>\n                                <i-select v-model="bindProp.targetButtonId" style="width:260px" :clearable="true">\n                                    <i-option :value="item.buttonId" v-for="item in buttons">{{item.buttonCaption}}</i-option>\n                                </i-select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="2">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td>\n                        </tr>\n                        <tr style="height: 35px">\n                            <td colspan="2" style="background-color: #ffffff;">\n                                {{tempData.defaultDisplayText}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                备注：\n                            </td>\n                            <td>\n                                <textarea rows="8"></textarea>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("module-list-webform-comp",{props:["listHeight","moduleData","activeTabName"],data:function(){var i=this;return{acInterface:{editView:"/HTML/Builder/Form/FormDesign.html",previewWebFormUrl:"/HTML/Builder/Form/FormPreview.html",reloadData:"/Rest/Builder/Form/GetListData",delete:"/Rest/Builder/Form/Delete",move:"/Rest/Builder/Form/Move"},idFieldName:"formId",searchCondition:{formModuleId:{value:"",type:SearchUtility.SearchFieldType.StringType}},columnsConfig:[{type:"selection",width:60,align:"center"},{title:"编号",key:"formCode",align:"center",width:80},{title:"表单名称",key:"formName",align:"center"},{title:"唯一名",key:"formSingleName",align:"center"},{title:"备注",key:"formDesc",align:"center"},{title:"编辑时间",key:"formUpdateTime",width:100,align:"center",render:function(e,t){return ListPageUtility.IViewTableRenderer.ToDateYYYY_MM_DD(e,t.row.formUpdateTime)}},{title:"操作",key:"formId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.EditButton(e,t,i.idFieldName,i),ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,i.idFieldName,i)])}}],tableData:[],tableDataOriginal:[],selectionRows:null,pageTotal:0,pageSize:500,pageNum:1,searchText:""}},mounted:function(){window._modulelistwebformcomp=this},watch:{moduleData:function(e){this.reloadData()},activeTabName:function(e){this.reloadData()},searchText:function(e){if(e){for(var t=[],i=0;i<this.tableData.length;i++){var a=this.tableData[i];0<=a.formCode.indexOf(e)?t.push(a):0<=a.formName.indexOf(e)&&t.push(a)}this.tableData=t}else this.tableData=this.tableDataOriginal}},methods:{getModuleName:function(){return null==this.moduleData?"请选中模块":this.moduleData.moduleText},selectionChange:function(e){this.selectionRows=e},reloadData:function(){null!=this.moduleData&&"list-webform"==this.activeTabName&&(this.searchCondition.formModuleId.value=this.moduleData.moduleId,ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:this.idFieldName,autoSelectedOldRows:!0,successFunc:function(e,t){t.tableDataOriginal=e.data.list},loadDict:!1,custParas:{}}))},add:function(){if(null!=this.moduleData){var e=BaseUtility.BuildView(this.acInterface.editView,{op:"add",moduleId:this.moduleData.moduleId});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,e,{width:0,height:0},2)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择模块!",null)},edit:function(e){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"update",recordId:e});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,t,{width:0,height:0},2)},del:function(e){ListPageUtility.IViewTableDeleteRow(this.acInterface.delete,e,this)},statusEnable:function(e){ListPageUtility.IViewChangeServerStatusFace(this.acInterface.statusChange,this.selectionRows,appList.idFieldName,e,appList)},move:function(e){ListPageUtility.IViewMoveFace(this.acInterface.move,this.selectionRows,this.idFieldName,e,this)},previewWebForm:function(){ListPageUtility.IViewTableMareSureSelectedOne(this.selectionRows,this).then(function(e){var t=e[0][this.idFieldName],i=BaseUtility.BuildView(this.acInterface.previewWebFormUrl,{FormId:t,OperationType:"add",RecordId:StringUtility.Guid()});DialogUtility.OpenNewTabWindow(i)})}},template:'<div class="module-list-wrap">\n                    <div id="list-button-wrap" class="list-button-outer-wrap">\n                        <div class="module-list-name"><Icon type="ios-arrow-dropright-circle" />&nbsp;模块【{{getModuleName()}}】</div>\n                        <div class="list-button-inner-wrap">\n                            <ButtonGroup>\n                                <i-button  type="success" @click="add()" icon="md-add">新增</i-button>\n                                <i-button type="primary" @click="previewWebForm()"  icon="md-pricetag">预览</i-button>\n                                <i-button type="primary" disabled icon="md-add">引入URL </i-button>\n                                <i-button type="primary" disabled icon="md-albums">复制</i-button>\n                                <i-button type="primary" disabled icon="md-bookmarks">历史版本</i-button>\n                                <i-button type="primary" disabled icon="md-brush">复制ID</i-button>\n                                <i-button type="primary" @click="move(\'up\')" icon="md-arrow-up">上移</i-button>\n                                <i-button type="primary" @click="move(\'down\')" icon="md-arrow-down">下移</i-button>\n                            </ButtonGroup>\n                        </div>\n                         <div style="float: right;width: 200px;margin-right: 10px;">\n                            <i-input search class="input_border_bottom" v-model="searchText">\n                            </i-input>\n                        </div>                        <div style="clear: both"></div>\n                    </div>\n                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"\n                             class="iv-list-table" :highlight-row="true"\n                             @on-selection-change="selectionChange"></i-table>\n                </div>'}),Vue.component("module-list-weblist-comp",{props:["listHeight","moduleData","activeTabName"],data:function(){var i=this;return{acInterface:{editView:"/HTML/Builder/List/ListDesign.html",reloadData:"/Rest/Builder/List/GetListData",delete:"/Rest/Builder/List/Delete",move:"/Rest/Builder/List/Move"},idFieldName:"listId",searchCondition:{listModuleId:{value:"",type:SearchUtility.SearchFieldType.StringType}},columnsConfig:[{type:"selection",width:60,align:"center"},{title:"编号",key:"listCode",align:"center",width:80},{title:"列表名称",key:"listName",align:"center"},{title:"唯一名",key:"listSingleName",align:"center"},{title:"备注",key:"listDesc",align:"center"},{title:"编辑时间",key:"listUpdateTime",width:100,align:"center",render:function(e,t){return ListPageUtility.IViewTableRenderer.ToDateYYYY_MM_DD(e,t.row.listUpdateTime)}},{title:"操作",key:"listId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.EditButton(e,t,i.idFieldName,i),ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,i.idFieldName,i)])}}],tableData:[],tableDataOriginal:[],selectionRows:null,pageTotal:0,pageSize:500,pageNum:1,searchText:""}},mounted:function(){window._modulelistweblistcomp=this},watch:{moduleData:function(e){this.reloadData()},activeTabName:function(e){this.reloadData()},searchText:function(e){if(e){for(var t=[],i=0;i<this.tableData.length;i++){var a=this.tableData[i];0<=a.formCode.indexOf(e)?t.push(a):0<=a.formName.indexOf(e)&&t.push(a)}this.tableData=t}else this.tableData=this.tableDataOriginal}},methods:{getModuleName:function(){return null==this.moduleData?"请选中模块":this.moduleData.moduleText},selectionChange:function(e){this.selectionRows=e},reloadData:function(){null!=this.moduleData&&"list-weblist"==this.activeTabName&&(this.searchCondition.listModuleId.value=this.moduleData.moduleId,ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:this.idFieldName,autoSelectedOldRows:!0,successFunc:function(e,t){t.tableDataOriginal=e.data.list},loadDict:!1,custParas:{}}))},add:function(){if(null!=this.moduleData){var e=BaseUtility.BuildView(this.acInterface.editView,{op:"add",moduleId:this.moduleData.moduleId});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,e,{width:0,height:0},2)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择模块!",null)},edit:function(e){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"update",recordId:e});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,t,{width:0,height:0},2)},del:function(e){ListPageUtility.IViewTableDeleteRow(this.acInterface.delete,e,this)},statusEnable:function(e){ListPageUtility.IViewChangeServerStatusFace(this.acInterface.statusChange,this.selectionRows,appList.idFieldName,e,appList)},move:function(e){ListPageUtility.IViewMoveFace(this.acInterface.move,this.selectionRows,this.idFieldName,e,this)}},template:'<div class="module-list-wrap">                    <div id="list-button-wrap" class="list-button-outer-wrap">                        <div class="module-list-name"><Icon type="ios-arrow-dropright-circle" />&nbsp;模块【{{getModuleName()}}】</div>                        <div class="list-button-inner-wrap">                            <ButtonGroup>                                <i-button  type="success" @click="add()" icon="md-add">新增</i-button>                                <i-button type="error" icon="md-albums">复制</i-button>                                <i-button type="error" icon="md-pricetag">预览</i-button>                                <i-button type="error" icon="md-bookmarks">历史版本</i-button>                                <i-button type="error" icon="md-brush">复制ID</i-button>                                <i-button type="primary" @click="move(\'up\')" icon="md-arrow-up">上移</i-button>                                <i-button type="primary" @click="move(\'down\')" icon="md-arrow-down">下移</i-button>                            </ButtonGroup>                        </div>                         <div style="float: right;width: 200px;margin-right: 10px;">                            <i-input search class="input_border_bottom" v-model="searchText">                            </i-input>                        </div>                        <div style="clear: both"></div>                    </div>                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"                             class="iv-list-table" :highlight-row="true"                             @on-selection-change="selectionChange"></i-table>                </div>'}),Vue.component("module-list-workflow-comp",{props:["listHeight","moduleData","activeTabName"],data:function(){var i=this;return{acInterface:{editView:"/HTML/WorkFlow/Modeler/Index.html",reloadData:"/Rest/Builder/List/GetListData",delete:"/Rest/Builder/List/Delete",move:"/Rest/Builder/List/Move"},idFieldName:"listId",searchCondition:{listModuleId:{value:"",type:SearchUtility.SearchFieldType.StringType}},columnsConfig:[{type:"selection",width:60,align:"center"},{title:"编号",key:"listCode",align:"center",width:80},{title:"列表名称",key:"listName",align:"center"},{title:"唯一名",key:"listSingleName",align:"center"},{title:"备注",key:"listDesc",align:"center"},{title:"编辑时间",key:"listUpdateTime",width:100,align:"center",render:function(e,t){return ListPageUtility.IViewTableRenderer.ToDateYYYY_MM_DD(e,t.row.listUpdateTime)}},{title:"操作",key:"listId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.EditButton(e,t,i.idFieldName,i),ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,i.idFieldName,i)])}}],tableData:[],tableDataOriginal:[],selectionRows:null,pageTotal:0,pageSize:500,pageNum:1,searchText:""}},mounted:function(){window._modulelistweblistcomp=this},watch:{moduleData:function(e){this.reloadData()},activeTabName:function(e){this.reloadData()},searchText:function(e){if(e){for(var t=[],i=0;i<this.tableData.length;i++){var a=this.tableData[i];0<=a.formCode.indexOf(e)?t.push(a):0<=a.formName.indexOf(e)&&t.push(a)}this.tableData=t}else this.tableData=this.tableDataOriginal}},methods:{getModuleName:function(){return null==this.moduleData?"请选中模块":this.moduleData.moduleText},selectionChange:function(e){this.selectionRows=e},reloadData:function(){null!=this.moduleData&&"list-weblist"==this.activeTabName&&(this.searchCondition.listModuleId.value=this.moduleData.moduleId,ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:this.idFieldName,autoSelectedOldRows:!0,successFunc:function(e,t){t.tableDataOriginal=e.data.list},loadDict:!1,custParas:{}}))},add:function(){if(null!=this.moduleData){var e=BaseUtility.BuildView(this.acInterface.editView,{op:"add",moduleId:this.moduleData.moduleId});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,e,{width:0,height:0},2)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择模块!",null)},edit:function(e){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"update",recordId:e});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,t,{width:0,height:0},2)},del:function(e){ListPageUtility.IViewTableDeleteRow(this.acInterface.delete,e,this)},statusEnable:function(e){ListPageUtility.IViewChangeServerStatusFace(this.acInterface.statusChange,this.selectionRows,appList.idFieldName,e,appList)},move:function(e){ListPageUtility.IViewMoveFace(this.acInterface.move,this.selectionRows,this.idFieldName,e,this)}},template:'<div class="module-list-wrap">                    <div id="list-button-wrap" class="list-button-outer-wrap">                        <div class="module-list-name"><Icon type="ios-arrow-dropright-circle" />&nbsp;模块【{{getModuleName()}}】</div>                        <div class="list-button-inner-wrap">                            <ButtonGroup>                                <i-button  type="success" @click="add()" icon="md-add">新增</i-button>                            </ButtonGroup>                        </div>                         <div style="float: right;width: 200px;margin-right: 10px;">                            <i-input search class="input_border_bottom" v-model="searchText">                            </i-input>                        </div>                        <div style="clear: both"></div>                    </div>                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"                             class="iv-list-table" :highlight-row="true"                             @on-selection-change="selectionChange"></i-table>                </div>'}),Vue.component("select-dblink-single-comp",{data:function(){return{acInterface:{getDBLinkDataUrl:"/Rest/Builder/DataStorage/DBLink/GetFullDBLink",getSingleDBLinkDataUrl:"/Rest/Builder/DataStorage/DBLink/GetDetailData"},jsEditorInstance:null,dbLinkTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"dbLinkName"},simpleData:{enable:!0,idKey:"dbId",pIdKey:"dbOrderNum",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;a.selectedDBLink(i),a.handleClose()}}},treeData:null,clickNode:null},selectedDBLinkData:null}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectDBLinkModelDialogWrap)},beginSelectDBLink:function(){var e=this.$refs.selectDBLinkModelDialogWrap;this.getDBLinkDataInitTree(),DialogUtility.DialogElemObj(e,{modal:!0,width:470,height:500,title:"选择数据库连接"})},getDBLinkDataInitTree:function(){var i=this;AjaxUtility.Post(this.acInterface.getDBLinkDataUrl,{},function(e){if(e.success){i.dbLinkTree.treeData=e.data;for(var t=0;t<i.dbLinkTree.treeData.length;t++)i.dbLinkTree.treeData[t].icon="../../../../Themes/Png16X16/database_connect.png";i.$refs.dbLinkZTreeUL.setAttribute("id","select-dbLink-single-comp-"+StringUtility.Guid()),i.dbLinkTree.treeObj=$.fn.zTree.init($(i.$refs.dbLinkZTreeUL),i.dbLinkTree.treeSetting,i.dbLinkTree.treeData),i.dbLinkTree.treeObj.expandAll(!0),i.dbLinkTree.treeObj._host=i,fuzzySearchTreeObj(i.dbLinkTree.treeObj,i.$refs.txt_dbLink_search_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedDBLink:function(e){this.selectedDBLinkData=e,this.$emit("on-selected-dblink",e)},getSelectedDBLinkName:function(){return null==this.selectedDBLinkData?"请选择数据库连接":this.selectedDBLinkData.dbLinkName},setOldSelectedDBLink:function(e){var t=this;AjaxUtility.Post(this.acInterface.getSingleDBLinkDataUrl,{recordId:e},function(e){e.success?t.selectedDBLinkData=e.data:DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)}},template:'<div>\n                    <div class="select-view-dblink-wrap">\n                        <div class="text">{{getSelectedDBLinkName()}}</div>\n                        <div class="value"></div>\n                        <div class="id"></div>\n                        <div class="button" @click="beginSelectDBLink()"><Icon type="ios-funnel" />&nbsp;选择</div>\n                    </div>\n                    <div ref="selectDBLinkModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                        <div class="c1-select-model-source-wrap">\n                            <i-input search class="input_border_bottom" ref="txt_dbLink_search_text" placeholder="请输入数据库连接名称">\n                            </i-input>\n                            <div class="inner-wrap div-custom-scroll">\n                                <ul ref="dbLinkZTreeUL" class="ztree"></ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>'});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRpYWxvZy9zZWxlY3QtZGVmYXVsdC12YWx1ZS1kaWFsb2cuanMiLCJEaWFsb2cvc2VsZWN0LXNpbmdsZS10YWJsZS1kaWFsb2cuanMiLCJEaWFsb2cvc2VsZWN0LXNpbmdsZS13ZWJmb3JtLWRpYWxvZy5qcyIsIkRpYWxvZy9zZWxlY3QtdmFsaWRhdGUtcnVsZS1kaWFsb2cuanMiLCJEaWFsb2cvdGFibGUtcmVsYXRpb24tY29ubmVjdC10d28tdGFibGUtZGlhbG9nLmpzIiwiQ29tcC9kYXRhc2V0LXNpbXBsZS1zZWxlY3QtY29tcC5qcyIsIkNvbXAvanMtZGVzaWduLWNvZGUtZnJhZ21lbnQuanMiLCJDb21wL3NxbC1nZW5lcmFsLWRlc2lnbi1jb21wLmpzIiwiQ29tcC90YWJsZS1yZWxhdGlvbi1jb250ZW50LWNvbXAuanMiLCJIVE1MRGVzaWduL2RiLXRhYmxlLXJlbGF0aW9uLWNvbXAuanMiLCJIVE1MRGVzaWduL2Rlc2lnbi1odG1sLWVsZW0tbGlzdC5qcyIsIkhUTUxEZXNpZ24vZmQtY29udHJvbC1iYXNlLWluZm8uanMiLCJIVE1MRGVzaWduL2ZkLWNvbnRyb2wtYmluZC10by5qcyIsIkhUTUxEZXNpZ24vZmQtY29udHJvbC1kYXRhc291cmNlLmpzIiwiSFRNTERlc2lnbi9mZC1jb250cm9sLXNlbGVjdC1iaW5kLXRvLXNpbmdsZS1maWVsZC1kaWFsb2cuanMiLCJIVE1MRGVzaWduL2lubmVyLWZvcm0tYnV0dG9uLWxpc3QtY29tcC5qcyIsIkhUTUxEZXNpZ24vbGlzdC1zZWFyY2gtY29udHJvbC1iaW5kLXRvLWNvbXAuanMiLCJIVE1MRGVzaWduL2xpc3QtdGFibGUtbGFiZWwtYmluZC10by1jb21wLmpzIiwiTW9kdWxlL21vZHVsZS1saXN0LXdlYmZvcm0tY29tcC5qcyIsIk1vZHVsZS9tb2R1bGUtbGlzdC13ZWJsaXN0LWNvbXAuanMiLCJNb2R1bGUvbW9kdWxlLWxpc3Qtd29ya2Zsb3ctY29tcC5qcyIsIlNlbGVjdEJ1dHRvbi9zZWxlY3QtZGJsaW5rLXNpbmdsZS1jb21wLmpzIl0sIm5hbWVzIjpbIlZ1ZSIsImNvbXBvbmVudCIsImRhdGEiLCJfc2VsZiIsInRoaXMiLCJhY0ludGVyZmFjZSIsImdldEdyb3VwVHJlZURhdGEiLCJyZWxvYWRMaXN0RGF0YSIsInNlbGVjdFR5cGUiLCJzZWxlY3RWYWx1ZSIsInNlbGVjdFRleHQiLCJjb25zdFZhbHVlIiwibGlzdEhlaWdodCIsInRyZWUiLCJ0cmVlSWRGaWVsZE5hbWUiLCJ0cmVlT2JqIiwidHJlZVNlbGVjdGVkTm9kZSIsInRyZWVTZXR0aW5nIiwiYXN5bmMiLCJlbmFibGUiLCJ1cmwiLCJrZXkiLCJuYW1lIiwic2ltcGxlRGF0YSIsImlkS2V5IiwicElkS2V5Iiwicm9vdElkIiwiY2FsbGJhY2siLCJvbkNsaWNrIiwiZXZlbnQiLCJ0cmVlSWQiLCJ0cmVlTm9kZSIsImdldFpUcmVlT2JqIiwiX2hvc3QiLCJ0cmVlTm9kZVNlbGVjdGVkIiwib25Bc3luY1N1Y2Nlc3MiLCJtc2ciLCJhcHBMaXN0IiwiZXhwYW5kQWxsIiwidGFibGVEYXRhIiwiY29sdW1uc0NvbmZpZyIsInRpdGxlIiwiYWxpZ24iLCJ3aWR0aCIsInJlbmRlciIsImgiLCJwYXJhbXMiLCJjbGFzcyIsIkxpc3RQYWdlVXRpbGl0eSIsIklWaWV3VGFibGVJbm5lckJ1dHRvbiIsIlNlbGVjdGVkQnV0dG9uIiwic2VhcmNoQ29uZGl0aW9uIiwiZW52VmFyR3JvdXBJZCIsInZhbHVlIiwidHlwZSIsIlNlYXJjaFV0aWxpdHkiLCJTZWFyY2hGaWVsZFR5cGUiLCJTdHJpbmdUeXBlIiwicGFnZVRvdGFsIiwicGFnZVNpemUiLCJwYWdlTnVtIiwibW91bnRlZCIsImxvYWREYXRhIiwibWV0aG9kcyIsImJlZ2luU2VsZWN0Iiwib2xkRGF0YSIsImNvbnNvbGUiLCJsb2ciLCJlbGVtIiwiJHJlZnMiLCJzZWxlY3REZWZhdWx0VmFsdWVEaWFsb2dXcmFwIiwiRGlhbG9nVXRpbGl0eSIsIkRpYWxvZ0VsZW1PYmoiLCJtb2RhbCIsImhlaWdodCIsIiQiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImZpbmQiLCJjc3MiLCJBamF4VXRpbGl0eSIsIlBvc3QiLCJyZXN1bHQiLCJzdWNjZXNzIiwibGVuZ3RoIiwiaSIsImZuIiwielRyZWUiLCJpbml0IiwiQWxlcnQiLCJEaWFsb2dBbGVydElkIiwibWVzc2FnZSIsImdldFNlbGVjdEluc3RhbmNlTmFtZSIsIkJhc2VVdGlsaXR5IiwiR2V0VXJsUGFyYVZhbHVlIiwic2VsZWN0Q29tcGxldGUiLCJUeXBlIiwiVmFsdWUiLCJUZXh0IiwiJGVtaXQiLCJoYW5kbGVDbG9zZSIsImNsZWFyQ29tcGxldGUiLCJDbG9zZURpYWxvZ0VsZW0iLCJzZWxlY3Rpb25DaGFuZ2UiLCJjbGVhclNlYXJjaENvbmRpdGlvbiIsInJlbG9hZERhdGEiLCJJVmlld1RhYmxlQmluZERhdGFCeVNlYXJjaCIsInBhZ2VBcHBPYmoiLCJ0YWJsZUxpc3QiLCJpZEZpZWxkIiwiYXV0b1NlbGVjdGVkT2xkUm93cyIsInN1Y2Nlc3NGdW5jIiwibG9hZERpY3QiLCJjdXN0UGFyYXMiLCJzZWxlY3RlZCIsImlkIiwicm93IiwiZW52VmFyVmFsdWUiLCJlbnZWYXJUZXh0IiwidGVtcGxhdGUiLCJEZWZhdWx0VmFsdWVVdGlsaXR5IiwiZm9ybWF0VGV4dCIsInRleHQiLCJnZXRUYWJsZURhdGFVcmwiLCJqc0VkaXRvckluc3RhbmNlIiwidGFibGVUcmVlIiwidmlldyIsImRibENsaWNrRXhwYW5kIiwic2hvd0xpbmUiLCJmb250Q3NzIiwiY29sb3IiLCJmb250LXdlaWdodCIsImNoZWNrIiwibm9jaGVja0luaGVyaXQiLCJyYWRpb1R5cGUiLCJyb290UElkIiwibm9kZVR5cGVOYW1lIiwic2VsZWN0ZWRUYWJsZSIsInRyZWVEYXRhIiwiY2xpY2tOb2RlIiwic2VsZWN0ZWRUYWJsZURhdGEiLCJzZWxlY3RUYWJsZU1vZGVsRGlhbG9nV3JhcCIsImJlZ2luU2VsZWN0VGFibGUiLCJnZXRUYWJsZURhdGFJbml0VHJlZSIsIlBhZ2VTdHlsZVV0aWxpdHkiLCJHZXRQYWdlSGVpZ2h0IiwidGFibGVaVHJlZVVMIiwic2V0QXR0cmlidXRlIiwiU3RyaW5nVXRpbGl0eSIsIkd1aWQiLCJmdXp6eVNlYXJjaFRyZWVPYmoiLCJ0eHRfdGFibGVfc2VhcmNoX3RleHQiLCJpbnB1dCIsImNvbXBsZXRlZCIsIkFsZXJ0VGV4dCIsInNlbGVjdGVkRm9ybSIsInNlbGVjdGVkRm9ybURhdGEiLCJvbGRTZWxlY3RlZEZvcm1JZCIsInNlbGVjdE1vZGVsRGlhbG9nV3JhcCIsImJlZ2luU2VsZWN0Rm9ybSIsImZvcm1JZCIsImdldEZvcm1EYXRhSW5pdFRyZWUiLCJpY29uIiwiR2V0Um9vdFBhdGgiLCJmb3JtWlRyZWVVTCIsInR4dF9mb3JtX3NlYXJjaF90ZXh0Iiwic2VsZWN0ZWROb2RlIiwiZ2V0Tm9kZUJ5UGFyYW0iLCJzZWxlY3ROb2RlIiwiZm9ybURhdGEiLCJmb3JtTW9kdWxlSWQiLCJhdHRyNCIsImZvcm1Nb2R1bGVOYW1lIiwiYXR0cjMiLCJmb3JtTmFtZSIsImF0dHIxIiwiZm9ybUNvZGUiLCJhdHRyMiIsInNlbGVjdFZhbGlkYXRlVHlwZSIsInJ1bGVQYXJhcyIsIm51bUxlbmd0aCIsImRlY2ltYWxMZW5ndGgiLCJqc01ldGhvZE5hbWUiLCJyZWd1bGFyVGV4dCIsInJlZ3VsYXJNc2ciLCJhZGRlZFZhbGlkYXRlUnVsZSIsInZhbGlkYXRlQ29sdW1uc0NvbmZpZyIsIm9uIiwiY2xpY2siLCJkZWxWYWxpZGF0ZSIsInNlbGVjdFZhbGlkYXRlUnVsZURpYWxvZ1dyYXAiLCJiaW5kT2xkU2VsZWN0ZWRWYWx1ZSIsIm9sZFNlbGVjdGVkVmFsdWUiLCJydWxlcyIsIkpzb25VdGlsaXR5IiwiQ2xvbmVTaW1wbGUiLCJhZGRWYWxpZGF0ZVJ1bGUiLCJ2YWxpZGF0ZVBhcmFzIiwiSnNvblRvU3RyaW5nIiwibmV3VmFsaWRhdGVSdWxlIiwidmFsaWRhdGVJZCIsIlRpbWVzdGFtcCIsInZhbGlkYXRlVHlwZSIsInB1c2giLCJzcGxpY2UiLCJnZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzIiwiZnJvbVRhYmxlRmllbGQiLCJmaWVsZERhdGEiLCJ0b1RhYmxlRmllbGQiLCJkaWFsb2dIZWlnaHQiLCJyZXN1bHREYXRhIiwiZnJvbSIsInRhYmxlSWQiLCJ0byIsImNvbm5lY3RUYWJsZUZpZWxkTW9kZWxEaWFsb2dXcmFwIiwiZ2V0RmllbGRzQW5kQmluZCIsImZyb21UYWJsZUlkIiwidG9UYWJsZUlkIiwidGFibGVJZHMiLCJhbGxGaWVsZHMiLCJmcm9tVGFibGVGaWVsZHMiLCJleEtWRGF0YSIsIlRhYmxlcyIsImdldFNpbmdsZVRhYmxlRmllbGRzRGF0YSIsInRvVGFibGVGaWVsZHMiLCJiZWdpblNlbGVjdENvbm5lY3QiLCJmaWVsZFRhYmxlSWQiLCJzZWxlY3RlZEZyb21GaWVsZCIsImluZGV4IiwiZmllbGROYW1lIiwic2VsZWN0ZWRUb0ZpZWxkIiwiZ2V0RGF0YVNldERhdGEiLCJkYXRhU2V0VHJlZSIsImNoa1N0eWxlIiwic2VsZWN0ZWRUYWJsZU5hbWUiLCJiaW5kRGF0YVNldFRyZWUiLCJ0eHRfc2VhcmNoX3RleHQiLCJzZXRKU0VkaXRvckluc3RhbmNlIiwib2JqIiwiZ2V0SnNFZGl0b3JJbnN0IiwiaW5zZXJ0SnMiLCJqcyIsImRvYyIsImdldERvYyIsImN1cnNvciIsImdldEN1cnNvciIsInJlcGxhY2VSYW5nZSIsImZvcm1hdEpTIiwiQ29kZU1pcnJvciIsImNvbW1hbmRzIiwicmFuZ2UiLCJhdXRvRm9ybWF0UmFuZ2UiLCJhbGVydERlc2MiLCJyZWZTY3JpcHQiLCJjYWxsU2VydmljZU1ldGhvZCIsInByb3BzIiwic3FsVGV4dCIsInNlbGVjdGVkSXRlbVZhbHVlIiwic2VsZlRhYmxlRmllbGRzIiwicGFyZW50VGFibGVGaWVsZHMiLCJ3YXRjaCIsIm5ld1ZhbCIsInNxbENvZGVNaXJyb3IiLCJmcm9tVGV4dEFyZWEiLCJtb2RlIiwibGluZU51bWJlcnMiLCJsaW5lV3JhcHBpbmciLCJmb2xkR3V0dGVyIiwidGhlbWUiLCJzcWxEZXNpZ25lckhlaWdodCIsInNldFNpemUiLCJjTWlycm9yIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInNldEFib3V0VGFibGVGaWVsZHMiLCJpbnNlcnRFbnZUb0VkaXRvciIsImNvZGUiLCJpbnNlcnRDb2RlQXRDdXJzb3IiLCJpbnNlcnRGaWVsZFRvRWRpdG9yIiwic291cmNlVHlwZSIsInNvdXJjZUZpZWxkcyIsInRhYmxlTmFtZSIsInNhdmVEaWFncmFtIiwiZ2V0U2luZ2xlRGlhZ3JhbURhdGEiLCJ0YWJsZVZpZXciLCJ0YWJsZVJlbGF0aW9uRGlhZ3JhbSIsImRpc3BsYXlEZXNjIiwiZm9ybWF0SnNvbiIsInJlY29yZElkIiwicmVsYXRpb24iLCJyZWxhdGlvbklkIiwicmVsYXRpb25Db250ZW50T3V0ZXJXcmFwIiwiR2V0UGFnZVdpZHRoIiwiaW5pdERpYWdyYW0iLCJsb2FkUmVsYXRpb25EZXRhaWxEYXRhIiwiZ29TYW1wbGVzIiwiZ28iLCJHcmFwaE9iamVjdCIsIm1ha2UiLCJteURpYWdyYW0iLCJEaWFncmFtIiwiYWxsb3dEZWxldGUiLCJhbGxvd0NvcHkiLCJsYXlvdXQiLCJGb3JjZURpcmVjdGVkTGF5b3V0IiwidW5kb01hbmFnZXIuaXNFbmFibGVkIiwiYmx1ZWdyYWQiLCJCcnVzaCIsIjAiLCIwLjUiLCIxIiwiZ3JlZW5ncmFkIiwicmVkZ3JhZCIsInllbGxvd2dyYWQiLCJsaWdodGdyYWQiLCJpdGVtVGVtcGwiLCJQYW5lbCIsIlNoYXBlIiwiZGVzaXJlZFNpemUiLCJTaXplIiwiQmluZGluZyIsIlRleHRCbG9jayIsInN0cm9rZSIsImZvbnQiLCJub2RlVGVtcGxhdGUiLCJOb2RlIiwic2VsZWN0aW9uQWRvcm5lZCIsInJlc2l6YWJsZSIsImxheW91dENvbmRpdGlvbnMiLCJQYXJ0IiwiTGF5b3V0U3RhbmRhcmQiLCJMYXlvdXROb2RlU2l6ZWQiLCJmcm9tU3BvdCIsIlNwb3QiLCJBbGxTaWRlcyIsInRvU3BvdCIsImlzU2hhZG93ZWQiLCJzaGFkb3dDb2xvciIsIm1ha2VUd29XYXkiLCJ2IiwiTmFOIiwib2ZPYmplY3QiLCJmaWxsIiwic3Ryb2tlV2lkdGgiLCJtYXJnaW4iLCJzdHJldGNoIiwiRmlsbCIsIlJvd0NvbHVtbkRlZmluaXRpb24iLCJzaXppbmciLCJOb25lIiwiYWxpZ25tZW50IiwiQ2VudGVyIiwiTWFyZ2luIiwiVG9wUmlnaHQiLCJwYWRkaW5nIiwiVG9wTGVmdCIsImRlZmF1bHRBbGlnbm1lbnQiLCJMZWZ0IiwiSG9yaXpvbnRhbCIsIml0ZW1UZW1wbGF0ZSIsImxpbmtUZW1wbGF0ZSIsIkxpbmsiLCJsYXllck5hbWUiLCJyZXNoYXBhYmxlIiwicm91dGluZyIsIkF2b2lkc05vZGVzIiwiY29ybmVyIiwiY3VydmUiLCJKdW1wT3ZlciIsInRleHRBbGlnbiIsInNlZ21lbnRJbmRleCIsInNlZ21lbnRPZmZzZXQiLCJQb2ludCIsInNlZ21lbnRPcmllbnRhdGlvbiIsIk9yaWVudFVwcmlnaHQiLCJub2RlRGF0YUFycmF5IiwiaXRlbXMiLCJpc2tleSIsImZpZ3VyZSIsIm1vZGVsIiwiR3JhcGhMaW5rc01vZGVsIiwiY29waWVzQXJyYXlzIiwiY29waWVzQXJyYXlPYmplY3RzIiwibGlua0RhdGFBcnJheSIsInRvVGV4dCIsInNob3dTZWxlY3RUYWJsZURpYWxvZyIsInNlbGVjdFNpbmdsZVRhYmxlRGlhbG9nIiwic2hvd1NlbGVjdEZpZWxkQ29ubmVjdERpYWxvZyIsInNlbGVjdGlvbiIsImVhY2giLCJwYXJ0IiwidGFibGVSZWxhdGlvbkNvbm5lY3RUd29UYWJsZURpYWxvZyIsImFkZFRhYmxlVG9EaWFncmFtIiwidGFibGVJc0V4aXN0SW5EaWFncmFtIiwic2luZ2xlVGFibGUiLCJhbGxGaWVsZHNTdHlsZSIsImRpc3BsYXlUZXh0IiwiZmllbGRDYXB0aW9uIiwicmVuZGVyZXJGaWVsZFN0eWxlIiwibW9kZWxOb2RlRGF0YSIsImxvYyIsImZpZWxkcyIsInRhYmxlQ2FwdGlvbiIsInRhYmxlRGlzcGxheVRleHQiLCJzdGFydFRyYW5zYWN0aW9uIiwiYWRkTm9kZURhdGEiLCJjb21taXRUcmFuc2FjdGlvbiIsImRlbGV0ZVNlbGVjdGlvbiIsImNvbW1hbmRIYW5kbGVyIiwiY2FuRGVsZXRlU2VsZWN0aW9uIiwiY29ubmVjdFNlbGVjdGlvbk5vZGUiLCJjb25uZWN0RGF0YSIsImxpbmVEYXRhIiwibGluZUlkIiwiZnJvbVRleHQiLCJhZGRMaW5rRGF0YSIsInNhdmVNb2RlbFRvU2VydmVyIiwic2VuZERhdGEiLCJyZWxhdGlvbkNvbnRlbnQiLCJnZXREYXRhSnNvbiIsInJlbGF0aW9uRGlhZ3JhbUpzb24iLCJnZXREaWFncmFtSnNvbiIsImlzT25nb2luZyIsImRvdWJsZUNsaWNrIiwiZSIsIm5vZGUiLCJCdWlsZFZpZXciLCJvcCIsIkZyYW1lX09wZW5JZnJhbWVXaW5kb3ciLCJEaWFsb2dJZCIsInBhcnNlIiwiZGF0YUpzb24iLCJTdHJpbmdUb0pzb24iLCJzZXREYXRhSnNvbiIsImNvbnZlcnRUb0Z1bGxKc29uIiwiZHJhd09iakluRGlhZ3JhbSIsImZ1bGxKc29uIiwibGluZUxpc3QiLCJzZXRUaW1lb3V0Iiwic2ltcGxlSnNvbiIsImZ1bmMiLCJBcnJheSIsImFsbFRhYmxlcyIsInNpbmdsZVRhYmxlRGF0YSIsImdldFNpbmdsZVRhYmxlRGF0YSIsInNpbmdsZVRhYmxlRmllbGRzRGF0YSIsImZpZWxkIiwiZmllbGRJc1BrIiwiZ2V0S2V5RmllbGRCcnVzaCIsImdldE5vckZpZWxkQnJ1c2giLCJub2RlcyIsImxvY2F0aW9uIiwieCIsInkiLCJhbGVydCIsImxpbmtzIiwianNvbiIsInRvSnNvbiIsImFsZXJ0RGF0YUpzb24iLCJBbGVydEpzb25Db2RlIiwiYWxlcnREaWFncmFtSnNvbiIsImRpYWdyYW1Kc29uIiwiZG93bkxvYWRNb2RlbFBORyIsIm1ha2VJbWFnZURhdGEiLCJiYWNrZ3JvdW5kIiwicmV0dXJuVHlwZSIsInNjYWxlIiwiYmxvYiIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImZpbGVuYW1lIiwiYSIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsImhyZWYiLCJkb3dubG9hZCIsInVuZGVmaW5lZCIsIm5hdmlnYXRvciIsIm1zU2F2ZUJsb2IiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJyZXZva2VPYmplY3RVUkwiLCJyZW1vdmVDaGlsZCIsImdldFRhYmxlc0RhdGFVcmwiLCJnZXRUYWJsZUZpZWxkc1VybCIsInJlbGF0aW9uVGFibGVUcmVlIiwidGFibGVUcmVlU2V0dGluZyIsIl9kYnRhYmxlcmVsYXRpb25jb21wIiwic2VsZWN0ZWRSZWxhdGlvblRhYmxlTm9kZSIsInRhYmxlVHJlZVJvb3REYXRhIiwicGFyZW50SWQiLCJfbm9kZUV4VHlwZSIsImN1cnJlbnRTZWxlY3RlZE5vZGUiLCJyZWxhdGlvblRhYmxlRWRpdG9yVmlldyIsImlzU2hvd1RhYmxlRWRpdERldGFpbCIsImlzU3ViRWRpdFRyIiwiaXNNYWluRWRpdFRyIiwic2VsUEtEYXRhIiwic2VsU2VsZktleURhdGEiLCJzZWxGb3JlaWduS2V5RGF0YSIsImVtcHR5RWRpdG9yRGF0YSIsInNpbmdsZU5hbWUiLCJwa0ZpZWxkTmFtZSIsImRlc2MiLCJzZWxmS2V5RmllbGROYW1lIiwib3V0ZXJLZXlGaWVsZE5hbWUiLCJyZWxhdGlvblR5cGUiLCJpc1NhdmUiLCJjb25kaXRpb24iLCJjdXJyZW50RWRpdG9yRGF0YSIsInNlbGVjdFRhYmxlVHJlZSIsIm9sZFNlbGVjdGVkREJMaW5rSWQiLCJkaXNhYmxlZERCTGluayIsImRiTGlua0VudGl0aWVzIiwidGFibGVUcmVlT2JqIiwiZGlhbG9nIiwiYWRkVGFibGVUb1JlbGF0aW9uVGFibGVUcmVlIiwidGFibGVUcmVlRGF0YSIsImFsbFRhYmxlVHJlZURhdGEiLCJ0ZW1wRGF0YVN0b3JlIiwidHJlZU5vZGVTZXR0aW5nIiwiTWFpblRhYmxlTm9kZUltZyIsIlN1YlRhYmxlTm9kZUltZyIsImdldFRhYmxlc0FuZEJpbmRPbGRTZWxlY3RlZCIsImhhbmRsZXIiLCJ2YWwiLCJvbGRWYWwiLCJyZXN1bHRJdGVtQ29weUVkaXRFbmFibGVWYWx1ZSIsImRlZXAiLCJ0b09iaiIsImZyb21PYmoiLCJnZXRUYWJsZUZpZWxkc0J5VGFibGVJZCIsIlBvc3RTeW5jIiwiZ2V0RW1wdHlSZXN1bHRJdGVtIiwiZ2V0RXhpc3RSZXN1bHRJdGVtIiwiZGJMaW5rRW50aXR5TGlzdCIsImJpbmRTZWxlY3RUYWJsZVRyZWUiLCJpc0dldENvb2tpZU9sZFNlbGVjdGVkIiwiQ29va2llVXRpbGl0eSIsIkdldENvb2tpZSIsImJpbmRUb1RyZWVEYXRhIiwib3V0ZXJJZCIsImNoYW5nZURCTGluayIsImRiTGlua0lkIiwiU2V0Q29va2llMU1vbnRoIiwiZ2V0TWFpblRhYmxlREJMaW5rSWQiLCJnZXRNYWluVGFibGVJZCIsImRlbGV0ZVNlbGVjdGVkUmVsYXRpb25UcmVlTm9kZSIsImlzU2VsZWN0ZWRSb290UmVsYXRpb25UYWJsZU5vZGUiLCJpc1BhcmVudCIsInNxbEdlbmVyYWxEZXNpZ25Db21wIiwicmVtb3ZlTm9kZSIsImJlZ2luU2VsZWN0VGFibGVUb1JlbGF0aW9uVGFibGUiLCJtYWluVGFibGVEQkxpbmtJZCIsImFwcGVuZE1haW5UYWJsZU5vZGVQcm9wIiwiYXBwZW5kU3ViVGFibGVOb2RlUHJvcCIsImJ1aWxkUmVsYXRpb25UYWJsZU5vZGUiLCJzb3VyY2VOb2RlIiwidHJlZU5vZGVJZCIsImdldE1haW5SZWxhdGlvblRhYmxlTm9kZSIsImdldE1haW5UYWJsZU5hbWUiLCJnZXRNYWluVGFibGVDYXB0aW9uIiwiaXNTZWxlY3RlZE1haW5SZWxhdGlvblRhYmxlTm9kZSIsIm5ld05vZGUiLCJhZGROb2RlcyIsIm5ld1Jlc3VsdEl0ZW0iLCJ0YWJsZUNvZGUiLCJwYXJlbnROb2RlIiwiZ2V0UGFyZW50Tm9kZSIsImV4aXN0UmVzdWx0SXRlbSIsImdldFJlc3VsdERhdGEiLCJzZXJpYWxpemVSZWxhdGlvbiIsImlzRm9ybWF0IiwiZGVzZXJpYWxpemVSZWxhdGlvbiIsImpzb25TdHJpbmciLCJtYWluVGFibGVJZCIsIm1haW5UYWJsZU5hbWUiLCJtYWluVGFibGVDYXB0aW9uIiwicmVsYXRpb25EYXRhIiwidGVtcERhdGEiLCJ0cmVlTm9kZURhdGEiLCJhbGVydFNlcmlhbGl6ZVJlbGF0aW9uIiwiaW5wdXREZXNlcmlhbGl6ZVJlbGF0aW9uIiwiUHJvbXB0IiwiRGlhbG9nUHJvbXB0SWQiLCJiYXNlSW5mbyIsInNlcmlhbGl6ZSIsImNsYXNzTmFtZSIsInBsYWNlaG9sZGVyIiwiY3VzdFJlYWRvbmx5IiwiY3VzdERpc2FibGVkIiwic3RhdHVzIiwiYmluZFRvRmllbGQiLCJmaWVsZERhdGFUeXBlIiwiZmllbGRMZW5ndGgiLCJ2YWxpZGF0ZVJ1bGVzIiwiZGVmYXVsdFZhbHVlIiwiZGVmYXVsdFR5cGUiLCJkZWZhdWx0VGV4dCIsImRlZmF1bHREaXNwbGF5VGV4dCIsImJpbmRUb1Byb3AiLCJuZXdWYWx1ZSIsImJpbmRUb0ZpZWxkUHJvcCIsImRlZmF1bHRWYWx1ZVByb3AiLCJJc051bGxPckVtcHR5IiwidmFsaWRhdGVSdWxlc1Byb3AiLCJzZXRDb21wbGV0ZWQiLCJzZWxlY3RCaW5kRmllbGRWaWV3IiwiX1NlbGVjdEJpbmRPYmoiLCJwYXJlbnQiLCJhcHBGb3JtIiwic2VsZWN0QmluZFRvU2luZ2xlRmllbGREaWFsb2dCZWdpbiIsImdldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWUiLCJzZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlIiwic2VsZWN0RGVmYXVsdFZhbHVlVmlldyIsInNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ0JlZ2luIiwic2V0U2VsZWN0RW52VmFyaWFibGVSZXN1bHRWYWx1ZSIsInNlbGVjdFZhbGlkYXRlUnVsZVZpZXciLCJzZWxlY3RWYWxpZGF0ZVJ1bGVEaWFsb2dCZWdpbiIsImdldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlIiwic2V0U2VsZWN0VmFsaWRhdGVSdWxlUmVzdWx0VmFsdWUiLCJub3JtYWxEYXRhU291cmNlIiwiZGVmYXVsdElzTnVsbCIsInNxbERhdGFTb3VyY2UiLCJkaWN0aW9uYXJ5SWREYXRhU291cmNlIiwicmVzdERhdGFTb3VyY2UiLCJzdGF0aWNEYXRhU291cmNlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiZ2V0VGFibGVGaWVsZHNEYXRhVXJsIiwic2VsZWN0ZWREYXRhIiwiZmllbGRUYWJsZSIsImZpbHRlckFsbEZpZWxkc1RvVGFibGUiLCJvbkRibENsaWNrIiwidGFibGVIZWlnaHQiLCJpc1NlbGVjdGVkVG9CaW5kIiwib2xkUmVsYXRpb25EYXRhU3RyaW5nIiwib2xkQmluZEZpZWxkRGF0YSIsImZkQ29udHJvbFNlbGVjdEJpbmRUb1NpbmdsZUZpZWxkRGlhbG9nV3JhcCIsImdldEFsbFRhYmxlc0ZpZWxkcyIsInJlc2V0RmllbGRUb1NlbGVjdGVkU3RhdHVzIiwiX2FsbEZpZWxkcyIsInNlbGVjdGVkRmllbGQiLCJmaWVsZERhdGFMZW5ndGgiLCJPcGVuZXJXaW5kb3dPYmoiLCJidXR0b25zIiwiYnV0dG9uVHlwZSIsIkVkaXRCdXR0b24iLCJEZWxldGVCdXR0b24iLCJNb3ZlVXBCdXR0b24iLCJNb3ZlRG93bkJ1dHRvbiIsImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhIiwiY2FwdGlvbiIsInNhdmVBbmRDbG9zZSIsImFwaXMiLCJjdXN0U2VydmVyUmVzb2x2ZU1ldGhvZCIsImN1c3RTZXJ2ZXJSZXNvbHZlTWV0aG9kUGFyYSIsImN1c3RDbGllbnRSZW5kZXJlck1ldGhvZCIsImN1c3RDbGllbnRSZW5kZXJlck1ldGhvZFBhcmEiLCJjdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZCIsImN1c3RDbGllbnRSZW5kZXJlckFmdGVyTWV0aG9kUGFyYSIsImN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZCIsImN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZFBhcmEiLCJhcGkiLCJnZXRBUElEYXRhIiwiYXBpVHJlZU9iaiIsImFwaVRyZWVTZXR0aW5nIiwiYXBpU2VsZWN0RGF0YSIsImFwaURhdGEiLCJlZGl0VGFibGVPYmplY3QiLCJlZGl0VGFibGVDb25maWciLCJTdGF0dXMiLCJBZGRBZnRlclJvd0V2ZW50IiwiRGF0YUZpZWxkIiwiVGVtcGxhdGVzIiwiVGl0bGUiLCJCaW5kTmFtZSIsIlJlbmRlcmVyIiwiVGl0bGVDZWxsQ2xhc3NOYW1lIiwiRm9ybWF0ZXIiLCJnZXRBUElUZXh0IiwiQ2xpZW50RGF0YVNvdXJjZSIsIldpZHRoIiwiUm93SWRDcmVhdGVyIiwiVGFibGVDbGFzcyIsIlJlbmRlcmVyVG8iLCJUYWJsZUlkIiwiVGFibGVBdHRycyIsImNlbGxwYWRkaW5nIiwiY2VsbHNwYWNpbmciLCJib3JkZXIiLCJnZXRGb3JtTWFpblRhYmxlRmllbGRzIiwiSGlkZGVuIiwib2xkRm9ybUlkIiwicmVhZHkiLCJ0YWJsZURhdGFKc29uIiwiYmluZEFQSVRyZWVBbmRJbml0RWRpdFRhYmxlIiwiZ2V0SnNvbiIsImRpYWxvZ0VsZW0iLCJlZGl0IiwiZWRpdElubmVyRm9ybVNhdmVCdXR0b24iLCJkZWwiLCJBcnJheVV0aWxpdHkiLCJEZWxldGUiLCJtb3ZlVXAiLCJNb3ZlVXAiLCJtb3ZlRG93biIsIk1vdmVEb3duIiwiYWRkSW5uZXJGb3JtU2F2ZUJ1dHRvbiIsImVkaXRTYXZlQnV0dG9uU3RhdHVjIiwicmVzZXRJbm5lclNhdmVCdXR0b25EYXRhIiwiaW5uZXJGb3JtQnV0dG9uRWRpdCIsImJpbmRUYWJsZUZpZWxkcyIsImNsZWFyQVBJIiwiQ2xvbmVTdHJpbmdpZnkiLCJzYXZlSW5uZXJTYXZlQnV0dG9uVG9MaXN0Iiwic2luZ2xlSW5uZXJGb3JtQnV0dG9uRGF0YSIsIkNvbXBsZXRlZEVkaXRpbmdSb3ciLCJHZXRTZXJpYWxpemVKc29uIiwic2V0IiwiZmllbGRzRGF0YSIsIkRlZmF1bHRWYWx1ZSIsIk9iamVjdCIsImNyZWF0ZSIsIkVkaXRUYWJsZSIsIkluaXRpYWxpemF0aW9uIiwiTG9hZEpzb25EYXRhIiwiUmVtb3ZlQWxsUm93IiwiYWRkRmllbGQiLCJBZGRFZGl0aW5nUm93QnlUZW1wbGF0ZSIsInJlbW92ZUZpZWxkIiwiUmVtb3ZlUm93IiwiYWRkSW5uZXJGb3JtQ2xvc2VCdXR0b24iLCJjbG9zZUJ1dHRvbkRhdGEiLCJ0eHRfc2VhcmNoX2FwaV90ZXh0IiwiZ2V0QXBpQ29uZmlnQW5kQmluZFRvVGFibGUiLCJhZGRBUEkiLCJydW5UaW1lIiwicmVtb3ZlQVBJIiwiYmluZFRvU2VhcmNoRmllbGQiLCJjb2x1bW5UaXRsZSIsImNvbHVtblRhYmxlTmFtZSIsImNvbHVtbk5hbWUiLCJjb2x1bW5DYXB0aW9uIiwiY29sdW1uRGF0YVR5cGVOYW1lIiwiY29sdW1uT3BlcmF0b3IiLCJzZWxlY3RDb2x1bW4iLCJiaW5kVG9TZWFyY2hGaWVsZFByb3AiLCJkYXRhU2V0UE8iLCJ0cmVlTm9kZUFycmF5Iiwicm9vdE5vZGUiLCJwaWQiLCJkc05hbWUiLCJkc0lkIiwibm9kZVR5cGUiLCJyZWxhdGVkVGFibGVWb0xpc3QiLCJydFRhYmxlQ2FwdGlvbiIsInJ0VGFibGVJZCIsImoiLCJ0YWJsZUZpZWxkUE9MaXN0Iiwic2luZ2xlTm9kZSIsImZpZWxkSWQiLCJ6VHJlZVVMIiwiZmllbGRQTyIsImdldERhdGEiLCJzZXREYXRhIiwibGlzdERlc2lnbiIsImJpbmRQcm9wIiwidGFyZ2V0QnV0dG9uSWQiLCJjb2x1bW5BbGlnbiIsImJpbmRQcm9wUHJvcCIsImRhdGFTZXRWbyIsImNvbHVtblZvTGlzdCIsImNvbHVtbklkIiwiY29sdW1uVm8iLCJlZGl0VmlldyIsInByZXZpZXdXZWJGb3JtVXJsIiwiZGVsZXRlIiwibW92ZSIsImlkRmllbGROYW1lIiwiSVZpZXdUYWJsZVJlbmRlcmVyIiwiVG9EYXRlWVlZWV9NTV9ERCIsImZvcm1VcGRhdGVUaW1lIiwidGFibGVEYXRhT3JpZ2luYWwiLCJzZWxlY3Rpb25Sb3dzIiwic2VhcmNoVGV4dCIsIl9tb2R1bGVsaXN0d2ViZm9ybWNvbXAiLCJtb2R1bGVEYXRhIiwiYWN0aXZlVGFiTmFtZSIsImZpbHRlclRhYmxlRGF0YSIsImluZGV4T2YiLCJnZXRNb2R1bGVOYW1lIiwibW9kdWxlVGV4dCIsIm1vZHVsZUlkIiwibGlzdCIsImFkZCIsIk9wZW5OZXdXaW5kb3ciLCJJVmlld1RhYmxlRGVsZXRlUm93Iiwic3RhdHVzRW5hYmxlIiwic3RhdHVzTmFtZSIsIklWaWV3Q2hhbmdlU2VydmVyU3RhdHVzRmFjZSIsInN0YXR1c0NoYW5nZSIsIklWaWV3TW92ZUZhY2UiLCJwcmV2aWV3V2ViRm9ybSIsIklWaWV3VGFibGVNYXJlU3VyZVNlbGVjdGVkT25lIiwidGhlbiIsInByZXZpZXdVcmwiLCJGb3JtSWQiLCJPcGVyYXRpb25UeXBlIiwiUmVjb3JkSWQiLCJPcGVuTmV3VGFiV2luZG93IiwibGlzdE1vZHVsZUlkIiwibGlzdFVwZGF0ZVRpbWUiLCJfbW9kdWxlbGlzdHdlYmxpc3Rjb21wIiwiZ2V0REJMaW5rRGF0YVVybCIsImdldFNpbmdsZURCTGlua0RhdGFVcmwiLCJkYkxpbmtUcmVlIiwic2VsZWN0ZWREQkxpbmsiLCJzZWxlY3RlZERCTGlua0RhdGEiLCJzZWxlY3REQkxpbmtNb2RlbERpYWxvZ1dyYXAiLCJiZWdpblNlbGVjdERCTGluayIsImdldERCTGlua0RhdGFJbml0VHJlZSIsImRiTGlua1pUcmVlVUwiLCJ0eHRfZGJMaW5rX3NlYXJjaF90ZXh0IiwiZGJMaW5rRGF0YSIsImdldFNlbGVjdGVkREJMaW5rTmFtZSIsImRiTGlua05hbWUiXSwibWFwcGluZ3MiOiJBQUFBLGFBRUFBLElBQUFDLFVBQUEsOEJBQUEsQ0FDQUMsS0FBQSxXQUNBLElBQUFDLEVBQUFDLEtBRUEsTUFBQSxDQUNBQyxZQUFBLENBQ0FDLGlCQUFBLDZDQUNBQyxlQUFBLHlDQUVBQyxXQUFBLFFBQ0FDLFlBQUEsR0FDQUMsV0FBQSxHQUNBQyxXQUFBLEdBQ0FDLFdBQUEsSUFDQUMsS0FBQSxDQUNBQyxnQkFBQSxhQUNBQyxRQUFBLEtBQ0FDLGlCQUFBLEtBQ0FDLFlBQUEsQ0FDQUMsTUFBQSxDQUNBQyxRQUFBLEVBQ0FDLElBQUEsSUFFQWxCLEtBQUEsQ0FDQW1CLElBQUEsQ0FDQUMsS0FBQSxnQkFFQUMsV0FBQSxDQUNBSixR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QWxGLEVBQUE4eUIsV0FBQXZxQixTQUFBdEQsT0FBQUMsSUFDQWxGLEVBQUE4eUIsV0FBQXZxQixTQUFBckQsR0FBQTZFLEtBQUEsbURBR0EvSixFQUFBa0UsTUFBQWt2QixjQUFBcHFCLGFBQUEsS0FBQSw2QkFBQUMsY0FBQUMsUUFFQWxKLEVBQUE4eUIsV0FBQWx5QixRQUFBNEQsRUFBQVcsR0FBQUMsTUFBQUMsS0FBQWIsRUFBQXhFLEVBQUFrRSxNQUFBa3ZCLGVBQUFwekIsRUFBQTh5QixXQUFBaHlCLFlBQUFkLEVBQUE4eUIsV0FBQXZxQixVQUVBdkksRUFBQTh5QixXQUFBbHlCLFFBQUF1QixXQUFBLEdBRUFuQyxFQUFBOHlCLFdBQUFseUIsUUFBQWtCLE1BQUE5QixFQUNBbUosbUJBQUFuSixFQUFBOHlCLFdBQUFseUIsUUFBQVosRUFBQWtFLE1BQUFtdkIsdUJBQUFudkIsTUFBQW1GLE1BQUEsTUFBQSxRQUVBakYsY0FBQWtCLE1BQUFiLE9BQUFMLGNBQUFtQixjQUFBLEdBQUFSLEVBQUFTLFFBQUEsT0FFQXZGLE9BRUE4eUIsZUFBQSxTQUFBTyxHQUNBcnpCLEtBQUEreUIsbUJBQUFNLEVBQ0FyekIsS0FBQStGLE1BQUEscUJBQUFzdEIsSUFFQUMsc0JBQUEsV0FDQSxPQUFBLE1BQUF0ekIsS0FBQSt5QixtQkFDQSxXQUVBL3lCLEtBQUEreUIsbUJBQUFRIiwiZmlsZSI6IkJ1aWxkZXJWdWVFWENvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwic2VsZWN0LWRlZmF1bHQtdmFsdWUtZGlhbG9nXCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldEdyb3VwVHJlZURhdGE6IFwiL1Jlc3QvQnVpbGRlci9FbnZWYXJpYWJsZUdyb3VwL0dldFRyZWVEYXRhXCIsXG4gICAgICAgIHJlbG9hZExpc3REYXRhOiBcIi9SZXN0L0J1aWxkZXIvRW52VmFyaWFibGUvR2V0TGlzdERhdGFcIlxuICAgICAgfSxcbiAgICAgIHNlbGVjdFR5cGU6IFwiQ29uc3RcIixcbiAgICAgIHNlbGVjdFZhbHVlOiBcIlwiLFxuICAgICAgc2VsZWN0VGV4dDogXCJcIixcbiAgICAgIGNvbnN0VmFsdWU6IFwiXCIsXG4gICAgICBsaXN0SGVpZ2h0OiA0NzAsXG4gICAgICB0cmVlOiB7XG4gICAgICAgIHRyZWVJZEZpZWxkTmFtZTogXCJlbnZHcm91cElkXCIsXG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRyZWVTZWxlY3RlZE5vZGU6IG51bGwsXG4gICAgICAgIHRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgYXN5bmM6IHtcbiAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHVybDogXCJcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiZW52R3JvdXBUZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiZW52R3JvdXBJZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwiZW52R3JvdXBQYXJlbnRJZFwiLFxuICAgICAgICAgICAgICByb290SWQ6IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIHZhciBfc2VsZiA9IHRoaXMuZ2V0WlRyZWVPYmoodHJlZUlkKS5faG9zdDtcblxuICAgICAgICAgICAgICBfc2VsZi50cmVlTm9kZVNlbGVjdGVkKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkFzeW5jU3VjY2VzczogZnVuY3Rpb24gb25Bc3luY1N1Y2Nlc3MoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUsIG1zZykge1xuICAgICAgICAgICAgICBhcHBMaXN0LnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRhYmxlRGF0YTogW10sXG4gICAgICBjb2x1bW5zQ29uZmlnOiBbe1xuICAgICAgICB0aXRsZTogJ+WPmOmHj+WQjeensCcsXG4gICAgICAgIGtleTogJ2VudlZhclRleHQnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+WPmOmHj+WAvCcsXG4gICAgICAgIGtleTogJ2VudlZhclZhbHVlJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfmk43kvZwnLFxuICAgICAgICBrZXk6ICdlbnZWYXJJZCcsXG4gICAgICAgIHdpZHRoOiAxMjAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgXCJjbGFzc1wiOiBcImxpc3Qtcm93LWJ1dHRvbi13cmFwXCJcbiAgICAgICAgICB9LCBbTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5TZWxlY3RlZEJ1dHRvbihoLCBwYXJhbXMsIFwiZW52VmFySWRcIiwgX3NlbGYpXSk7XG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgc2VhcmNoQ29uZGl0aW9uOiB7XG4gICAgICAgIGVudlZhckdyb3VwSWQ6IHtcbiAgICAgICAgICB2YWx1ZTogXCJcIixcbiAgICAgICAgICB0eXBlOiBTZWFyY2hVdGlsaXR5LlNlYXJjaEZpZWxkVHlwZS5TdHJpbmdUeXBlXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBwYWdlVG90YWw6IDAsXG4gICAgICBwYWdlU2l6ZTogMTAwLFxuICAgICAgcGFnZU51bTogMVxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5sb2FkRGF0YSgpO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgYmVnaW5TZWxlY3Q6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0KG9sZERhdGEpIHtcbiAgICAgIGNvbnNvbGUubG9nKG9sZERhdGEpO1xuICAgICAgdmFyIGVsZW0gPSB0aGlzLiRyZWZzLnNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ1dyYXA7XG4gICAgICB2YXIgaGVpZ2h0ID0gNDUwO1xuICAgICAgRGlhbG9nVXRpbGl0eS5EaWFsb2dFbGVtT2JqKGVsZW0sIHtcbiAgICAgICAgbW9kYWw6IHRydWUsXG4gICAgICAgIGhlaWdodDogNjgwLFxuICAgICAgICB3aWR0aDogOTgwLFxuICAgICAgICB0aXRsZTogXCLorr7nva7pu5jorqTlgLxcIlxuICAgICAgfSk7XG4gICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS13aWRnZXQtb3ZlcmxheVwiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDApO1xuICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktZGlhbG9nXCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMSk7XG5cbiAgICAgIGlmIChvbGREYXRhID09IG51bGwpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RWYWx1ZSA9IFwiXCI7XG4gICAgICAgIHRoaXMuc2VsZWN0VGV4dCA9IFwiXCI7XG4gICAgICAgIHRoaXMuY29uc3RWYWx1ZSA9IFwiXCI7XG4gICAgICB9XG5cbiAgICAgIDtcbiAgICB9LFxuICAgIGxvYWREYXRhOiBmdW5jdGlvbiBsb2FkRGF0YSgpIHtcbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXRHcm91cFRyZWVEYXRhLCB7fSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuXG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIGlmIChyZXN1bHQuZGF0YSAhPSBudWxsICYmIHJlc3VsdC5kYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0LmRhdGEubGVuZ3RoOyBpKyspIHt9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhpcy50cmVlLnRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJChcIiN6VHJlZVVMXCIpLCB0aGlzLnRyZWUudHJlZVNldHRpbmcsIHJlc3VsdC5kYXRhKTtcbiAgICAgICAgICB0aGlzLnRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgICAgICAgdGhpcy50cmVlLnRyZWVPYmouX2hvc3QgPSB0aGlzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgZnVuY3Rpb24gKCkge30pO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIGdldFNlbGVjdEluc3RhbmNlTmFtZTogZnVuY3Rpb24gZ2V0U2VsZWN0SW5zdGFuY2VOYW1lKCkge1xuICAgICAgcmV0dXJuIEJhc2VVdGlsaXR5LkdldFVybFBhcmFWYWx1ZShcImluc3RhbmNlTmFtZVwiKTtcbiAgICB9LFxuICAgIHNlbGVjdENvbXBsZXRlOiBmdW5jdGlvbiBzZWxlY3RDb21wbGV0ZSgpIHtcbiAgICAgIHZhciByZXN1bHQgPSB7fTtcblxuICAgICAgaWYgKHRoaXMuc2VsZWN0VHlwZSA9PSBcIkNvbnN0XCIpIHtcbiAgICAgICAgaWYgKHRoaXMuY29uc3RWYWx1ZSA9PSBcIlwiKSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIFwi6K+36K6+572u5bi46YeP6buY6K6k5YC877yBXCIsIG51bGwpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlc3VsdC5UeXBlID0gXCJDb25zdFwiO1xuICAgICAgICByZXN1bHQuVmFsdWUgPSB0aGlzLmNvbnN0VmFsdWU7XG4gICAgICAgIHJlc3VsdC5UZXh0ID0gdGhpcy5jb25zdFZhbHVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzdWx0LlR5cGUgPSBcIkVudlZhclwiO1xuICAgICAgICByZXN1bHQuVmFsdWUgPSB0aGlzLnNlbGVjdFZhbHVlO1xuICAgICAgICByZXN1bHQuVGV4dCA9IHRoaXMuc2VsZWN0VGV4dDtcbiAgICAgIH1cblxuICAgICAgdGhpcy4kZW1pdCgnb24tc2VsZWN0ZWQtZGVmYXVsdC12YWx1ZScsIHJlc3VsdCk7XG4gICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgfSxcbiAgICBjbGVhckNvbXBsZXRlOiBmdW5jdGlvbiBjbGVhckNvbXBsZXRlKCkge1xuICAgICAgdGhpcy4kZW1pdCgnb24tc2VsZWN0ZWQtZGVmYXVsdC12YWx1ZScsIG51bGwpO1xuICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgIH0sXG4gICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5DbG9zZURpYWxvZ0VsZW0odGhpcy4kcmVmcy5zZWxlY3REZWZhdWx0VmFsdWVEaWFsb2dXcmFwKTtcbiAgICB9LFxuICAgIHNlbGVjdGlvbkNoYW5nZTogZnVuY3Rpb24gc2VsZWN0aW9uQ2hhbmdlKCkge30sXG4gICAgY2xlYXJTZWFyY2hDb25kaXRpb246IGZ1bmN0aW9uIGNsZWFyU2VhcmNoQ29uZGl0aW9uKCkge1xuICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuc2VhcmNoQ29uZGl0aW9uKSB7XG4gICAgICAgIHRoaXMuc2VhcmNoQ29uZGl0aW9uW2tleV0udmFsdWUgPSBcIlwiO1xuICAgICAgfVxuICAgIH0sXG4gICAgdHJlZU5vZGVTZWxlY3RlZDogZnVuY3Rpb24gdHJlZU5vZGVTZWxlY3RlZChldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgdGhpcy5wYWdlTnVtID0gMTtcbiAgICAgIHRoaXMuY2xlYXJTZWFyY2hDb25kaXRpb24oKTtcbiAgICAgIHRoaXMuc2VhcmNoQ29uZGl0aW9uLmVudlZhckdyb3VwSWQudmFsdWUgPSB0cmVlTm9kZVt0aGlzLnRyZWUudHJlZUlkRmllbGROYW1lXTtcbiAgICAgIHRoaXMucmVsb2FkRGF0YSgpO1xuICAgIH0sXG4gICAgcmVsb2FkRGF0YTogZnVuY3Rpb24gcmVsb2FkRGF0YSgpIHtcbiAgICAgIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlQmluZERhdGFCeVNlYXJjaCh7XG4gICAgICAgIHVybDogdGhpcy5hY0ludGVyZmFjZS5yZWxvYWRMaXN0RGF0YSxcbiAgICAgICAgcGFnZU51bTogdGhpcy5wYWdlTnVtLFxuICAgICAgICBwYWdlU2l6ZTogdGhpcy5wYWdlU2l6ZSxcbiAgICAgICAgc2VhcmNoQ29uZGl0aW9uOiB0aGlzLnNlYXJjaENvbmRpdGlvbixcbiAgICAgICAgcGFnZUFwcE9iajogdGhpcyxcbiAgICAgICAgdGFibGVMaXN0OiB0aGlzLFxuICAgICAgICBpZEZpZWxkOiBcImVudlZhcklkXCIsXG4gICAgICAgIGF1dG9TZWxlY3RlZE9sZFJvd3M6IHRydWUsXG4gICAgICAgIHN1Y2Nlc3NGdW5jOiBudWxsLFxuICAgICAgICBsb2FkRGljdDogZmFsc2UsXG4gICAgICAgIGN1c3RQYXJhczoge31cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgc2VsZWN0ZWQ6IGZ1bmN0aW9uIHNlbGVjdGVkKGlkLCBwYXJhbXMpIHtcbiAgICAgIGNvbnNvbGUubG9nKHBhcmFtcyk7XG4gICAgICB0aGlzLnNlbGVjdFZhbHVlID0gcGFyYW1zLnJvdy5lbnZWYXJWYWx1ZTtcbiAgICAgIHRoaXMuc2VsZWN0VGV4dCA9IHBhcmFtcy5yb3cuZW52VmFyVGV4dDtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjxkaXYgIHJlZj1cXFwic2VsZWN0RGVmYXVsdFZhbHVlRGlhbG9nV3JhcFxcXCIgY2xhc3M9XFxcImdlbmVyYWwtZWRpdC1wYWdlLXdyYXBcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBub25lO21hcmdpbi10b3A6IDBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8dGFicyA6dmFsdWU9XFxcInNlbGVjdFR5cGVcXFwiIHYtbW9kZWw9XFxcInNlbGVjdFR5cGVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWItcGFuZSBsYWJlbD1cXFwiXFx1NUUzOFxcdTkxQ0ZcXFwiIG5hbWU9XFxcIkNvbnN0XFxcIiA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWZvcm0gOmxhYmVsLXdpZHRoPVxcXCI4MFxcXCIgc3R5bGU9XFxcIndpZHRoOiA4MCU7bWFyZ2luOiA1MHB4IGF1dG8gYXV0bztcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0taXRlbSBsYWJlbD1cXFwiXFx1NUUzOFxcdTkxQ0ZcXHVGRjFBXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJjb25zdFZhbHVlXFxcIj48L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWZvcm0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90YWItcGFuZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGFiLXBhbmUgbGFiZWw9XFxcIlxcdTczQUZcXHU1ODgzXFx1NTNEOFxcdTkxQ0ZcXFwiIG5hbWU9XFxcIkVudlZhclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImhlaWdodDogNDVweDtib3JkZXItYm90dG9tOiBkb3R0ZWQgMXB4ICM4YThhOGE7bWFyZ2luLWJvdHRvbTogMTBweDtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiZmxvYXQ6IHJpZ2h0O3BhZGRpbmc6IDhweDtib3JkZXItcmFkaXVzOiA4cHg7Y29sb3I6b3JhbmdlcmVkO2JvcmRlcjogc29saWQgMXB4ICNhZGJlZDg7XFxcIj5cXHU1REYyXFx1N0VDRlxcdTkwMDlcXHU2MkU5XFx1RkYxQXt7c2VsZWN0VGV4dH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwid2lkdGg6IDMwJTtmbG9hdDogbGVmdDtoZWlnaHQ6IDUxNHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJpbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBpZD1cXFwielRyZWVVTFxcXCIgY2xhc3M9XFxcInp0cmVlXFxcIj48L3VsPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwid2lkdGg6IDY4JTtmbG9hdDogbGVmdDtoZWlnaHQ6IDUxNHB4XFxcIiBjbGFzcz1cXFwiaXYtbGlzdC1wYWdlLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXRhYmxlIDpoZWlnaHQ9XFxcImxpc3RIZWlnaHRcXFwiIHN0cmlwZSBib3JkZXIgOmNvbHVtbnM9XFxcImNvbHVtbnNDb25maWdcXFwiIDpkYXRhPVxcXCJ0YWJsZURhdGFcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcIml2LWxpc3QtdGFibGVcXFwiIDpoaWdobGlnaHQtcm93PVxcXCJ0cnVlXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBvbi1zZWxlY3Rpb24tY2hhbmdlPVxcXCJzZWxlY3Rpb25DaGFuZ2VcXFwiPjwvaS10YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RhYi1wYW5lPlxcbiAgICAgICAgICAgICAgICAgICAgPC90YWJzPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLW91dGVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcInNlbGVjdENvbXBsZXRlKClcXFwiPiBcXHU3ODZFIFxcdThCQTQgPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcImNsZWFyQ29tcGxldGUoKVxcXCI+IFxcdTZFMDUgXFx1N0E3QSA8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiaGFuZGxlQ2xvc2UoKVxcXCI+XFx1NTE3MyBcXHU5NUVEPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pO1xudmFyIERlZmF1bHRWYWx1ZVV0aWxpdHkgPSB7XG4gIGZvcm1hdFRleHQ6IGZ1bmN0aW9uIGZvcm1hdFRleHQodHlwZSwgdGV4dCkge1xuICAgIGlmICh0eXBlID09IFwiQ29uc3RcIikge1xuICAgICAgcmV0dXJuIFwi6Z2Z5oCB5YC8OuOAkFwiICsgdGV4dCArIFwi44CRXCI7XG4gICAgfSBlbHNlIGlmICh0eXBlID09IFwiRW52VmFyXCIpIHtcbiAgICAgIHJldHVybiBcIueOr+Wig+WPmOmHjzrjgJBcIiArIHRleHQgKyBcIuOAkVwiO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PSBcIlwiKSB7XG4gICAgICByZXR1cm4gXCLjgJDml6DjgJFcIjtcbiAgICB9XG5cbiAgICByZXR1cm4gXCLmnKrnn6XnsbvlnotcIiArIHRleHQ7XG4gIH1cbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJzZWxlY3Qtc2luZ2xlLXRhYmxlLWRpYWxvZ1wiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldFRhYmxlRGF0YVVybDogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlL0dldFRhYmxlc0ZvclpUcmVlTm9kZUxpc3RcIlxuICAgICAgfSxcbiAgICAgIGpzRWRpdG9ySW5zdGFuY2U6IG51bGwsXG4gICAgICB0YWJsZVRyZWU6IHtcbiAgICAgICAgdHJlZU9iajogbnVsbCxcbiAgICAgICAgdHJlZVNldHRpbmc6IHtcbiAgICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBkYmxDbGlja0V4cGFuZDogZmFsc2UsXG4gICAgICAgICAgICBzaG93TGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDc3M6IHtcbiAgICAgICAgICAgICAgJ2NvbG9yJzogJ2JsYWNrJyxcbiAgICAgICAgICAgICAgJ2ZvbnQtd2VpZ2h0JzogJ25vcm1hbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoZWNrOiB7XG4gICAgICAgICAgICBlbmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgbm9jaGVja0luaGVyaXQ6IGZhbHNlLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBhcmVudElkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgdmFyIF9zZWxmID0gdGhpcy5nZXRaVHJlZU9iaih0cmVlSWQpLl9ob3N0O1xuXG4gICAgICAgICAgICAgIGlmICh0cmVlTm9kZS5ub2RlVHlwZU5hbWUgPT0gXCJUYWJsZVwiKSB7XG4gICAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWRUYWJsZShldmVudCwgdHJlZUlkLCB0cmVlTm9kZSk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWRUYWJsZShldmVudCwgdHJlZUlkLCBudWxsKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdHJlZURhdGE6IG51bGwsXG4gICAgICAgIGNsaWNrTm9kZTogbnVsbFxuICAgICAgfSxcbiAgICAgIHNlbGVjdGVkVGFibGVEYXRhOiBudWxsXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5DbG9zZURpYWxvZ0VsZW0odGhpcy4kcmVmcy5zZWxlY3RUYWJsZU1vZGVsRGlhbG9nV3JhcCk7XG4gICAgfSxcbiAgICBiZWdpblNlbGVjdFRhYmxlOiBmdW5jdGlvbiBiZWdpblNlbGVjdFRhYmxlKCkge1xuICAgICAgdmFyIGVsZW0gPSB0aGlzLiRyZWZzLnNlbGVjdFRhYmxlTW9kZWxEaWFsb2dXcmFwO1xuICAgICAgdGhpcy5nZXRUYWJsZURhdGFJbml0VHJlZSgpO1xuICAgICAgdmFyIGhlaWdodCA9IDQ1MDtcblxuICAgICAgaWYgKFBhZ2VTdHlsZVV0aWxpdHkuR2V0UGFnZUhlaWdodCgpID4gNTUwKSB7XG4gICAgICAgIGhlaWdodCA9IDYwMDtcbiAgICAgIH1cblxuICAgICAgRGlhbG9nVXRpbGl0eS5EaWFsb2dFbGVtT2JqKGVsZW0sIHtcbiAgICAgICAgbW9kYWw6IHRydWUsXG4gICAgICAgIHdpZHRoOiA1NzAsXG4gICAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgICB0aXRsZTogXCLpgInmi6nooahcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRUYWJsZURhdGFJbml0VHJlZTogZnVuY3Rpb24gZ2V0VGFibGVEYXRhSW5pdFRyZWUoKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVEYXRhVXJsLCB7fSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBfc2VsZi50YWJsZVRyZWUudHJlZURhdGEgPSByZXN1bHQuZGF0YTtcblxuICAgICAgICAgIF9zZWxmLiRyZWZzLnRhYmxlWlRyZWVVTC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInNlbGVjdC10YWJsZS1zaW5nbGUtY29tcC1cIiArIFN0cmluZ1V0aWxpdHkuR3VpZCgpKTtcblxuICAgICAgICAgIF9zZWxmLnRhYmxlVHJlZS50cmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoX3NlbGYuJHJlZnMudGFibGVaVHJlZVVMKSwgX3NlbGYudGFibGVUcmVlLnRyZWVTZXR0aW5nLCBfc2VsZi50YWJsZVRyZWUudHJlZURhdGEpO1xuXG4gICAgICAgICAgX3NlbGYudGFibGVUcmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuXG4gICAgICAgICAgX3NlbGYudGFibGVUcmVlLnRyZWVPYmouX2hvc3QgPSBfc2VsZjtcbiAgICAgICAgICBmdXp6eVNlYXJjaFRyZWVPYmooX3NlbGYudGFibGVUcmVlLnRyZWVPYmosIF9zZWxmLiRyZWZzLnR4dF90YWJsZV9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBzZWxlY3RlZFRhYmxlOiBmdW5jdGlvbiBzZWxlY3RlZFRhYmxlKGV2ZW50LCB0cmVlSWQsIHRhYmxlRGF0YSkge1xuICAgICAgdGhpcy5zZWxlY3RlZFRhYmxlRGF0YSA9IHRhYmxlRGF0YTtcbiAgICB9LFxuICAgIGNvbXBsZXRlZDogZnVuY3Rpb24gY29tcGxldGVkKCkge1xuICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRUYWJsZURhdGEpIHtcbiAgICAgICAgdGhpcy4kZW1pdCgnb24tc2VsZWN0ZWQtdGFibGUnLCB0aGlzLnNlbGVjdGVkVGFibGVEYXRhKTtcbiAgICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLor7fpgInmi6nooaghXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiByZWY9XFxcInNlbGVjdFRhYmxlTW9kZWxEaWFsb2dXcmFwXFxcIiBjbGFzcz1cXFwiYzEtc2VsZWN0LW1vZGVsLXdyYXAgZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYzEtc2VsZWN0LW1vZGVsLXNvdXJjZS13cmFwIGMxLXNlbGVjdC1tb2RlbC1zb3VyY2UtaGFzLWJ1dHRvbnMtd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2VhcmNoIGNsYXNzPVxcXCJpbnB1dF9ib3JkZXJfYm90dG9tXFxcIiByZWY9XFxcInR4dF90YWJsZV9zZWFyY2hfdGV4dFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdThCRjdcXHU4RjkzXFx1NTE2NVxcdTg4NjhcXHU1NDBEXFx1NjIxNlxcdTgwMDVcXHU2ODA3XFx1OTg5OFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImlubmVyLXdyYXAgZGl2LWN1c3RvbS1zY3JvbGxcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgcmVmPVxcXCJ0YWJsZVpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLW91dGVyLXdyYXBcXFwiIHN0eWxlPVxcXCJib3R0b206IDEycHg7cmlnaHQ6IDEycHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcImNvbXBsZXRlZCgpXFxcIiBpY29uPVxcXCJtZC1jaGVja21hcmtcXFwiPlxcdTc4NkVcXHU4QkE0PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImhhbmRsZUNsb3NlKClcXFwiIGljb249XFxcIm1kLWNsb3NlXFxcIj5cXHU1MTczXFx1OTVFRDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwic2VsZWN0LXNpbmdsZS13ZWJmb3JtLWRpYWxvZ1wiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldFRhYmxlRGF0YVVybDogXCIvUmVzdC9CdWlsZGVyL0Zvcm0vR2V0V2ViRm9ybUZvclpUcmVlTm9kZUxpc3RcIlxuICAgICAgfSxcbiAgICAgIGpzRWRpdG9ySW5zdGFuY2U6IG51bGwsXG4gICAgICB0cmVlOiB7XG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIHJhZGlvVHlwZTogXCJhbGxcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwidGV4dFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2ltcGxlRGF0YToge1xuICAgICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICAgIGlkS2V5OiBcImlkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJwYXJlbnRJZFwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIHZhciBfc2VsZiA9IHRoaXMuZ2V0WlRyZWVPYmoodHJlZUlkKS5faG9zdDtcblxuICAgICAgICAgICAgICBpZiAodHJlZU5vZGUubm9kZVR5cGVOYW1lID09IFwiV2ViRm9ybVwiKSB7XG4gICAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWRGb3JtKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdHJlZURhdGE6IG51bGxcbiAgICAgIH0sXG4gICAgICBzZWxlY3RlZEZvcm1EYXRhOiBudWxsLFxuICAgICAgb2xkU2VsZWN0ZWRGb3JtSWQ6IFwiXCJcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UoKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LkNsb3NlRGlhbG9nRWxlbSh0aGlzLiRyZWZzLnNlbGVjdE1vZGVsRGlhbG9nV3JhcCk7XG4gICAgfSxcbiAgICBiZWdpblNlbGVjdEZvcm06IGZ1bmN0aW9uIGJlZ2luU2VsZWN0Rm9ybShmb3JtSWQpIHtcbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5zZWxlY3RNb2RlbERpYWxvZ1dyYXA7XG4gICAgICB0aGlzLmdldEZvcm1EYXRhSW5pdFRyZWUoKTtcbiAgICAgIHRoaXMub2xkU2VsZWN0ZWRGb3JtSWQgPSBmb3JtSWQ7XG4gICAgICB2YXIgaGVpZ2h0ID0gNTAwO1xuICAgICAgRGlhbG9nVXRpbGl0eS5EaWFsb2dFbGVtT2JqKGVsZW0sIHtcbiAgICAgICAgbW9kYWw6IHRydWUsXG4gICAgICAgIHdpZHRoOiA1NzAsXG4gICAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgICB0aXRsZTogXCLpgInmi6nnqpfkvZNcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRGb3JtRGF0YUluaXRUcmVlOiBmdW5jdGlvbiBnZXRGb3JtRGF0YUluaXRUcmVlKCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFRhYmxlRGF0YVVybCwge30sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgX3NlbGYudHJlZS50cmVlRGF0YSA9IHJlc3VsdC5kYXRhO1xuXG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfc2VsZi50cmVlLnRyZWVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoX3NlbGYudHJlZS50cmVlRGF0YVtpXS5ub2RlVHlwZU5hbWUgPT0gXCJXZWJGb3JtXCIpIHtcbiAgICAgICAgICAgICAgX3NlbGYudHJlZS50cmVlRGF0YVtpXS5pY29uID0gQmFzZVV0aWxpdHkuR2V0Um9vdFBhdGgoKSArIFwiL1RoZW1lcy9QbmcxNlgxNi90YWJsZS5wbmdcIjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoX3NlbGYudHJlZS50cmVlRGF0YVtpXS5ub2RlVHlwZU5hbWUgPT0gXCJNb2R1bGVcIikge1xuICAgICAgICAgICAgICBfc2VsZi50cmVlLnRyZWVEYXRhW2ldLmljb24gPSBCYXNlVXRpbGl0eS5HZXRSb290UGF0aCgpICsgXCIvVGhlbWVzL1BuZzE2WDE2L2ZvbGRlci10YWJsZS5wbmdcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfc2VsZi4kcmVmcy5mb3JtWlRyZWVVTC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInNlbGVjdC1mb3JtLXNpbmdsZS1jb21wLVwiICsgU3RyaW5nVXRpbGl0eS5HdWlkKCkpO1xuXG4gICAgICAgICAgX3NlbGYudHJlZS50cmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoX3NlbGYuJHJlZnMuZm9ybVpUcmVlVUwpLCBfc2VsZi50cmVlLnRyZWVTZXR0aW5nLCBfc2VsZi50cmVlLnRyZWVEYXRhKTtcblxuICAgICAgICAgIF9zZWxmLnRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG5cbiAgICAgICAgICBfc2VsZi50cmVlLnRyZWVPYmouX2hvc3QgPSBfc2VsZjtcbiAgICAgICAgICBmdXp6eVNlYXJjaFRyZWVPYmooX3NlbGYudHJlZS50cmVlT2JqLCBfc2VsZi4kcmVmcy50eHRfZm9ybV9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG5cbiAgICAgICAgICBpZiAoX3NlbGYub2xkU2VsZWN0ZWRGb3JtSWQgIT0gbnVsbCAmJiBfc2VsZi5vbGRTZWxlY3RlZEZvcm1JZCAhPSBcIlwiKSB7XG4gICAgICAgICAgICB2YXIgc2VsZWN0ZWROb2RlID0gX3NlbGYudHJlZS50cmVlT2JqLmdldE5vZGVCeVBhcmFtKFwiaWRcIiwgX3NlbGYub2xkU2VsZWN0ZWRGb3JtSWQpO1xuXG4gICAgICAgICAgICBfc2VsZi50cmVlLnRyZWVPYmouc2VsZWN0Tm9kZShzZWxlY3RlZE5vZGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIHNlbGVjdGVkRm9ybTogZnVuY3Rpb24gc2VsZWN0ZWRGb3JtKGV2ZW50LCB0cmVlSWQsIGZvcm1EYXRhKSB7XG4gICAgICB0aGlzLnNlbGVjdGVkRm9ybURhdGEgPSBmb3JtRGF0YTtcbiAgICB9LFxuICAgIGNvbXBsZXRlZDogZnVuY3Rpb24gY29tcGxldGVkKCkge1xuICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRGb3JtRGF0YSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgICAgIGZvcm1Nb2R1bGVJZDogdGhpcy5zZWxlY3RlZEZvcm1EYXRhLmF0dHI0LFxuICAgICAgICAgIGZvcm1Nb2R1bGVOYW1lOiB0aGlzLnNlbGVjdGVkRm9ybURhdGEuYXR0cjMsXG4gICAgICAgICAgZm9ybUlkOiB0aGlzLnNlbGVjdGVkRm9ybURhdGEuaWQsXG4gICAgICAgICAgZm9ybU5hbWU6IHRoaXMuc2VsZWN0ZWRGb3JtRGF0YS5hdHRyMSxcbiAgICAgICAgICBmb3JtQ29kZTogdGhpcy5zZWxlY3RlZEZvcm1EYXRhLmF0dHIyXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLWZvcm0nLCByZXN1bHQpO1xuICAgICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuivt+mAieaLqeeql+S9kyFcIik7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IHJlZj1cXFwic2VsZWN0TW9kZWxEaWFsb2dXcmFwXFxcIiBjbGFzcz1cXFwiYzEtc2VsZWN0LW1vZGVsLXdyYXAgZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmU7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC1zb3VyY2Utd3JhcCBjMS1zZWxlY3QtbW9kZWwtc291cmNlLWhhcy1idXR0b25zLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cXFwiaW5wdXRfYm9yZGVyX2JvdHRvbVxcXCIgcmVmPVxcXCJ0eHRfZm9ybV9zZWFyY2hfdGV4dFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdThCRjdcXHU4RjkzXFx1NTE2NVxcdTg4NjhcXHU1MzU1XFx1NTQwRFxcdTc5RjBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJpbm5lci13cmFwIGRpdi1jdXN0b20tc2Nyb2xsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIHJlZj1cXFwiZm9ybVpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLW91dGVyLXdyYXBcXFwiIHN0eWxlPVxcXCJib3R0b206IDEycHg7cmlnaHQ6IDEycHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcImNvbXBsZXRlZCgpXFxcIiBpY29uPVxcXCJtZC1jaGVja21hcmtcXFwiPlxcdTc4NkVcXHU4QkE0PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImhhbmRsZUNsb3NlKClcXFwiIGljb249XFxcIm1kLWNsb3NlXFxcIj5cXHU1MTczXFx1OTVFRDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwic2VsZWN0LXZhbGlkYXRlLXJ1bGUtZGlhbG9nXCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbGVjdFZhbGlkYXRlVHlwZTogXCJOb0VtcHR5XCIsXG4gICAgICBydWxlUGFyYXM6IHtcbiAgICAgICAgbXNnOiBcIuWtl+autVwiLFxuICAgICAgICBudW1MZW5ndGg6IDQsXG4gICAgICAgIGRlY2ltYWxMZW5ndGg6IDAsXG4gICAgICAgIGpzTWV0aG9kTmFtZTogXCJcIixcbiAgICAgICAgcmVndWxhclRleHQ6IFwiXCIsXG4gICAgICAgIHJlZ3VsYXJNc2c6IFwiXCJcbiAgICAgIH0sXG4gICAgICBhZGRlZFZhbGlkYXRlUnVsZTogW10sXG4gICAgICB2YWxpZGF0ZUNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgIHRpdGxlOiAn57G75Z6LJyxcbiAgICAgICAga2V5OiAndmFsaWRhdGVUeXBlJyxcbiAgICAgICAgd2lkdGg6IDE1MCxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICflj4LmlbAnLFxuICAgICAgICBrZXk6ICd2YWxpZGF0ZVBhcmFzJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfliKDpmaQnLFxuICAgICAgICBrZXk6ICd2YWxpZGF0ZUlkJyxcbiAgICAgICAgd2lkdGg6IDEyMCxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIHBhcmFtcykge1xuICAgICAgICAgIHJldHVybiBoKCdkaXYnLCB7XG4gICAgICAgICAgICBcImNsYXNzXCI6IFwibGlzdC1yb3ctYnV0dG9uLXdyYXBcIlxuICAgICAgICAgIH0sIFtoKCdkaXYnLCB7XG4gICAgICAgICAgICBcImNsYXNzXCI6IFwibGlzdC1yb3ctYnV0dG9uIGRlbFwiLFxuICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKCkge1xuICAgICAgICAgICAgICAgIF9zZWxmLmRlbFZhbGlkYXRlKHBhcmFtcy5yb3dbXCJ2YWxpZGF0ZUlkXCJdKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXSk7XG4gICAgICAgIH1cbiAgICAgIH1dXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgYmVnaW5TZWxlY3Q6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0KG9sZERhdGEpIHtcbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5zZWxlY3RWYWxpZGF0ZVJ1bGVEaWFsb2dXcmFwO1xuICAgICAgdmFyIGhlaWdodCA9IDQ1MDtcbiAgICAgIERpYWxvZ1V0aWxpdHkuRGlhbG9nRWxlbU9iaihlbGVtLCB7XG4gICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICBoZWlnaHQ6IDY4MCxcbiAgICAgICAgd2lkdGg6IDk4MCxcbiAgICAgICAgdGl0bGU6IFwi6K6+572u6aqM6K+B6KeE5YiZXCJcbiAgICAgIH0pO1xuICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktd2lkZ2V0LW92ZXJsYXlcIikuY3NzKFwiekluZGV4XCIsIDEwMTAwKTtcbiAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLWRpYWxvZ1wiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDEpO1xuICAgICAgdGhpcy5ydWxlUGFyYXMubXNnID0gXCLlrZfmrrVcIjtcbiAgICAgIHRoaXMucnVsZVBhcmFzLm51bUxlbmd0aCA9IDQ7XG4gICAgICB0aGlzLnJ1bGVQYXJhcy5kZWNpbWFsTGVuZ3RoID0gMDtcbiAgICAgIHRoaXMucnVsZVBhcmFzLmpzTWV0aG9kTmFtZSA9IFwiXCI7XG4gICAgICB0aGlzLnJ1bGVQYXJhcy5yZWd1bGFyVGV4dCA9IFwiXCI7XG4gICAgICB0aGlzLnJ1bGVQYXJhcy5yZWd1bGFyTXNnID0gXCJcIjtcbiAgICAgIHRoaXMuYWRkZWRWYWxpZGF0ZVJ1bGUgPSBbXTtcbiAgICAgIHRoaXMuYmluZE9sZFNlbGVjdGVkVmFsdWUob2xkRGF0YSk7XG4gICAgfSxcbiAgICBiaW5kT2xkU2VsZWN0ZWRWYWx1ZTogZnVuY3Rpb24gYmluZE9sZFNlbGVjdGVkVmFsdWUob2xkRGF0YSkge1xuICAgICAgdmFyIG9sZFNlbGVjdGVkVmFsdWUgPSBvbGREYXRhO1xuXG4gICAgICBpZiAob2xkU2VsZWN0ZWRWYWx1ZS5ydWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHRoaXMuYWRkZWRWYWxpZGF0ZVJ1bGUgPSBvbGRTZWxlY3RlZFZhbHVlLnJ1bGVzO1xuICAgICAgICB0aGlzLm1zZyA9IG9sZFNlbGVjdGVkVmFsdWUubXNnO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0U2VsZWN0SW5zdGFuY2VOYW1lOiBmdW5jdGlvbiBnZXRTZWxlY3RJbnN0YW5jZU5hbWUoKSB7XG4gICAgICByZXR1cm4gQmFzZVV0aWxpdHkuR2V0VXJsUGFyYVZhbHVlKFwiaW5zdGFuY2VOYW1lXCIpO1xuICAgIH0sXG4gICAgc2VsZWN0Q29tcGxldGU6IGZ1bmN0aW9uIHNlbGVjdENvbXBsZXRlKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuYWRkZWRWYWxpZGF0ZVJ1bGU7XG5cbiAgICAgIGlmICh0aGlzLmFkZGVkVmFsaWRhdGVSdWxlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHtcbiAgICAgICAgICBtc2c6IHRoaXMucnVsZVBhcmFzLm1zZyxcbiAgICAgICAgICBydWxlczogdGhpcy5hZGRlZFZhbGlkYXRlUnVsZVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLiRlbWl0KCdvbi1zZWxlY3RlZC12YWxpZGF0ZS1ydWxlJywgSnNvblV0aWxpdHkuQ2xvbmVTaW1wbGUocmVzdWx0KSk7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2xvc2UoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuY2xlYXJDb21wbGV0ZSgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgY2xlYXJDb21wbGV0ZTogZnVuY3Rpb24gY2xlYXJDb21wbGV0ZSgpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ29uLWNsZWFyLXZhbGlkYXRlLXJ1bGUnKTtcbiAgICAgIHRoaXMuaGFuZGxlQ2xvc2UoKTtcbiAgICB9LFxuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnMuc2VsZWN0VmFsaWRhdGVSdWxlRGlhbG9nV3JhcCk7XG4gICAgfSxcbiAgICBhZGRWYWxpZGF0ZVJ1bGU6IGZ1bmN0aW9uIGFkZFZhbGlkYXRlUnVsZSgpIHtcbiAgICAgIHZhciB2YWxpZGF0ZVBhcmFzID0gXCJcIjtcblxuICAgICAgaWYgKHRoaXMuc2VsZWN0VmFsaWRhdGVUeXBlID09IFwiTnVtYmVyXCIpIHtcbiAgICAgICAgdmFsaWRhdGVQYXJhcyA9IEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyh7XG4gICAgICAgICAgbnVtTGVuZ3RoOiB0aGlzLnJ1bGVQYXJhcy5udW1MZW5ndGgsXG4gICAgICAgICAgZGVjaW1hbExlbmd0aDogdGhpcy5ydWxlUGFyYXMuZGVjaW1hbExlbmd0aFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3RWYWxpZGF0ZVR5cGUgPT0gXCJSZWd1bGFyXCIpIHtcbiAgICAgICAgdmFsaWRhdGVQYXJhcyA9IEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyh7XG4gICAgICAgICAgcmVndWxhclRleHQ6IHRoaXMucnVsZVBhcmFzLnJlZ3VsYXJUZXh0LFxuICAgICAgICAgIHJlZ3VsYXJNc2c6IHRoaXMucnVsZVBhcmFzLnJlZ3VsYXJNc2dcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZWN0VmFsaWRhdGVUeXBlID09IFwiSnNNZXRob2RcIikge1xuICAgICAgICB2YWxpZGF0ZVBhcmFzID0gSnNvblV0aWxpdHkuSnNvblRvU3RyaW5nKHtcbiAgICAgICAgICBqc01ldGhvZE5hbWU6IHRoaXMucnVsZVBhcmFzLmpzTWV0aG9kTmFtZVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdmFyIG5ld1ZhbGlkYXRlUnVsZSA9IHtcbiAgICAgICAgXCJ2YWxpZGF0ZUlkXCI6IFN0cmluZ1V0aWxpdHkuVGltZXN0YW1wKCksXG4gICAgICAgIFwidmFsaWRhdGVUeXBlXCI6IHRoaXMuc2VsZWN0VmFsaWRhdGVUeXBlLFxuICAgICAgICBcInZhbGlkYXRlUGFyYXNcIjogdmFsaWRhdGVQYXJhc1xuICAgICAgfTtcbiAgICAgIHRoaXMuYWRkZWRWYWxpZGF0ZVJ1bGUucHVzaChuZXdWYWxpZGF0ZVJ1bGUpO1xuICAgIH0sXG4gICAgZGVsVmFsaWRhdGU6IGZ1bmN0aW9uIGRlbFZhbGlkYXRlKHZhbGlkYXRlSWQpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5hZGRlZFZhbGlkYXRlUnVsZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAodGhpcy5hZGRlZFZhbGlkYXRlUnVsZVtpXS52YWxpZGF0ZUlkID09IHZhbGlkYXRlSWQpIHtcbiAgICAgICAgICB0aGlzLmFkZGVkVmFsaWRhdGVSdWxlLnNwbGljZShpLCAxKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiByZWY9XFxcInNlbGVjdFZhbGlkYXRlUnVsZURpYWxvZ1dyYXBcXFwiIHYtY2xvYWsgY2xhc3M9XFxcImdlbmVyYWwtZWRpdC1wYWdlLXdyYXBcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBub25lXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxjYXJkIHN0eWxlPVxcXCJtYXJnaW4tdG9wOiAxMHB4XFxcIiA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgc2xvdD1cXFwidGl0bGVcXFwiPlxcdThCQkVcXHU3RjZFXFx1OUE4Q1xcdThCQzFcXHU4OUM0XFx1NTIxOTwvcD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJzZWxlY3RWYWxpZGF0ZVR5cGVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJOb0VtcHR5XFxcIj5cXHU0RTBEXFx1NEUzQVxcdTdBN0E8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJOdW1iZXJcXFwiPlxcdTY1NzBcXHU1QjU3PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiTW9iaWxlXFxcIj5cXHU2MjRCXFx1NjczQTwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIkRhdGVcXFwiPlxcdTY1RTVcXHU2NzFGPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiVGltZVxcXCI+XFx1NjVGNlxcdTk1RjQ8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJEYXRlVGltZVxcXCI+XFx1NjVFNVxcdTY3MUZcXHU2NUY2XFx1OTVGNDwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIkVNYWlsXFxcIj5cXHU5MEFFXFx1NEVGNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIklEQ2FyZFxcXCI+XFx1OEVBQlxcdTRFRkRcXHU4QkMxPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiVVJMXFxcIj5VUkw8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJFTkNvZGVcXFwiPlxcdTgyRjFcXHU2NTg3PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiU2ltcGxlQ29kZVxcXCI+XFx1NzI3OVxcdTZCOEFcXHU1QjU3XFx1N0IyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIlJlZ3VsYXJcXFwiPlxcdTZCNjNcXHU1MjE5XFx1ODg2OFxcdThGQkVcXHU1RjBGPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiSnNNZXRob2RcXFwiPkpTXFx1NjVCOVxcdTZDRDU8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwic3VjY2Vzc1xcXCIgc2hhcGU9XFxcImNpcmNsZVxcXCIgaWNvbj1cXFwibWQtYWRkXFxcIiBzdHlsZT1cXFwibWFyZ2luLWxlZnQ6IDE1cHg7Y3Vyc29yOiBwb2ludGVyXFxcIiBAY2xpY2s9XFxcImFkZFZhbGlkYXRlUnVsZVxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2aWRlciBvcmllbnRhdGlvbj1cXFwibGVmdFxcXCIgOmRhc2hlZD1cXFwidHJ1ZVxcXCIgc3R5bGU9XFxcImZvbnQtc2l6ZTogMTJweFxcXCI+XFx1NTNDMlxcdTY1NzBcXHU4QkJFXFx1N0Y2RTwvZGl2aWRlcj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVxcdTY1NzBcXHU1QjU3XFx1N0M3QlxcdTU3OEJcXHU1M0MyXFx1NjU3MFxcdThCQkVcXHU3RjZFLS0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj1cXFwic2VsZWN0VmFsaWRhdGVUeXBlPT0nTnVtYmVyJ1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1mb3JtIDpsYWJlbC13aWR0aD1cXFwiODBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtLWl0ZW0gbGFiZWw9XFxcIlxcdTk1N0ZcXHU1RUE2XFx1RkYxQVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyb3c+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMTBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dC1udW1iZXIgOm1heD1cXFwiMTBcXFwiIDptaW49XFxcIjFcXFwiIHYtbW9kZWw9XFxcInJ1bGVQYXJhcy5udW1MZW5ndGhcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBzdHlsZT1cXFwid2lkdGg6IDgwJVxcXCI+PC9pbnB1dC1udW1iZXI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjRcXFwiIHN0eWxlPVxcXCJ0ZXh0LWFsaWduOiBjZW50ZXJcXFwiPlxcdTVDMEZcXHU2NTcwXFx1NEY0RFxcdTY1NzBcXHVGRjFBPC9pLWNvbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxMFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0LW51bWJlciA6bWF4PVxcXCIxMFxcXCIgOm1pbj1cXFwiMFxcXCIgdi1tb2RlbD1cXFwicnVsZVBhcmFzLmRlY2ltYWxMZW5ndGhcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBzdHlsZT1cXFwid2lkdGg6IDgwJVxcXCI+PC9pbnB1dC1udW1iZXI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Jvdz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1mb3JtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVxcdTZCNjNcXHU1MjE5XFx1ODg2OFxcdThGQkVcXHU1RjBGXFx1N0M3QlxcdTU3OEJcXHU1M0MyXFx1NjU3MFxcdThCQkVcXHU3RjZFLS0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj1cXFwic2VsZWN0VmFsaWRhdGVUeXBlPT0nUmVndWxhcidcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktZm9ybSA6bGFiZWwtd2lkdGg9XFxcIjgwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybS1pdGVtIGxhYmVsPVxcXCJcXHU4ODY4XFx1OEZCRVxcdTVGMEZcXHVGRjFBXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJvdz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxMFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJFbnRlciBzb21ldGhpbmcuLi5cXFwiIHYtbW9kZWw9XFxcInJ1bGVQYXJhcy5yZWd1bGFyVGV4dFxcXCIgc3R5bGU9XFxcIndpZHRoOiA4MCVcXFwiPjwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1jb2w+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiNFxcXCIgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlclxcXCI+XFx1NjNEMFxcdTc5M0FcXHU0RkUxXFx1NjA2RlxcdUZGMUE8L2ktY29sPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjEwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIkVudGVyIHNvbWV0aGluZy4uLlxcXCIgdi1tb2RlbD1cXFwicnVsZVBhcmFzLnJlZ3VsYXJNc2dcXFwiIHN0eWxlPVxcXCJ3aWR0aDogODAlXFxcIj48L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Jvdz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1mb3JtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUpTXFx1NjVCOVxcdTZDRDVcXHU3QzdCXFx1NTc4QlxcdTUzQzJcXHU2NTcwXFx1OEJCRVxcdTdGNkUtLT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPVxcXCJzZWxlY3RWYWxpZGF0ZVR5cGU9PSdKc01ldGhvZCdcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktZm9ybSA6bGFiZWwtd2lkdGg9XFxcIjgwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybS1pdGVtIGxhYmVsPVxcXCJcXHU2NUI5XFx1NkNENVxcdTU0MERcXHVGRjFBXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJFbnRlciBzb21ldGhpbmcuLi5cXFwiIHYtbW9kZWw9XFxcInJ1bGVQYXJhcy5qc01ldGhvZE5hbWVcXFwiIHN0eWxlPVxcXCJ3aWR0aDogOTAlXFxcIj48L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktZm9ybT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2NhcmQ+XFxuICAgICAgICAgICAgICAgICAgICA8Y2FyZCBzdHlsZT1cXFwibWFyZ2luLXRvcDogMTBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgc2xvdD1cXFwidGl0bGVcXFwiPlxcdTVERjJcXHU2REZCXFx1NTJBMFxcdTg5QzRcXHU1MjE5PC9wPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZpZGVyIG9yaWVudGF0aW9uPVxcXCJsZWZ0XFxcIiA6ZGFzaGVkPVxcXCJ0cnVlXFxcIiBzdHlsZT1cXFwiZm9udC1zaXplOiAxMnB4O21hcmdpbi10b3A6IDBweDttYXJnaW4tYm90dG9tOiA2cHhcXFwiPlxcdTYzRDBcXHU3OTNBXFx1NEZFMVxcdTYwNkY8L2RpdmlkZXI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWZvcm0gOmxhYmVsLXdpZHRoPVxcXCIwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtLWl0ZW0gbGFiZWw9XFxcIlxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVcXHU2M0QwXFx1NzkzQVxcdTRGRTFcXHU2MDZGLi4uXFxcIiAgdi1tb2RlbD1cXFwicnVsZVBhcmFzLm1zZ1xcXCI+PC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1mb3JtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcIm1hcmdpbi1ib3R0b206IDEwcHg7b3ZlcmZsb3c6IGF1dG9cXFwiIGNsYXNzPVxcXCJpdi1saXN0LXBhZ2Utd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZpZGVyIG9yaWVudGF0aW9uPVxcXCJsZWZ0XFxcIiA6ZGFzaGVkPVxcXCJ0cnVlXFxcIiBzdHlsZT1cXFwiZm9udC1zaXplOiAxMnB4O21hcmdpbi10b3A6IDBweDttYXJnaW4tYm90dG9tOiA2cHhcXFwiPlxcdTlBOENcXHU4QkMxXFx1ODlDNFxcdTUyMTk8L2RpdmlkZXI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXRhYmxlIGJvcmRlciA6Y29sdW1ucz1cXFwidmFsaWRhdGVDb2x1bW5zQ29uZmlnXFxcIiA6ZGF0YT1cXFwiYWRkZWRWYWxpZGF0ZVJ1bGVcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVxcXCJpdi1saXN0LXRhYmxlXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgbm8tZGF0YS10ZXh0PVxcXCJcXHU4QkY3XFx1NkRGQlxcdTUyQTBcXHU5QThDXFx1OEJDMVxcdTg5QzRcXHU1MjE5XFxcIiA6aGVpZ2h0PVxcXCIxMzBcXFwiPjwvaS10YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvY2FyZD5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1vdXRlci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24taW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJzZWxlY3RDb21wbGV0ZSgpXFxcIj4gXFx1Nzg2RSBcXHU4QkE0IDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJjbGVhckNvbXBsZXRlKClcXFwiPiBcXHU2RTA1IFxcdTdBN0EgPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImhhbmRsZUNsb3NlKClcXFwiPlxcdTUxNzMgXFx1OTVFRDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcInRhYmxlLXJlbGF0aW9uLWNvbm5lY3QtdHdvLXRhYmxlLWRpYWxvZ1wiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHM6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EYXRhQmFzZS9UYWJsZS9HZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzXCJcbiAgICAgIH0sXG4gICAgICBmcm9tVGFibGVGaWVsZDoge1xuICAgICAgICBmaWVsZERhdGE6IFtdLFxuICAgICAgICBjb2x1bW5zQ29uZmlnOiBbe1xuICAgICAgICAgIHRpdGxlOiAn5a2X5q615ZCN56ewJyxcbiAgICAgICAgICBrZXk6ICdmaWVsZE5hbWUnLFxuICAgICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICB0aXRsZTogJ+agh+mimCcsXG4gICAgICAgICAga2V5OiAnZmllbGRDYXB0aW9uJyxcbiAgICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICB9XVxuICAgICAgfSxcbiAgICAgIHRvVGFibGVGaWVsZDoge1xuICAgICAgICBmaWVsZERhdGE6IFtdLFxuICAgICAgICBjb2x1bW5zQ29uZmlnOiBbe1xuICAgICAgICAgIHRpdGxlOiAn5a2X5q615ZCN56ewJyxcbiAgICAgICAgICBrZXk6ICdmaWVsZE5hbWUnLFxuICAgICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICB0aXRsZTogJ+agh+mimCcsXG4gICAgICAgICAga2V5OiAnZmllbGRDYXB0aW9uJyxcbiAgICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICB9XVxuICAgICAgfSxcbiAgICAgIGRpYWxvZ0hlaWdodDogMCxcbiAgICAgIHJlc3VsdERhdGE6IHtcbiAgICAgICAgZnJvbToge1xuICAgICAgICAgIHRhYmxlSWQ6IFwiXCIsXG4gICAgICAgICAgdGV4dDogXCJcIlxuICAgICAgICB9LFxuICAgICAgICB0bzoge1xuICAgICAgICAgIHRhYmxlSWQ6IFwiXCIsXG4gICAgICAgICAgdGV4dDogXCJcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5DbG9zZURpYWxvZ0VsZW0odGhpcy4kcmVmcy5jb25uZWN0VGFibGVGaWVsZE1vZGVsRGlhbG9nV3JhcCk7XG4gICAgfSxcbiAgICBjb21wbGV0ZWQ6IGZ1bmN0aW9uIGNvbXBsZXRlZCgpIHtcbiAgICAgIGlmICh0aGlzLnJlc3VsdERhdGEuZnJvbS50ZXh0ICE9IFwiXCIgJiYgdGhpcy5yZXN1bHREYXRhLnRvLnRleHQgIT0gXCJcIikge1xuICAgICAgICB0aGlzLiRlbWl0KCdvbi1jb21wbGV0ZWQtY29ubmVjdCcsIHRoaXMucmVzdWx0RGF0YSk7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2xvc2UoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+36K6+572u5YWz6IGU5a2X5q61XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0RmllbGRzQW5kQmluZDogZnVuY3Rpb24gZ2V0RmllbGRzQW5kQmluZChmcm9tVGFibGVJZCwgdG9UYWJsZUlkKSB7XG4gICAgICB2YXIgdGFibGVJZHMgPSBbZnJvbVRhYmxlSWQsIHRvVGFibGVJZF07XG5cbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzLCB7XG4gICAgICAgIFwidGFibGVJZHNcIjogdGFibGVJZHNcbiAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgdmFyIGFsbEZpZWxkcyA9IHJlc3VsdC5kYXRhO1xuICAgICAgICAgIHZhciBhbGxUYWJsZXMgPSByZXN1bHQuZXhLVkRhdGEuVGFibGVzO1xuXG4gICAgICAgICAgdmFyIGZyb21UYWJsZUZpZWxkcyA9IF9zZWxmLmdldFNpbmdsZVRhYmxlRmllbGRzRGF0YShhbGxGaWVsZHMsIGZyb21UYWJsZUlkKTtcblxuICAgICAgICAgIHZhciB0b1RhYmxlRmllbGRzID0gX3NlbGYuZ2V0U2luZ2xlVGFibGVGaWVsZHNEYXRhKGFsbEZpZWxkcywgdG9UYWJsZUlkKTtcblxuICAgICAgICAgIF9zZWxmLmZyb21UYWJsZUZpZWxkLmZpZWxkRGF0YSA9IGZyb21UYWJsZUZpZWxkcztcbiAgICAgICAgICBfc2VsZi50b1RhYmxlRmllbGQuZmllbGREYXRhID0gdG9UYWJsZUZpZWxkcztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIGJlZ2luU2VsZWN0Q29ubmVjdDogZnVuY3Rpb24gYmVnaW5TZWxlY3RDb25uZWN0KGZyb21UYWJsZUlkLCB0b1RhYmxlSWQpIHtcbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5jb25uZWN0VGFibGVGaWVsZE1vZGVsRGlhbG9nV3JhcDtcbiAgICAgIHRoaXMucmVzdWx0RGF0YS5mcm9tLnRhYmxlSWQgPSBmcm9tVGFibGVJZDtcbiAgICAgIHRoaXMucmVzdWx0RGF0YS50by50YWJsZUlkID0gdG9UYWJsZUlkO1xuICAgICAgdGhpcy5yZXN1bHREYXRhLmZyb20udGV4dCA9IFwiXCI7XG4gICAgICB0aGlzLnJlc3VsdERhdGEudG8udGV4dCA9IFwiXCI7XG4gICAgICB0aGlzLmdldEZpZWxkc0FuZEJpbmQoZnJvbVRhYmxlSWQsIHRvVGFibGVJZCk7XG4gICAgICB2YXIgaGVpZ2h0ID0gNDUwO1xuXG4gICAgICBpZiAoUGFnZVN0eWxlVXRpbGl0eS5HZXRQYWdlSGVpZ2h0KCkgPiA1NTApIHtcbiAgICAgICAgaGVpZ2h0ID0gNjAwO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmRpYWxvZ0hlaWdodCA9IGhlaWdodDtcbiAgICAgIERpYWxvZ1V0aWxpdHkuRGlhbG9nRWxlbU9iaihlbGVtLCB7XG4gICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICB3aWR0aDogODcwLFxuICAgICAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICAgICAgdGl0bGU6IFwi6K6+572u5YWz6IGUXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0U2luZ2xlVGFibGVGaWVsZHNEYXRhOiBmdW5jdGlvbiBnZXRTaW5nbGVUYWJsZUZpZWxkc0RhdGEoYWxsRmllbGRzLCB0YWJsZUlkKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gW107XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxsRmllbGRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChhbGxGaWVsZHNbaV0uZmllbGRUYWJsZUlkID09IHRhYmxlSWQpIHtcbiAgICAgICAgICByZXN1bHQucHVzaChhbGxGaWVsZHNbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBzZWxlY3RlZEZyb21GaWVsZDogZnVuY3Rpb24gc2VsZWN0ZWRGcm9tRmllbGQocm93LCBpbmRleCkge1xuICAgICAgdGhpcy5yZXN1bHREYXRhLmZyb20udGV4dCA9IHJvdy5maWVsZE5hbWUgKyBcIlsxXVwiO1xuICAgIH0sXG4gICAgc2VsZWN0ZWRUb0ZpZWxkOiBmdW5jdGlvbiBzZWxlY3RlZFRvRmllbGQocm93LCBpbmRleCkge1xuICAgICAgdGhpcy5yZXN1bHREYXRhLnRvLnRleHQgPSByb3cuZmllbGROYW1lICsgXCJbMC4uTl1cIjtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjxkaXYgcmVmPVxcXCJjb25uZWN0VGFibGVGaWVsZE1vZGVsRGlhbG9nV3JhcFxcXCIgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC13cmFwIGdlbmVyYWwtZWRpdC1wYWdlLXdyYXBcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBub25lXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC1zb3VyY2Utd3JhcCBjMS1zZWxlY3QtbW9kZWwtc291cmNlLWhhcy1idXR0b25zLXdyYXBcXFwiIHN0eWxlPVxcXCJwYWRkaW5nOiAxMHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogbGVmdDt3aWR0aDogNDklO2hlaWdodDogMTAwJTtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJyZXN1bHREYXRhLmZyb20udGV4dFxcXCIgc3VmZml4PVxcXCJtZC1kb25lLWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTVGMDBcXHU1OUNCXFx1NTE3M1xcdTgwNTRcXHU1QjU3XFx1NkJCNVxcXCIgc3R5bGU9XFxcIm1hcmdpbi1ib3R0b206IDEwcHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXRhYmxlIEBvbi1yb3ctY2xpY2s9XFxcInNlbGVjdGVkRnJvbUZpZWxkXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgOmhlaWdodD1cXFwiZGlhbG9nSGVpZ2h0LTE4MFxcXCIgc3RyaXBlIGJvcmRlciA6Y29sdW1ucz1cXFwiZnJvbVRhYmxlRmllbGQuY29sdW1uc0NvbmZpZ1xcXCIgOmRhdGE9XFxcImZyb21UYWJsZUZpZWxkLmZpZWxkRGF0YVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVxcXCJpdi1saXN0LXRhYmxlXFxcIiA6aGlnaGxpZ2h0LXJvdz1cXFwidHJ1ZVxcXCI+PC9pLXRhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OnJpZ2h0O3dpZHRoOiA0OSU7aGVpZ2h0OiAxMDAlO1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcInJlc3VsdERhdGEudG8udGV4dFxcXCIgc3VmZml4PVxcXCJtZC1kb25lLWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTdFRDNcXHU2NzVGXFx1NTE3M1xcdTgwNTRcXHU1QjU3XFx1NkJCNVxcXCIgc3R5bGU9XFxcIm1hcmdpbi1ib3R0b206IDEwcHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXRhYmxlIEBvbi1yb3ctY2xpY2s9XFxcInNlbGVjdGVkVG9GaWVsZFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIDpoZWlnaHQ9XFxcImRpYWxvZ0hlaWdodC0xODBcXFwiIHN0cmlwZSBib3JkZXIgOmNvbHVtbnM9XFxcInRvVGFibGVGaWVsZC5jb2x1bW5zQ29uZmlnXFxcIiA6ZGF0YT1cXFwidG9UYWJsZUZpZWxkLmZpZWxkRGF0YVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVxcXCJpdi1saXN0LXRhYmxlXFxcIiA6aGlnaGxpZ2h0LXJvdz1cXFwidHJ1ZVxcXCI+PC9pLXRhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24tb3V0ZXItd3JhcFxcXCIgc3R5bGU9XFxcImJvdHRvbTogMTJweDtyaWdodDogMTJweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLWlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwiY29tcGxldGVkKClcXFwiIGljb249XFxcIm1kLWNoZWNrbWFya1xcXCI+XFx1Nzg2RVxcdThCQTQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiaGFuZGxlQ2xvc2UoKVxcXCIgaWNvbj1cXFwibWQtY2xvc2VcXFwiPlxcdTUxNzNcXHU5NUVEPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJkYXRhc2V0LXNpbXBsZS1zZWxlY3QtY29tcFwiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXREYXRhU2V0RGF0YTogXCIvUmVzdC9CdWlsZGVyL0RhdGFTZXQvRGF0YVNldE1haW4vR2V0RGF0YVNldHNGb3JaVHJlZU5vZGVMaXN0XCJcbiAgICAgIH0sXG4gICAgICBkYXRhU2V0VHJlZToge1xuICAgICAgICB0cmVlT2JqOiBudWxsLFxuICAgICAgICB0cmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICBjaGtTdHlsZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBhcmVudElkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgaWYgKHRyZWVOb2RlLm5vZGVUeXBlTmFtZSA9PSBcIkRhdGFTZXRcIikge1xuICAgICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkTm9kZSh0cmVlTm9kZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRyZWVEYXRhOiBudWxsLFxuICAgICAgICBzZWxlY3RlZFRhYmxlTmFtZTogXCLml6BcIlxuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5iaW5kRGF0YVNldFRyZWUoKTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGJpbmREYXRhU2V0VHJlZTogZnVuY3Rpb24gYmluZERhdGFTZXRUcmVlKCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldERhdGFTZXREYXRhLCB7fSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LmRhdGEgIT0gbnVsbCAmJiByZXN1bHQuZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YVtpXS5ub2RlVHlwZU5hbWUgPT0gXCJEYXRhU2V0R3JvdXBcIikge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5kYXRhW2ldLmljb24gPSBCYXNlVXRpbGl0eS5HZXRSb290UGF0aCgpICsgXCIvVGhlbWVzL1BuZzE2WDE2L3BhY2thZ2UucG5nXCI7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmRhdGFbaV0uaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvYXBwbGljYXRpb25fdmlld19jb2x1bW5zLnBuZ1wiO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3NlbGYuZGF0YVNldFRyZWUudHJlZURhdGEgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICBfc2VsZi5kYXRhU2V0VHJlZS50cmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoXCIjZGF0YVNldFpUcmVlVUxcIiksIF9zZWxmLmRhdGFTZXRUcmVlLnRyZWVTZXR0aW5nLCBfc2VsZi5kYXRhU2V0VHJlZS50cmVlRGF0YSk7XG5cbiAgICAgICAgICBfc2VsZi5kYXRhU2V0VHJlZS50cmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcblxuICAgICAgICAgIGZ1enp5U2VhcmNoVHJlZU9iaihfc2VsZi5kYXRhU2V0VHJlZS50cmVlT2JqLCBfc2VsZi4kcmVmcy50eHRfc2VhcmNoX3RleHQuJHJlZnMuaW5wdXQsIG51bGwsIHRydWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgc2VsZWN0ZWROb2RlOiBmdW5jdGlvbiBzZWxlY3RlZE5vZGUodHJlZU5vZGUpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLWRhdGFzZXQnLCB0cmVlTm9kZSk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJqcy1jb2RlLWZyYWdtZW50LXdyYXBcIj5cXFxuICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XCJpbnB1dF9ib3JkZXJfYm90dG9tXCIgcmVmPVwidHh0X3NlYXJjaF90ZXh0XCIgcGxhY2Vob2xkZXI9XCLor7fovpPlhaXooajlkI3miJbogIXmoIfpophcIj48L2ktaW5wdXQ+XFxcbiAgICAgICAgICAgICAgICAgICAgPHVsIGlkPVwiZGF0YVNldFpUcmVlVUxcIiBjbGFzcz1cInp0cmVlXCI+PC91bD5cXFxuICAgICAgICAgICAgICAgIDwvZGl2Pidcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwianMtZGVzaWduLWNvZGUtZnJhZ21lbnRcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBqc0VkaXRvckluc3RhbmNlOiBudWxsXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgc2V0SlNFZGl0b3JJbnN0YW5jZTogZnVuY3Rpb24gc2V0SlNFZGl0b3JJbnN0YW5jZShvYmopIHtcbiAgICAgIHRoaXMuanNFZGl0b3JJbnN0YW5jZSA9IG9iajtcbiAgICB9LFxuICAgIGdldEpzRWRpdG9ySW5zdDogZnVuY3Rpb24gZ2V0SnNFZGl0b3JJbnN0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuanNFZGl0b3JJbnN0YW5jZTtcbiAgICB9LFxuICAgIGluc2VydEpzOiBmdW5jdGlvbiBpbnNlcnRKcyhqcykge1xuICAgICAgdmFyIGRvYyA9IHRoaXMuZ2V0SnNFZGl0b3JJbnN0KCkuZ2V0RG9jKCk7XG4gICAgICB2YXIgY3Vyc29yID0gZG9jLmdldEN1cnNvcigpO1xuICAgICAgZG9jLnJlcGxhY2VSYW5nZShqcywgY3Vyc29yKTtcbiAgICB9LFxuICAgIGZvcm1hdEpTOiBmdW5jdGlvbiBmb3JtYXRKUygpIHtcbiAgICAgIENvZGVNaXJyb3IuY29tbWFuZHNbXCJzZWxlY3RBbGxcIl0odGhpcy5nZXRKc0VkaXRvckluc3QoKSk7XG4gICAgICB2YXIgcmFuZ2UgPSB7XG4gICAgICAgIGZyb206IHRoaXMuZ2V0SnNFZGl0b3JJbnN0KCkuZ2V0Q3Vyc29yKHRydWUpLFxuICAgICAgICB0bzogdGhpcy5nZXRKc0VkaXRvckluc3QoKS5nZXRDdXJzb3IoZmFsc2UpXG4gICAgICB9O1xuICAgICAgO1xuICAgICAgdGhpcy5nZXRKc0VkaXRvckluc3QoKS5hdXRvRm9ybWF0UmFuZ2UocmFuZ2UuZnJvbSwgcmFuZ2UudG8pO1xuICAgIH0sXG4gICAgYWxlcnREZXNjOiBmdW5jdGlvbiBhbGVydERlc2MoKSB7fSxcbiAgICByZWZTY3JpcHQ6IGZ1bmN0aW9uIHJlZlNjcmlwdCgpIHtcbiAgICAgIHZhciBqcyA9IFwiPHNjcmlwdCB0eXBlPVxcXCJ0ZXh0L2phdmFzY3JpcHRcXFwiIHNyYz1cXFwiJHtjb250ZXh0UGF0aH0vVUlDb21wb25lbnQvVHJlZVRhYmxlL0pzL1RyZWVUYWJsZS5qc1xcXCI+PC9zY3JpcHQ+XCI7XG4gICAgICB0aGlzLmluc2VydEpzKGpzKTtcbiAgICB9LFxuICAgIGNhbGxTZXJ2aWNlTWV0aG9kOiBmdW5jdGlvbiBjYWxsU2VydmljZU1ldGhvZCgpIHt9XG4gIH0sXG4gIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtd3JhcFwiPlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwianMtY29kZS1mcmFnbWVudC1pdGVtXCIgQGNsaWNrPVwiZm9ybWF0SlNcIj7moLzlvI/ljJY8L2Rpdj5cXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtaXRlbVwiPuivtOaYjjwvZGl2PlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwianMtY29kZS1mcmFnbWVudC1pdGVtXCIgQGNsaWNrPVwicmVmU2NyaXB0XCI+5byV5YWl6ISa5pysPC9kaXY+XFxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJqcy1jb2RlLWZyYWdtZW50LWl0ZW1cIj7ojrflj5ZVUkzlj4LmlbA8L2Rpdj5cXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtaXRlbVwiPuiwg+eUqOacjeWKoeaWueazlTwvZGl2PlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwianMtY29kZS1mcmFnbWVudC1pdGVtXCI+5Yqg6L295pWw5o2u5a2X5YW4PC9kaXY+XFxcbiAgICAgICAgPC9kaXY+J1xufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJzcWwtZ2VuZXJhbC1kZXNpZ24tY29tcFwiLCB7XG4gIHByb3BzOiBbXCJzcWxEZXNpZ25lckhlaWdodFwiLCBcInZhbHVlXCIsIFwic2hvd0ZpZWxkXCJdLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzcWxUZXh0OiBcIlwiLFxuICAgICAgc2VsZWN0ZWRJdGVtVmFsdWU6IFwi6K+05piOXCIsXG4gICAgICBzZWxmVGFibGVGaWVsZHM6IFtdLFxuICAgICAgcGFyZW50VGFibGVGaWVsZHM6IFtdXG4gICAgfTtcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBzcWxUZXh0OiBmdW5jdGlvbiBzcWxUZXh0KG5ld1ZhbCkge1xuICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBuZXdWYWwpO1xuICAgIH0sXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKG5ld1ZhbCkge1xuICAgICAgdGhpcy5zcWxUZXh0ID0gbmV3VmFsO1xuICAgIH1cbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLnNxbENvZGVNaXJyb3IgPSBDb2RlTWlycm9yLmZyb21UZXh0QXJlYSgkKFwiI1RleHRBcmVhU1FMRWRpdG9yXCIpWzBdLCB7XG4gICAgICBtb2RlOiBcInRleHQveC1zcWxcIixcbiAgICAgIGxpbmVOdW1iZXJzOiB0cnVlLFxuICAgICAgbGluZVdyYXBwaW5nOiB0cnVlLFxuICAgICAgZm9sZEd1dHRlcjogdHJ1ZSxcbiAgICAgIHRoZW1lOiBcIm1vbm9rYWlcIlxuICAgIH0pO1xuICAgIGNvbnNvbGUubG9nKHRoaXMuc3FsRGVzaWduZXJIZWlnaHQpO1xuICAgIHRoaXMuc3FsQ29kZU1pcnJvci5zZXRTaXplKFwiMTAwJVwiLCB0aGlzLnNxbERlc2lnbmVySGVpZ2h0KTtcblxuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICB0aGlzLnNxbENvZGVNaXJyb3Iub24oXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKGNNaXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGNNaXJyb3IuZ2V0VmFsdWUoKSk7XG4gICAgICBfc2VsZi5zcWxUZXh0ID0gY01pcnJvci5nZXRWYWx1ZSgpO1xuICAgIH0pO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0VmFsdWU6IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgdGhpcy5zcWxDb2RlTWlycm9yLmdldFZhbHVlKCk7XG4gICAgfSxcbiAgICBzZXRWYWx1ZTogZnVuY3Rpb24gc2V0VmFsdWUodmFsdWUpIHtcbiAgICAgIHRoaXMuc3FsQ29kZU1pcnJvci5zZXRWYWx1ZSh2YWx1ZSk7XG4gICAgfSxcbiAgICBzZXRBYm91dFRhYmxlRmllbGRzOiBmdW5jdGlvbiBzZXRBYm91dFRhYmxlRmllbGRzKHNlbGZUYWJsZUZpZWxkcywgcGFyZW50VGFibGVGaWVsZHMpIHtcbiAgICAgIHRoaXMuc2VsZlRhYmxlRmllbGRzID0gc2VsZlRhYmxlRmllbGRzO1xuICAgICAgdGhpcy5wYXJlbnRUYWJsZUZpZWxkcyA9IHBhcmVudFRhYmxlRmllbGRzO1xuICAgIH0sXG4gICAgaW5zZXJ0RW52VG9FZGl0b3I6IGZ1bmN0aW9uIGluc2VydEVudlRvRWRpdG9yKGNvZGUpIHtcbiAgICAgIHRoaXMuaW5zZXJ0Q29kZUF0Q3Vyc29yKGNvZGUpO1xuICAgIH0sXG4gICAgaW5zZXJ0RmllbGRUb0VkaXRvcjogZnVuY3Rpb24gaW5zZXJ0RmllbGRUb0VkaXRvcihzb3VyY2VUeXBlLCBldmVudCkge1xuICAgICAgdmFyIHNvdXJjZUZpZWxkcyA9IG51bGw7XG5cbiAgICAgIGlmIChzb3VyY2VUeXBlID09IFwic2VsZlRhYmxlRmllbGRzXCIpIHtcbiAgICAgICAgc291cmNlRmllbGRzID0gdGhpcy5zZWxmVGFibGVGaWVsZHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzb3VyY2VGaWVsZHMgPSB0aGlzLnBhcmVudFRhYmxlRmllbGRzO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNvdXJjZUZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoc291cmNlRmllbGRzW2ldLmZpZWxkTmFtZSA9PSBldmVudCkge1xuICAgICAgICAgIHRoaXMuaW5zZXJ0Q29kZUF0Q3Vyc29yKHNvdXJjZUZpZWxkc1tpXS50YWJsZU5hbWUgKyBcIi5cIiArIHNvdXJjZUZpZWxkc1tpXS5maWVsZE5hbWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBpbnNlcnRDb2RlQXRDdXJzb3I6IGZ1bmN0aW9uIGluc2VydENvZGVBdEN1cnNvcihjb2RlKSB7XG4gICAgICB2YXIgZG9jID0gdGhpcy5zcWxDb2RlTWlycm9yLmdldERvYygpO1xuICAgICAgdmFyIGN1cnNvciA9IGRvYy5nZXRDdXJzb3IoKTtcbiAgICAgIGRvYy5yZXBsYWNlUmFuZ2UoY29kZSwgY3Vyc29yKTtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiAnPGRpdj5cXFxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD1cIlRleHRBcmVhU1FMRWRpdG9yXCI+PC90ZXh0YXJlYT5cXFxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJ0ZXh0LWFsaWduOiByaWdodDttYXJnaW4tdG9wOiA4cHhcIj5cXFxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uR3JvdXAgc2l6ZT1cInNtYWxsXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gQGNsaWNrPVwiaW5zZXJ0RW52VG9FZGl0b3IoXFwnI3tBcGlWYXIu5b2T5YmN55So5oi35omA5Zyo57uE57uHSUR9XFwnKVwiPue7hOe7h0lkPC9CdXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gQGNsaWNrPVwiaW5zZXJ0RW52VG9FZGl0b3IoXFwnI3tBcGlWYXIu5b2T5YmN55So5oi35omA5Zyo57uE57uH5ZCN56ewfVxcJylcIj7nu4Tnu4flkI3np7A8L0J1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBAY2xpY2s9XCJpbnNlcnRFbnZUb0VkaXRvcihcXCcje0FwaVZhci7lvZPliY3nlKjmiLdJRH1cXCcpXCI+55So5oi3SWQ8L0J1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBAY2xpY2s9XCJpbnNlcnRFbnZUb0VkaXRvcihcXCcje0FwaVZhci7lvZPliY3nlKjmiLflkI3np7B9XFwnKVwiPueUqOaIt+WQjeensDwvQnV0dG9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEBjbGljaz1cImluc2VydEVudlRvRWRpdG9yKFxcJyN7RGF0ZVRpbWUu5bm05bm05bm05bm0LeaciOaciC3ml6Xml6V9XFwnKVwiPnl5eXktTU0tZGQ8L0J1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbj7or7TmmI48L0J1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbkdyb3VwPlxcXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwibWFyZ2luLXRvcDogOHB4XCIgdi1pZj1cInNob3dGaWVsZFwiPlxcXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJmbG9hdDogbGVmdDttYXJnaW46IDRweCAxMHB4XCI+5pys6KGo5a2X5q61PC9kaXY+XFxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImZsb2F0OiBsZWZ0XCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLXNlbGVjdCBwbGFjZWhvbGRlcj1cIum7mOiupOS9v+eUqElk5a2X5q61XCIgc2l6ZT1cInNtYWxsXCIgc3R5bGU9XCJ3aWR0aDoxNzVweFwiIEBvbi1jaGFuZ2U9XCJpbnNlcnRGaWVsZFRvRWRpdG9yKFxcJ3NlbGZUYWJsZUZpZWxkc1xcJywkZXZlbnQpXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdi1mb3I9XCJpdGVtIGluIHNlbGZUYWJsZUZpZWxkc1wiIDp2YWx1ZT1cIml0ZW0uZmllbGROYW1lXCIgOmtleT1cIml0ZW0uZmllbGROYW1lXCI+e3tpdGVtLmZpZWxkQ2FwdGlvbn19PC9pLW9wdGlvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9pLXNlbGVjdD5cXFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiZmxvYXQ6IGxlZnQ7bWFyZ2luOiA0cHggMTBweFwiPueItuihqOWtl+autTwvZGl2PlxcXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJmbG9hdDogbGVmdFwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3QgcGxhY2Vob2xkZXI9XCLpu5jorqTkvb/nlKhJZOWtl+autVwiIHNpemU9XCJzbWFsbFwiIHN0eWxlPVwid2lkdGg6MTc3cHhcIiBAb24tY2hhbmdlPVwiaW5zZXJ0RmllbGRUb0VkaXRvcihcXCdwYXJlbnRUYWJsZUZpZWxkc1xcJywkZXZlbnQpXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdi1mb3I9XCJpdGVtIGluIHBhcmVudFRhYmxlRmllbGRzXCIgOnZhbHVlPVwiaXRlbS5maWVsZE5hbWVcIiA6a2V5PVwiaXRlbS5maWVsZE5hbWVcIj57e2l0ZW0uZmllbGRDYXB0aW9ufX08L2ktb3B0aW9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2ktc2VsZWN0PlxcXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcbiAgICAgICAgICAgICAgPC9kaXY+J1xufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJ0YWJsZS1yZWxhdGlvbi1jb250ZW50LWNvbXBcIiwge1xuICBwcm9wczogW1wicmVsYXRpb25cIl0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHM6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EYXRhQmFzZS9UYWJsZS9HZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzXCIsXG4gICAgICAgIHNhdmVEaWFncmFtOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvVGFibGVSZWxhdGlvbi9UYWJsZVJlbGF0aW9uL1NhdmVEaWFncmFtXCIsXG4gICAgICAgIGdldFNpbmdsZURpYWdyYW1EYXRhOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvVGFibGVSZWxhdGlvbi9UYWJsZVJlbGF0aW9uL0dldERldGFpbERhdGFcIixcbiAgICAgICAgdGFibGVWaWV3OiBcIi9IVE1ML0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGVFZGl0Lmh0bWxcIlxuICAgICAgfSxcbiAgICAgIHRhYmxlUmVsYXRpb25EaWFncmFtOiBudWxsLFxuICAgICAgZGlzcGxheURlc2M6IHRydWUsXG4gICAgICBmb3JtYXRKc29uOiBudWxsLFxuICAgICAgcmVjb3JkSWQ6IHRoaXMucmVsYXRpb24ucmVsYXRpb25JZFxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgJCh0aGlzLiRyZWZzLnJlbGF0aW9uQ29udGVudE91dGVyV3JhcCkuY3NzKFwiaGVpZ2h0XCIsIFBhZ2VTdHlsZVV0aWxpdHkuR2V0UGFnZUhlaWdodCgpIC0gNzUpO1xuXG4gICAgaWYgKFBhZ2VTdHlsZVV0aWxpdHkuR2V0UGFnZVdpZHRoKCkgPCAxMDAwKSB7XG4gICAgICB0aGlzLmRpc3BsYXlEZXNjID0gZmFsc2U7XG4gICAgICAkKFwiLnRhYmxlLXJlbGF0aW9uLW9wLWJ1dHRvbnMtb3V0ZXItd3JhcFwiKS5jc3MoXCJ3aWR0aFwiLCBcIjEwMCVcIik7XG4gICAgfVxuXG4gICAgdGhpcy5pbml0RGlhZ3JhbSgpO1xuICAgIHRoaXMubG9hZFJlbGF0aW9uRGV0YWlsRGF0YSgpO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIGlmICh3aW5kb3cuZ29TYW1wbGVzKSBnb1NhbXBsZXMoKTtcbiAgICAgIHZhciAkID0gZ28uR3JhcGhPYmplY3QubWFrZTtcbiAgICAgIHZhciBteURpYWdyYW0gPSAkKGdvLkRpYWdyYW0sIFwidGFibGVSZWxhdGlvbkRpYWdyYW1EaXZcIiwge1xuICAgICAgICBhbGxvd0RlbGV0ZTogZmFsc2UsXG4gICAgICAgIGFsbG93Q29weTogZmFsc2UsXG4gICAgICAgIGxheW91dDogJChnby5Gb3JjZURpcmVjdGVkTGF5b3V0KSxcbiAgICAgICAgXCJ1bmRvTWFuYWdlci5pc0VuYWJsZWRcIjogdHJ1ZVxuICAgICAgfSk7XG4gICAgICB2YXIgYmx1ZWdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1MCwgMTUwLCAyNTApXCIsXG4gICAgICAgIDAuNTogXCJyZ2IoODYsIDg2LCAxODYpXCIsXG4gICAgICAgIDE6IFwicmdiKDg2LCA4NiwgMTg2KVwiXG4gICAgICB9KTtcbiAgICAgIHZhciBncmVlbmdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1OCwgMjA5LCAxNTkpXCIsXG4gICAgICAgIDE6IFwicmdiKDY3LCAxMDEsIDU2KVwiXG4gICAgICB9KTtcbiAgICAgIHZhciByZWRncmFkID0gJChnby5CcnVzaCwgXCJMaW5lYXJcIiwge1xuICAgICAgICAwOiBcInJnYigyMDYsIDEwNiwgMTAwKVwiLFxuICAgICAgICAxOiBcInJnYigxODAsIDU2LCA1MClcIlxuICAgICAgfSk7XG4gICAgICB2YXIgeWVsbG93Z3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMDogXCJyZ2IoMjU0LCAyMjEsIDUwKVwiLFxuICAgICAgICAxOiBcInJnYigyNTQsIDE4MiwgNTApXCJcbiAgICAgIH0pO1xuICAgICAgdmFyIGxpZ2h0Z3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMTogXCIjRTZFNkZBXCIsXG4gICAgICAgIDA6IFwiI0ZGRkFGMFwiXG4gICAgICB9KTtcbiAgICAgIHZhciBpdGVtVGVtcGwgPSAkKGdvLlBhbmVsLCBcIkhvcml6b250YWxcIiwgJChnby5TaGFwZSwge1xuICAgICAgICBkZXNpcmVkU2l6ZTogbmV3IGdvLlNpemUoMTAsIDEwKVxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJmaWd1cmVcIiwgXCJmaWd1cmVcIiksIG5ldyBnby5CaW5kaW5nKFwiZmlsbFwiLCBcImNvbG9yXCIpKSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgc3Ryb2tlOiBcIiMzMzMzMzNcIixcbiAgICAgICAgZm9udDogXCJib2xkIDE0cHggc2Fucy1zZXJpZlwiXG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIiwgXCJuYW1lXCIpKSk7XG4gICAgICBteURpYWdyYW0ubm9kZVRlbXBsYXRlID0gJChnby5Ob2RlLCBcIkF1dG9cIiwge1xuICAgICAgICBzZWxlY3Rpb25BZG9ybmVkOiB0cnVlLFxuICAgICAgICByZXNpemFibGU6IHRydWUsXG4gICAgICAgIGxheW91dENvbmRpdGlvbnM6IGdvLlBhcnQuTGF5b3V0U3RhbmRhcmQgJiB+Z28uUGFydC5MYXlvdXROb2RlU2l6ZWQsXG4gICAgICAgIGZyb21TcG90OiBnby5TcG90LkFsbFNpZGVzLFxuICAgICAgICB0b1Nwb3Q6IGdvLlNwb3QuQWxsU2lkZXMsXG4gICAgICAgIGlzU2hhZG93ZWQ6IHRydWUsXG4gICAgICAgIHNoYWRvd0NvbG9yOiBcIiNDNUMxQUFcIlxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJsb2NhdGlvblwiLCBcImxvY2F0aW9uXCIpLm1ha2VUd29XYXkoKSwgbmV3IGdvLkJpbmRpbmcoXCJkZXNpcmVkU2l6ZVwiLCBcInZpc2libGVcIiwgZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBnby5TaXplKE5hTiwgTmFOKTtcbiAgICAgIH0pLm9mT2JqZWN0KFwiTElTVFwiKSwgJChnby5TaGFwZSwgXCJSZWN0YW5nbGVcIiwge1xuICAgICAgICBmaWxsOiBsaWdodGdyYWQsXG4gICAgICAgIHN0cm9rZTogXCIjNzU2ODc1XCIsXG4gICAgICAgIHN0cm9rZVdpZHRoOiAzXG4gICAgICB9KSwgJChnby5QYW5lbCwgXCJUYWJsZVwiLCB7XG4gICAgICAgIG1hcmdpbjogOCxcbiAgICAgICAgc3RyZXRjaDogZ28uR3JhcGhPYmplY3QuRmlsbFxuICAgICAgfSwgJChnby5Sb3dDb2x1bW5EZWZpbml0aW9uLCB7XG4gICAgICAgIHJvdzogMCxcbiAgICAgICAgc2l6aW5nOiBnby5Sb3dDb2x1bW5EZWZpbml0aW9uLk5vbmVcbiAgICAgIH0pLCAkKGdvLlRleHRCbG9jaywge1xuICAgICAgICByb3c6IDAsXG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5DZW50ZXIsXG4gICAgICAgIG1hcmdpbjogbmV3IGdvLk1hcmdpbigwLCAxNCwgMCwgMiksXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNnB4IHNhbnMtc2VyaWZcIlxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwia2V5XCIpKSwgJChcIlBhbmVsRXhwYW5kZXJCdXR0b25cIiwgXCJMSVNUXCIsIHtcbiAgICAgICAgcm93OiAwLFxuICAgICAgICBhbGlnbm1lbnQ6IGdvLlNwb3QuVG9wUmlnaHRcbiAgICAgIH0pLCAkKGdvLlBhbmVsLCBcIlZlcnRpY2FsXCIsIHtcbiAgICAgICAgbmFtZTogXCJMSVNUXCIsXG4gICAgICAgIHJvdzogMSxcbiAgICAgICAgcGFkZGluZzogMyxcbiAgICAgICAgYWxpZ25tZW50OiBnby5TcG90LlRvcExlZnQsXG4gICAgICAgIGRlZmF1bHRBbGlnbm1lbnQ6IGdvLlNwb3QuTGVmdCxcbiAgICAgICAgc3RyZXRjaDogZ28uR3JhcGhPYmplY3QuSG9yaXpvbnRhbCxcbiAgICAgICAgaXRlbVRlbXBsYXRlOiBpdGVtVGVtcGxcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwiaXRlbUFycmF5XCIsIFwiaXRlbXNcIikpKSk7XG4gICAgICBteURpYWdyYW0ubGlua1RlbXBsYXRlID0gJChnby5MaW5rLCB7XG4gICAgICAgIHNlbGVjdGlvbkFkb3JuZWQ6IHRydWUsXG4gICAgICAgIGxheWVyTmFtZTogXCJGb3JlZ3JvdW5kXCIsXG4gICAgICAgIHJlc2hhcGFibGU6IHRydWUsXG4gICAgICAgIHJvdXRpbmc6IGdvLkxpbmsuQXZvaWRzTm9kZXMsXG4gICAgICAgIGNvcm5lcjogNSxcbiAgICAgICAgY3VydmU6IGdvLkxpbmsuSnVtcE92ZXJcbiAgICAgIH0sICQoZ28uU2hhcGUsIHtcbiAgICAgICAgc3Ryb2tlOiBcIiMzMDNCNDVcIixcbiAgICAgICAgc3Ryb2tlV2lkdGg6IDIuNVxuICAgICAgfSksICQoZ28uVGV4dEJsb2NrLCB7XG4gICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgZm9udDogXCJib2xkIDE0cHggc2Fucy1zZXJpZlwiLFxuICAgICAgICBzdHJva2U6IFwiIzE5NjdCM1wiLFxuICAgICAgICBzZWdtZW50SW5kZXg6IDAsXG4gICAgICAgIHNlZ21lbnRPZmZzZXQ6IG5ldyBnby5Qb2ludChOYU4sIE5hTiksXG4gICAgICAgIHNlZ21lbnRPcmllbnRhdGlvbjogZ28uTGluay5PcmllbnRVcHJpZ2h0XG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIiwgXCJ0ZXh0XCIpKSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICBmb250OiBcImJvbGQgMTRweCBzYW5zLXNlcmlmXCIsXG4gICAgICAgIHN0cm9rZTogXCIjMTk2N0IzXCIsXG4gICAgICAgIHNlZ21lbnRJbmRleDogLTEsXG4gICAgICAgIHNlZ21lbnRPZmZzZXQ6IG5ldyBnby5Qb2ludChOYU4sIE5hTiksXG4gICAgICAgIHNlZ21lbnRPcmllbnRhdGlvbjogZ28uTGluay5PcmllbnRVcHJpZ2h0XG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIiwgXCJ0b1RleHRcIikpKTtcbiAgICAgIHZhciBub2RlRGF0YUFycmF5ID0gW3tcbiAgICAgICAga2V5OiBcIlByb2R1Y3RzXCIsXG4gICAgICAgIGl0ZW1zOiBbe1xuICAgICAgICAgIG5hbWU6IFwiUHJvZHVjdElEXCIsXG4gICAgICAgICAgaXNrZXk6IHRydWUsXG4gICAgICAgICAgZmlndXJlOiBcIkRlY2lzaW9uXCIsXG4gICAgICAgICAgY29sb3I6IHllbGxvd2dyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiUHJvZHVjdE5hbWVcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIkN1YmUxXCIsXG4gICAgICAgICAgY29sb3I6IGJsdWVncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIlN1cHBsaWVySURcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIkRlY2lzaW9uXCIsXG4gICAgICAgICAgY29sb3I6IFwicHVycGxlXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiQ2F0ZWdvcnlJRFwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiRGVjaXNpb25cIixcbiAgICAgICAgICBjb2xvcjogXCJwdXJwbGVcIlxuICAgICAgICB9XVxuICAgICAgfSwge1xuICAgICAgICBrZXk6IFwiU3VwcGxpZXJzXCIsXG4gICAgICAgIGl0ZW1zOiBbe1xuICAgICAgICAgIG5hbWU6IFwiU3VwcGxpZXJJRFwiLFxuICAgICAgICAgIGlza2V5OiB0cnVlLFxuICAgICAgICAgIGZpZ3VyZTogXCJEZWNpc2lvblwiLFxuICAgICAgICAgIGNvbG9yOiB5ZWxsb3dncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIkNvbXBhbnlOYW1lXCIsXG4gICAgICAgICAgaXNrZXk6IGZhbHNlLFxuICAgICAgICAgIGZpZ3VyZTogXCJDdWJlMVwiLFxuICAgICAgICAgIGNvbG9yOiBibHVlZ3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJDb250YWN0TmFtZVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiQ3ViZTFcIixcbiAgICAgICAgICBjb2xvcjogYmx1ZWdyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiQWRkcmVzc1wiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiQ3ViZTFcIixcbiAgICAgICAgICBjb2xvcjogYmx1ZWdyYWRcbiAgICAgICAgfV1cbiAgICAgIH0sIHtcbiAgICAgICAga2V5OiBcIkNhdGVnb3JpZXNcIixcbiAgICAgICAgaXRlbXM6IFt7XG4gICAgICAgICAgbmFtZTogXCJDYXRlZ29yeUlEXCIsXG4gICAgICAgICAgaXNrZXk6IHRydWUsXG4gICAgICAgICAgZmlndXJlOiBcIkRlY2lzaW9uXCIsXG4gICAgICAgICAgY29sb3I6IHllbGxvd2dyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiQ2F0ZWdvcnlOYW1lXCIsXG4gICAgICAgICAgaXNrZXk6IGZhbHNlLFxuICAgICAgICAgIGZpZ3VyZTogXCJDdWJlMVwiLFxuICAgICAgICAgIGNvbG9yOiBibHVlZ3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJEZXNjcmlwdGlvblwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiQ3ViZTFcIixcbiAgICAgICAgICBjb2xvcjogYmx1ZWdyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiUGljdHVyZVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiVHJpYW5nbGVVcFwiLFxuICAgICAgICAgIGNvbG9yOiByZWRncmFkXG4gICAgICAgIH1dXG4gICAgICB9LCB7XG4gICAgICAgIGtleTogXCJPcmRlciBEZXRhaWxzXCIsXG4gICAgICAgIGl0ZW1zOiBbe1xuICAgICAgICAgIG5hbWU6IFwiT3JkZXJJRFwiLFxuICAgICAgICAgIGlza2V5OiB0cnVlLFxuICAgICAgICAgIGZpZ3VyZTogXCJEZWNpc2lvblwiLFxuICAgICAgICAgIGNvbG9yOiB5ZWxsb3dncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIlByb2R1Y3RJRFwiLFxuICAgICAgICAgIGlza2V5OiB0cnVlLFxuICAgICAgICAgIGZpZ3VyZTogXCJEZWNpc2lvblwiLFxuICAgICAgICAgIGNvbG9yOiB5ZWxsb3dncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIlVuaXRQcmljZVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiTWFnbmV0aWNEYXRhXCIsXG4gICAgICAgICAgY29sb3I6IGdyZWVuZ3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJRdWFudGl0eVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiTWFnbmV0aWNEYXRhXCIsXG4gICAgICAgICAgY29sb3I6IGdyZWVuZ3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJEaXNjb3VudFwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiTWFnbmV0aWNEYXRhXCIsXG4gICAgICAgICAgY29sb3I6IGdyZWVuZ3JhZFxuICAgICAgICB9XVxuICAgICAgfV07XG4gICAgICB2YXIgbGlua0RhdGFBcnJheSA9IFt7XG4gICAgICAgIGZyb206IFwiUHJvZHVjdHNcIixcbiAgICAgICAgdG86IFwiU3VwcGxpZXJzXCIsXG4gICAgICAgIHRleHQ6IFwiMC4uTlwiLFxuICAgICAgICB0b1RleHQ6IFwiMVwiXG4gICAgICB9LCB7XG4gICAgICAgIGZyb206IFwiUHJvZHVjdHNcIixcbiAgICAgICAgdG86IFwiQ2F0ZWdvcmllc1wiLFxuICAgICAgICB0ZXh0OiBcIjAuLk5cIixcbiAgICAgICAgdG9UZXh0OiBcIjFcIlxuICAgICAgfSwge1xuICAgICAgICBmcm9tOiBcIk9yZGVyIERldGFpbHNcIixcbiAgICAgICAgdG86IFwiUHJvZHVjdHNcIixcbiAgICAgICAgdGV4dDogXCIwLi5OXCIsXG4gICAgICAgIHRvVGV4dDogXCIxXCJcbiAgICAgIH1dO1xuICAgICAgbXlEaWFncmFtLm1vZGVsID0gJChnby5HcmFwaExpbmtzTW9kZWwsIHtcbiAgICAgICAgY29waWVzQXJyYXlzOiB0cnVlLFxuICAgICAgICBjb3BpZXNBcnJheU9iamVjdHM6IHRydWUsXG4gICAgICAgIG5vZGVEYXRhQXJyYXk6IG5vZGVEYXRhQXJyYXksXG4gICAgICAgIGxpbmtEYXRhQXJyYXk6IGxpbmtEYXRhQXJyYXlcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgc2hvd1NlbGVjdFRhYmxlRGlhbG9nOiBmdW5jdGlvbiBzaG93U2VsZWN0VGFibGVEaWFsb2coKSB7XG4gICAgICB0aGlzLiRyZWZzLnNlbGVjdFNpbmdsZVRhYmxlRGlhbG9nLmJlZ2luU2VsZWN0VGFibGUoKTtcbiAgICB9LFxuICAgIHNob3dTZWxlY3RGaWVsZENvbm5lY3REaWFsb2c6IGZ1bmN0aW9uIHNob3dTZWxlY3RGaWVsZENvbm5lY3REaWFsb2coKSB7XG4gICAgICB2YXIgZnJvbVRhYmxlSWQgPSBcIlwiO1xuICAgICAgdmFyIHRvVGFibGVJZCA9IFwiXCI7XG4gICAgICB2YXIgaSA9IDA7XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLnNlbGVjdGlvbi5lYWNoKGZ1bmN0aW9uIChwYXJ0KSB7XG4gICAgICAgIGlmIChwYXJ0IGluc3RhbmNlb2YgZ28uTm9kZSkge1xuICAgICAgICAgIGlmIChpID09IDApIHtcbiAgICAgICAgICAgIGZyb21UYWJsZUlkID0gcGFydC5kYXRhLnRhYmxlSWQ7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRvVGFibGVJZCA9IHBhcnQuZGF0YS50YWJsZUlkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmICghdG9UYWJsZUlkKSB7XG4gICAgICAgIHRvVGFibGVJZCA9IGZyb21UYWJsZUlkO1xuICAgICAgfVxuXG4gICAgICBpZiAoZnJvbVRhYmxlSWQgIT0gXCJcIiAmJiB0b1RhYmxlSWQgIT0gXCJcIikge1xuICAgICAgICB0aGlzLiRyZWZzLnRhYmxlUmVsYXRpb25Db25uZWN0VHdvVGFibGVEaWFsb2cuYmVnaW5TZWxlY3RDb25uZWN0KGZyb21UYWJsZUlkLCB0b1RhYmxlSWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLor7flhYjpgInkuK0y5Liq6IqC54K5XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgYWRkVGFibGVUb0RpYWdyYW06IGZ1bmN0aW9uIGFkZFRhYmxlVG9EaWFncmFtKHRhYmxlRGF0YSkge1xuICAgICAgdmFyIHRhYmxlSWQgPSB0YWJsZURhdGEuaWQ7XG4gICAgICB2YXIgdGFibGVJZHMgPSBbdGFibGVJZF07XG5cbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy50YWJsZUlzRXhpc3RJbkRpYWdyYW0odGFibGVJZCkpIHtcbiAgICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHMsIHtcbiAgICAgICAgICBcInRhYmxlSWRzXCI6IHRhYmxlSWRzXG4gICAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgIHZhciBhbGxGaWVsZHMgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICAgIHZhciBzaW5nbGVUYWJsZSA9IHJlc3VsdC5leEtWRGF0YS5UYWJsZXNbMF07XG4gICAgICAgICAgICB2YXIgYWxsRmllbGRzU3R5bGUgPSBbXTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxGaWVsZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgYWxsRmllbGRzW2ldLmRpc3BsYXlUZXh0ID0gYWxsRmllbGRzW2ldLmZpZWxkTmFtZSArIFwiW1wiICsgYWxsRmllbGRzW2ldLmZpZWxkQ2FwdGlvbiArIFwiXVwiO1xuICAgICAgICAgICAgICBhbGxGaWVsZHNTdHlsZS5wdXNoKF9zZWxmLnJlbmRlcmVyRmllbGRTdHlsZShhbGxGaWVsZHNbaV0pKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG1vZGVsTm9kZURhdGEgPSB7XG4gICAgICAgICAgICAgIHRhYmxlSWQ6IHRhYmxlSWQsXG4gICAgICAgICAgICAgIGxvYzogXCIwIDBcIixcbiAgICAgICAgICAgICAgZmllbGRzOiBhbGxGaWVsZHNTdHlsZSxcbiAgICAgICAgICAgICAgdGFibGVEYXRhOiBzaW5nbGVUYWJsZSxcbiAgICAgICAgICAgICAgdGFibGVOYW1lOiBzaW5nbGVUYWJsZS50YWJsZU5hbWUsXG4gICAgICAgICAgICAgIHRhYmxlQ2FwdGlvbjogc2luZ2xlVGFibGUudGFibGVDYXB0aW9uLFxuICAgICAgICAgICAgICB0YWJsZURpc3BsYXlUZXh0OiBzaW5nbGVUYWJsZS50YWJsZU5hbWUgKyBcIltcIiArIHNpbmdsZVRhYmxlLnRhYmxlQ2FwdGlvbiArIFwiXVwiLFxuICAgICAgICAgICAgICBrZXk6IHNpbmdsZVRhYmxlLnRhYmxlSWRcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9zZWxmLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLnN0YXJ0VHJhbnNhY3Rpb24oXCJmbGFzaFwiKTtcblxuICAgICAgICAgICAgX3NlbGYudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuYWRkTm9kZURhdGEobW9kZWxOb2RlRGF0YSk7XG5cbiAgICAgICAgICAgIF9zZWxmLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLmNvbW1pdFRyYW5zYWN0aW9uKFwiZmxhc2hcIik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB0aGlzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+l55S75biD5Lit5bey57uP5a2Y5Zyo6KGoOlwiICsgdGFibGVEYXRhLnRleHQpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZGVsZXRlU2VsZWN0aW9uOiBmdW5jdGlvbiBkZWxldGVTZWxlY3Rpb24oKSB7XG4gICAgICBpZiAodGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbS5jb21tYW5kSGFuZGxlci5jYW5EZWxldGVTZWxlY3Rpb24oKSkge1xuICAgICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLmNvbW1hbmRIYW5kbGVyLmRlbGV0ZVNlbGVjdGlvbigpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSxcbiAgICBjb25uZWN0U2VsZWN0aW9uTm9kZTogZnVuY3Rpb24gY29ubmVjdFNlbGVjdGlvbk5vZGUoY29ubmVjdERhdGEpIHtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuc3RhcnRUcmFuc2FjdGlvbihcImZsYXNoXCIpO1xuICAgICAgdmFyIGxpbmVEYXRhID0ge1xuICAgICAgICBsaW5lSWQ6IFN0cmluZ1V0aWxpdHkuR3VpZCgpLFxuICAgICAgICBmcm9tOiBjb25uZWN0RGF0YS5mcm9tLnRhYmxlSWQsXG4gICAgICAgIHRvOiBjb25uZWN0RGF0YS50by50YWJsZUlkLFxuICAgICAgICBmcm9tVGV4dDogY29ubmVjdERhdGEuZnJvbS50ZXh0LFxuICAgICAgICB0b1RleHQ6IGNvbm5lY3REYXRhLnRvLnRleHRcbiAgICAgIH07XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLmFkZExpbmtEYXRhKGxpbmVEYXRhKTtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuY29tbWl0VHJhbnNhY3Rpb24oXCJmbGFzaFwiKTtcbiAgICB9LFxuICAgIHNhdmVNb2RlbFRvU2VydmVyOiBmdW5jdGlvbiBzYXZlTW9kZWxUb1NlcnZlcigpIHtcbiAgICAgIGlmICh0aGlzLnJlY29yZElkKSB7XG4gICAgICAgIHZhciBzZW5kRGF0YSA9IHtcbiAgICAgICAgICByZWNvcmRJZDogdGhpcy5yZWNvcmRJZCxcbiAgICAgICAgICByZWxhdGlvbkNvbnRlbnQ6IEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyh0aGlzLmdldERhdGFKc29uKCkpLFxuICAgICAgICAgIHJlbGF0aW9uRGlhZ3JhbUpzb246IHRoaXMuZ2V0RGlhZ3JhbUpzb24oKVxuICAgICAgICB9O1xuICAgICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2Uuc2F2ZURpYWdyYW0sIHNlbmREYXRhLCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfSwgdGhpcyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBpbml0RGlhZ3JhbTogZnVuY3Rpb24gaW5pdERpYWdyYW0oKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBpZiAod2luZG93LmdvU2FtcGxlcykgZ29TYW1wbGVzKCk7XG4gICAgICB2YXIgJCA9IGdvLkdyYXBoT2JqZWN0Lm1ha2U7XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtID0gJChnby5EaWFncmFtLCBcInRhYmxlUmVsYXRpb25EaWFncmFtRGl2XCIsIHtcbiAgICAgICAgYWxsb3dEZWxldGU6IHRydWUsXG4gICAgICAgIGFsbG93Q29weTogZmFsc2UsXG4gICAgICAgIGxheW91dDogJChnby5Gb3JjZURpcmVjdGVkTGF5b3V0LCB7XG4gICAgICAgICAgaXNPbmdvaW5nOiBmYWxzZVxuICAgICAgICB9KSxcbiAgICAgICAgXCJ1bmRvTWFuYWdlci5pc0VuYWJsZWRcIjogdHJ1ZVxuICAgICAgfSk7XG4gICAgICB2YXIgdGFibGVSZWxhdGlvbkRpYWdyYW0gPSB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtO1xuICAgICAgdmFyIGxpZ2h0Z3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMTogXCIjRTZFNkZBXCIsXG4gICAgICAgIDA6IFwiI0ZGRkFGMFwiXG4gICAgICB9KTtcbiAgICAgIHZhciBpdGVtVGVtcGwgPSAkKGdvLlBhbmVsLCBcIkhvcml6b250YWxcIiwgJChnby5TaGFwZSwge1xuICAgICAgICBkZXNpcmVkU2l6ZTogbmV3IGdvLlNpemUoMTAsIDEwKVxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJmaWd1cmVcIiwgXCJmaWd1cmVcIiksIG5ldyBnby5CaW5kaW5nKFwiZmlsbFwiLCBcImNvbG9yXCIpKSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgc3Ryb2tlOiBcIiMzMzMzMzNcIixcbiAgICAgICAgZm9udDogXCJib2xkIDE0cHggc2Fucy1zZXJpZlwiXG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIiwgXCJkaXNwbGF5VGV4dFwiKSkpO1xuICAgICAgdGFibGVSZWxhdGlvbkRpYWdyYW0ubm9kZVRlbXBsYXRlID0gJChnby5Ob2RlLCBcIkF1dG9cIiwge1xuICAgICAgICBzZWxlY3Rpb25BZG9ybmVkOiB0cnVlLFxuICAgICAgICByZXNpemFibGU6IHRydWUsXG4gICAgICAgIGxheW91dENvbmRpdGlvbnM6IGdvLlBhcnQuTGF5b3V0U3RhbmRhcmQgJiB+Z28uUGFydC5MYXlvdXROb2RlU2l6ZWQsXG4gICAgICAgIGZyb21TcG90OiBnby5TcG90LkFsbFNpZGVzLFxuICAgICAgICB0b1Nwb3Q6IGdvLlNwb3QuQWxsU2lkZXMsXG4gICAgICAgIGlzU2hhZG93ZWQ6IHRydWUsXG4gICAgICAgIHNoYWRvd0NvbG9yOiBcIiNDNUMxQUFcIixcbiAgICAgICAgZG91YmxlQ2xpY2s6IGZ1bmN0aW9uIGRvdWJsZUNsaWNrKGUsIG5vZGUpIHtcbiAgICAgICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KF9zZWxmLmFjSW50ZXJmYWNlLnRhYmxlVmlldywge1xuICAgICAgICAgICAgXCJvcFwiOiBcInZpZXdcIixcbiAgICAgICAgICAgIFwicmVjb3JkSWRcIjogbm9kZS5kYXRhLnRhYmxlSWRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkZyYW1lX09wZW5JZnJhbWVXaW5kb3cod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0lkLCB1cmwsIHtcbiAgICAgICAgICAgIHRpdGxlOiBcIuihqOiuvuiuoVwiXG4gICAgICAgICAgfSwgMCk7XG4gICAgICAgIH1cbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwibG9jYXRpb25cIiwgXCJsb2NcIiwgZ28uUG9pbnQucGFyc2UpLCBuZXcgZ28uQmluZGluZyhcImRlc2lyZWRTaXplXCIsIFwidmlzaWJsZVwiLCBmdW5jdGlvbiAodikge1xuICAgICAgICByZXR1cm4gbmV3IGdvLlNpemUoTmFOLCBOYU4pO1xuICAgICAgfSkub2ZPYmplY3QoXCJMSVNUXCIpLCAkKGdvLlNoYXBlLCBcIlJvdW5kZWRSZWN0YW5nbGVcIiwge1xuICAgICAgICBmaWxsOiBsaWdodGdyYWQsXG4gICAgICAgIHN0cm9rZTogXCIjNzU2ODc1XCIsXG4gICAgICAgIHN0cm9rZVdpZHRoOiAxXG4gICAgICB9KSwgJChnby5QYW5lbCwgXCJUYWJsZVwiLCB7XG4gICAgICAgIG1hcmdpbjogOCxcbiAgICAgICAgc3RyZXRjaDogZ28uR3JhcGhPYmplY3QuRmlsbFxuICAgICAgfSwgJChnby5Sb3dDb2x1bW5EZWZpbml0aW9uLCB7XG4gICAgICAgIHJvdzogMCxcbiAgICAgICAgc2l6aW5nOiBnby5Sb3dDb2x1bW5EZWZpbml0aW9uLk5vbmVcbiAgICAgIH0pLCAkKGdvLlRleHRCbG9jaywge1xuICAgICAgICByb3c6IDAsXG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5DZW50ZXIsXG4gICAgICAgIG1hcmdpbjogbmV3IGdvLk1hcmdpbigwLCAxNCwgMCwgMiksXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNnB4IHNhbnMtc2VyaWZcIlxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwidGFibGVEaXNwbGF5VGV4dFwiKSksICQoXCJQYW5lbEV4cGFuZGVyQnV0dG9uXCIsIFwiTElTVFwiLCB7XG4gICAgICAgIHJvdzogMCxcbiAgICAgICAgYWxpZ25tZW50OiBnby5TcG90LlRvcFJpZ2h0XG4gICAgICB9KSwgJChnby5QYW5lbCwgXCJWZXJ0aWNhbFwiLCB7XG4gICAgICAgIG5hbWU6IFwiTElTVFwiLFxuICAgICAgICByb3c6IDEsXG4gICAgICAgIHBhZGRpbmc6IDMsXG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5Ub3BMZWZ0LFxuICAgICAgICBkZWZhdWx0QWxpZ25tZW50OiBnby5TcG90LkxlZnQsXG4gICAgICAgIHN0cmV0Y2g6IGdvLkdyYXBoT2JqZWN0Lkhvcml6b250YWwsXG4gICAgICAgIGl0ZW1UZW1wbGF0ZTogaXRlbVRlbXBsXG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcIml0ZW1BcnJheVwiLCBcImZpZWxkc1wiKSkpKTtcbiAgICAgIHRhYmxlUmVsYXRpb25EaWFncmFtLmxpbmtUZW1wbGF0ZSA9ICQoZ28uTGluaywge1xuICAgICAgICBzZWxlY3Rpb25BZG9ybmVkOiB0cnVlLFxuICAgICAgICBsYXllck5hbWU6IFwiRm9yZWdyb3VuZFwiLFxuICAgICAgICByZXNoYXBhYmxlOiB0cnVlLFxuICAgICAgICByb3V0aW5nOiBnby5MaW5rLkF2b2lkc05vZGVzLFxuICAgICAgICBjb3JuZXI6IDUsXG4gICAgICAgIGN1cnZlOiBnby5MaW5rLkp1bXBPdmVyXG4gICAgICB9LCAkKGdvLlNoYXBlLCB7XG4gICAgICAgIHN0cm9rZTogXCIjMzAzQjQ1XCIsXG4gICAgICAgIHN0cm9rZVdpZHRoOiAxLjVcbiAgICAgIH0pLCAkKGdvLlRleHRCbG9jaywge1xuICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNHB4IHNhbnMtc2VyaWZcIixcbiAgICAgICAgc3Ryb2tlOiBcIiMxOTY3QjNcIixcbiAgICAgICAgc2VnbWVudEluZGV4OiAwLFxuICAgICAgICBzZWdtZW50T2Zmc2V0OiBuZXcgZ28uUG9pbnQoTmFOLCBOYU4pLFxuICAgICAgICBzZWdtZW50T3JpZW50YXRpb246IGdvLkxpbmsuT3JpZW50VXByaWdodFxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwiZnJvbVRleHRcIikpLCAkKGdvLlRleHRCbG9jaywge1xuICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNHB4IHNhbnMtc2VyaWZcIixcbiAgICAgICAgc3Ryb2tlOiBcIiMxOTY3QjNcIixcbiAgICAgICAgc2VnbWVudEluZGV4OiAtMSxcbiAgICAgICAgc2VnbWVudE9mZnNldDogbmV3IGdvLlBvaW50KE5hTiwgTmFOKSxcbiAgICAgICAgc2VnbWVudE9yaWVudGF0aW9uOiBnby5MaW5rLk9yaWVudFVwcmlnaHRcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwidGV4dFwiLCBcInRvVGV4dFwiKSkpO1xuICAgIH0sXG4gICAgbG9hZFJlbGF0aW9uRGV0YWlsRGF0YTogZnVuY3Rpb24gbG9hZFJlbGF0aW9uRGV0YWlsRGF0YSgpIHtcbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXRTaW5nbGVEaWFncmFtRGF0YSwge1xuICAgICAgICByZWNvcmRJZDogdGhpcy5yZWNvcmRJZCxcbiAgICAgICAgb3A6IFwiRWRpdFwiXG4gICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIGlmIChyZXN1bHQuZGF0YS5yZWxhdGlvbkNvbnRlbnQpIHtcbiAgICAgICAgICAgIHZhciBkYXRhSnNvbiA9IEpzb25VdGlsaXR5LlN0cmluZ1RvSnNvbihyZXN1bHQuZGF0YS5yZWxhdGlvbkNvbnRlbnQpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YUpzb24pO1xuXG4gICAgICAgICAgICBfc2VsZi5zZXREYXRhSnNvbihkYXRhSnNvbik7XG5cbiAgICAgICAgICAgIF9zZWxmLmNvbnZlcnRUb0Z1bGxKc29uKGRhdGFKc29uLCBfc2VsZi5kcmF3T2JqSW5EaWFncmFtKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBkcmF3T2JqSW5EaWFncmFtOiBmdW5jdGlvbiBkcmF3T2JqSW5EaWFncmFtKGZ1bGxKc29uKSB7XG4gICAgICB2YXIgJCA9IGdvLkdyYXBoT2JqZWN0Lm1ha2U7XG4gICAgICB2YXIgYmx1ZWdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1MCwgMTUwLCAyNTApXCIsXG4gICAgICAgIDAuNTogXCJyZ2IoODYsIDg2LCAxODYpXCIsXG4gICAgICAgIDE6IFwicmdiKDg2LCA4NiwgMTg2KVwiXG4gICAgICB9KTtcbiAgICAgIHZhciBncmVlbmdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1OCwgMjA5LCAxNTkpXCIsXG4gICAgICAgIDE6IFwicmdiKDY3LCAxMDEsIDU2KVwiXG4gICAgICB9KTtcbiAgICAgIHZhciByZWRncmFkID0gJChnby5CcnVzaCwgXCJMaW5lYXJcIiwge1xuICAgICAgICAwOiBcInJnYigyMDYsIDEwNiwgMTAwKVwiLFxuICAgICAgICAxOiBcInJnYigxODAsIDU2LCA1MClcIlxuICAgICAgfSk7XG4gICAgICB2YXIgeWVsbG93Z3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMDogXCJyZ2IoMjU0LCAyMjEsIDUwKVwiLFxuICAgICAgICAxOiBcInJnYigyNTQsIDE4MiwgNTApXCJcbiAgICAgIH0pO1xuICAgICAgdmFyIGxpbmtEYXRhQXJyYXkgPSBmdWxsSnNvbi5saW5lTGlzdDtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwgPSAkKGdvLkdyYXBoTGlua3NNb2RlbCwge1xuICAgICAgICBjb3BpZXNBcnJheXM6IHRydWUsXG4gICAgICAgIGNvcGllc0FycmF5T2JqZWN0czogdHJ1ZSxcbiAgICAgICAgbm9kZURhdGFBcnJheTogZnVsbEpzb24udGFibGVMaXN0XG4gICAgICB9KTtcblxuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBfc2VsZi50YWJsZVJlbGF0aW9uRGlhZ3JhbS5tb2RlbC5zdGFydFRyYW5zYWN0aW9uKFwiZmxhc2hcIik7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmdWxsSnNvbi5saW5lTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciBsaW5lRGF0YSA9IGZ1bGxKc29uLmxpbmVMaXN0W2ldO1xuXG4gICAgICAgICAgX3NlbGYudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuYWRkTGlua0RhdGEobGluZURhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgX3NlbGYudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuY29tbWl0VHJhbnNhY3Rpb24oXCJmbGFzaFwiKTtcbiAgICAgIH0sIDUwMCk7XG4gICAgfSxcbiAgICBjb252ZXJ0VG9GdWxsSnNvbjogZnVuY3Rpb24gY29udmVydFRvRnVsbEpzb24oc2ltcGxlSnNvbiwgZnVuYykge1xuICAgICAgdmFyIGZ1bGxKc29uID0gSnNvblV0aWxpdHkuQ2xvbmVTaW1wbGUoc2ltcGxlSnNvbik7XG4gICAgICB2YXIgdGFibGVJZHMgPSBuZXcgQXJyYXkoKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaW1wbGVKc29uLnRhYmxlTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICB0YWJsZUlkcy5wdXNoKHNpbXBsZUpzb24udGFibGVMaXN0W2ldLnRhYmxlSWQpO1xuICAgICAgfVxuXG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVzRmllbGRzQnlUYWJsZUlkcywge1xuICAgICAgICBcInRhYmxlSWRzXCI6IHRhYmxlSWRzXG4gICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIHZhciBhbGxGaWVsZHMgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICB2YXIgYWxsVGFibGVzID0gcmVzdWx0LmV4S1ZEYXRhLlRhYmxlcztcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZnVsbEpzb24udGFibGVMaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgc2luZ2xlVGFibGVEYXRhID0gX3NlbGYuZ2V0U2luZ2xlVGFibGVEYXRhKGFsbFRhYmxlcywgZnVsbEpzb24udGFibGVMaXN0W2ldLnRhYmxlSWQpO1xuXG4gICAgICAgICAgICBmdWxsSnNvbi50YWJsZUxpc3RbaV0udGFibGVEYXRhID0gc2luZ2xlVGFibGVEYXRhO1xuICAgICAgICAgICAgZnVsbEpzb24udGFibGVMaXN0W2ldLnRhYmxlTmFtZSA9IHNpbmdsZVRhYmxlRGF0YS50YWJsZU5hbWU7XG4gICAgICAgICAgICBmdWxsSnNvbi50YWJsZUxpc3RbaV0udGFibGVDYXB0aW9uID0gc2luZ2xlVGFibGVEYXRhLnRhYmxlQ2FwdGlvbjtcbiAgICAgICAgICAgIGZ1bGxKc29uLnRhYmxlTGlzdFtpXS50YWJsZURpc3BsYXlUZXh0ID0gc2luZ2xlVGFibGVEYXRhLmRpc3BsYXlUZXh0O1xuXG4gICAgICAgICAgICB2YXIgc2luZ2xlVGFibGVGaWVsZHNEYXRhID0gX3NlbGYuZ2V0U2luZ2xlVGFibGVGaWVsZHNEYXRhKGFsbEZpZWxkcywgZnVsbEpzb24udGFibGVMaXN0W2ldLnRhYmxlSWQpO1xuXG4gICAgICAgICAgICBmdWxsSnNvbi50YWJsZUxpc3RbaV0uZmllbGRzID0gc2luZ2xlVGFibGVGaWVsZHNEYXRhO1xuICAgICAgICAgICAgZnVsbEpzb24udGFibGVMaXN0W2ldLmtleSA9IGZ1bGxKc29uLnRhYmxlTGlzdFtpXS50YWJsZUlkO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF9zZWxmLmRyYXdPYmpJbkRpYWdyYW0oZnVsbEpzb24pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgZ2V0U2luZ2xlVGFibGVEYXRhOiBmdW5jdGlvbiBnZXRTaW5nbGVUYWJsZURhdGEoYWxsVGFibGVzLCB0YWJsZUlkKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsbFRhYmxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYWxsVGFibGVzW2ldLnRhYmxlSWQgPT0gdGFibGVJZCkge1xuICAgICAgICAgIGFsbFRhYmxlc1tpXS5kaXNwbGF5VGV4dCA9IGFsbFRhYmxlc1tpXS50YWJsZU5hbWUgKyBcIltcIiArIGFsbFRhYmxlc1tpXS50YWJsZUNhcHRpb24gKyBcIl1cIjtcbiAgICAgICAgICByZXR1cm4gYWxsVGFibGVzW2ldO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG4gICAgZ2V0U2luZ2xlVGFibGVGaWVsZHNEYXRhOiBmdW5jdGlvbiBnZXRTaW5nbGVUYWJsZUZpZWxkc0RhdGEoYWxsRmllbGRzLCB0YWJsZUlkKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gW107XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxsRmllbGRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChhbGxGaWVsZHNbaV0uZmllbGRUYWJsZUlkID09IHRhYmxlSWQpIHtcbiAgICAgICAgICBhbGxGaWVsZHNbaV0uZGlzcGxheVRleHQgPSBhbGxGaWVsZHNbaV0uZmllbGROYW1lICsgXCJbXCIgKyBhbGxGaWVsZHNbaV0uZmllbGRDYXB0aW9uICsgXCJdXCI7XG4gICAgICAgICAgcmVzdWx0LnB1c2godGhpcy5yZW5kZXJlckZpZWxkU3R5bGUoYWxsRmllbGRzW2ldKSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIHJlbmRlcmVyRmllbGRTdHlsZTogZnVuY3Rpb24gcmVuZGVyZXJGaWVsZFN0eWxlKGZpZWxkKSB7XG4gICAgICBpZiAoZmllbGQuZmllbGRJc1BrID09IFwi5pivXCIpIHtcbiAgICAgICAgZmllbGQuY29sb3IgPSB0aGlzLmdldEtleUZpZWxkQnJ1c2goKTtcbiAgICAgICAgZmllbGQuZmlndXJlID0gXCJEZWNpc2lvblwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZmllbGQuY29sb3IgPSB0aGlzLmdldE5vckZpZWxkQnJ1c2goKTtcbiAgICAgICAgZmllbGQuZmlndXJlID0gXCJDdWJlMVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmllbGQ7XG4gICAgfSxcbiAgICBnZXRLZXlGaWVsZEJydXNoOiBmdW5jdGlvbiBnZXRLZXlGaWVsZEJydXNoKCkge1xuICAgICAgcmV0dXJuIGdvLkdyYXBoT2JqZWN0Lm1ha2UoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMDogXCJyZ2IoMjU0LCAyMjEsIDUwKVwiLFxuICAgICAgICAxOiBcInJnYigyNTQsIDE4MiwgNTApXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0Tm9yRmllbGRCcnVzaDogZnVuY3Rpb24gZ2V0Tm9yRmllbGRCcnVzaCgpIHtcbiAgICAgIHJldHVybiBnby5HcmFwaE9iamVjdC5tYWtlKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1MCwgMTUwLCAyNTApXCIsXG4gICAgICAgIDAuNTogXCJyZ2IoODYsIDg2LCAxODYpXCIsXG4gICAgICAgIDE6IFwicmdiKDg2LCA4NiwgMTg2KVwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldERhdGFKc29uOiBmdW5jdGlvbiBnZXREYXRhSnNvbigpIHtcbiAgICAgIHZhciBkYXRhSnNvbiA9IHtcbiAgICAgICAgdGFibGVMaXN0OiBbXSxcbiAgICAgICAgbGluZUxpc3Q6IFtdXG4gICAgICB9O1xuICAgICAgdGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbS5ub2Rlcy5lYWNoKGZ1bmN0aW9uIChwYXJ0KSB7XG4gICAgICAgIGlmIChwYXJ0IGluc3RhbmNlb2YgZ28uTm9kZSkge1xuICAgICAgICAgIGRhdGFKc29uLnRhYmxlTGlzdC5wdXNoKHtcbiAgICAgICAgICAgIHRhYmxlSWQ6IHBhcnQuZGF0YS50YWJsZUlkLFxuICAgICAgICAgICAgbG9jOiBwYXJ0LmxvY2F0aW9uLnggKyBcIiBcIiArIHBhcnQubG9jYXRpb24ueVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHBhcnQgaW5zdGFuY2VvZiBnby5MaW5rKSB7XG4gICAgICAgICAgYWxlcnQoXCJsaW5lXCIpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubGlua3MuZWFjaChmdW5jdGlvbiAocGFydCkge1xuICAgICAgICBpZiAocGFydCBpbnN0YW5jZW9mIGdvLkxpbmspIHtcbiAgICAgICAgICBkYXRhSnNvbi5saW5lTGlzdC5wdXNoKHtcbiAgICAgICAgICAgIGxpbmVJZDogcGFydC5kYXRhLmxpbmVJZCxcbiAgICAgICAgICAgIGZyb206IHBhcnQuZGF0YS5mcm9tLFxuICAgICAgICAgICAgdG86IHBhcnQuZGF0YS50byxcbiAgICAgICAgICAgIGZyb21UZXh0OiBwYXJ0LmRhdGEuZnJvbVRleHQsXG4gICAgICAgICAgICB0b1RleHQ6IHBhcnQuZGF0YS50b1RleHRcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZGF0YUpzb247XG4gICAgfSxcbiAgICBzZXREYXRhSnNvbjogZnVuY3Rpb24gc2V0RGF0YUpzb24oanNvbikge1xuICAgICAgdGhpcy5mb3JtYXRKc29uID0ganNvbjtcbiAgICB9LFxuICAgIGdldERpYWdyYW1Kc29uOiBmdW5jdGlvbiBnZXREaWFncmFtSnNvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLnRvSnNvbigpO1xuICAgIH0sXG4gICAgYWxlcnREYXRhSnNvbjogZnVuY3Rpb24gYWxlcnREYXRhSnNvbigpIHtcbiAgICAgIHZhciBkYXRhSnNvbiA9IHRoaXMuZ2V0RGF0YUpzb24oKTtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRKc29uQ29kZShkYXRhSnNvbik7XG4gICAgfSxcbiAgICBhbGVydERpYWdyYW1Kc29uOiBmdW5jdGlvbiBhbGVydERpYWdyYW1Kc29uKCkge1xuICAgICAgdmFyIGRpYWdyYW1Kc29uID0gdGhpcy5nZXREaWFncmFtSnNvbigpO1xuICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydEpzb25Db2RlKGRpYWdyYW1Kc29uKTtcbiAgICB9LFxuICAgIHRhYmxlSXNFeGlzdEluRGlhZ3JhbTogZnVuY3Rpb24gdGFibGVJc0V4aXN0SW5EaWFncmFtKHRhYmxlSWQpIHtcbiAgICAgIHZhciByZXN1bHQgPSBmYWxzZTtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubm9kZXMuZWFjaChmdW5jdGlvbiAocGFydCkge1xuICAgICAgICBpZiAocGFydCBpbnN0YW5jZW9mIGdvLk5vZGUpIHtcbiAgICAgICAgICBpZiAocGFydC5kYXRhLnRhYmxlSWQgPT0gdGFibGVJZCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIGRvd25Mb2FkTW9kZWxQTkc6IGZ1bmN0aW9uIGRvd25Mb2FkTW9kZWxQTkcoKSB7XG4gICAgICBmdW5jdGlvbiBteUNhbGxiYWNrKGJsb2IpIHtcbiAgICAgICAgdmFyIHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuICAgICAgICB2YXIgZmlsZW5hbWUgPSBcIm15QmxvYkZpbGUxLnBuZ1wiO1xuICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuICAgICAgICBhLnN0eWxlID0gXCJkaXNwbGF5OiBub25lXCI7XG4gICAgICAgIGEuaHJlZiA9IHVybDtcbiAgICAgICAgYS5kb3dubG9hZCA9IGZpbGVuYW1lO1xuXG4gICAgICAgIGlmICh3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZUJsb2IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHdpbmRvdy5uYXZpZ2F0b3IubXNTYXZlQmxvYihibG9iLCBmaWxlbmFtZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTtcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBhLmNsaWNrKCk7XG4gICAgICAgICAgd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcbiAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdmFyIGJsb2IgPSB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm1ha2VJbWFnZURhdGEoe1xuICAgICAgICBiYWNrZ3JvdW5kOiBcIndoaXRlXCIsXG4gICAgICAgIHJldHVyblR5cGU6IFwiYmxvYlwiLFxuICAgICAgICBzY2FsZTogMSxcbiAgICAgICAgY2FsbGJhY2s6IG15Q2FsbGJhY2tcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiByZWY9XFxcInJlbGF0aW9uQ29udGVudE91dGVyV3JhcFxcXCIgY2xhc3M9XFxcInRhYmxlLXJlbGF0aW9uLWNvbnRlbnQtb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ0YWJsZS1yZWxhdGlvbi1jb250ZW50LWhlYWRlci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ0YWJsZS1yZWxhdGlvbi1kZXNjLW91dGVyLXdyYXBcXFwiIHYtaWY9XFxcImRpc3BsYXlEZXNjXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwidGFibGUtcmVsYXRpb24tZGVzY1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1OTA3XFx1NkNFOFxcdUZGMUF7e3JlbGF0aW9uLnJlbGF0aW9uRGVzY319XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInRhYmxlLXJlbGF0aW9uLW9wLWJ1dHRvbnMtb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInRhYmxlLXJlbGF0aW9uLW9wLWJ1dHRvbnMtaW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwIHNoYXBlPVxcXCJjaXJjbGVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcInNob3dTZWxlY3RUYWJsZURpYWxvZ1xcXCIgdHlwZT1cXFwic3VjY2Vzc1xcXCIgaWNvbj1cXFwibWQtYWRkXFxcIj48L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcInNob3dTZWxlY3RGaWVsZENvbm5lY3REaWFsb2dcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcImxvZ28tc3RlYW1cXFwiPlxcdThGREVcXHU2M0E1PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gZGlzYWJsZWQgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtcmV0dXJuLWxlZnRcXFwiPlxcdTVGMTVcXHU1MTY1PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gZGlzYWJsZWQgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtcXItc2Nhbm5lclxcXCI+XFx1NTE2OFxcdTVDNEY8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBkaXNhYmxlZCB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJtZC1naXQtY29tcGFyZVxcXCI+XFx1NTM4NlxcdTUzRjI8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImFsZXJ0RGF0YUpzb25cXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLWNvZGVcXFwiPlxcdTY1NzBcXHU2MzZFSnNvbjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiYWxlcnREaWFncmFtSnNvblxcXCIgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtY29kZS13b3JraW5nXFxcIj5cXHU1NkZFXFx1NUY2Mkpzb248L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImRvd25Mb2FkTW9kZWxQTkdcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLWNsb3VkLWRvd25sb2FkXFxcIj5cXHU0RTBCXFx1OEY3RDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwic2F2ZU1vZGVsVG9TZXJ2ZXJcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcImxvZ28taW5zdGFncmFtXFxcIj5cXHU0RkREXFx1NUI1ODwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiZGVsZXRlU2VsZWN0aW9uXFxcIiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJtZC1jbG9zZVxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwidGFibGUtcmVsYXRpb24tY29udGVudC13cmFwXFxcIiBpZD1cXFwidGFibGVSZWxhdGlvbkRpYWdyYW1EaXZcXFwiPjwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPHNlbGVjdC1zaW5nbGUtdGFibGUtZGlhbG9nIHJlZj1cXFwic2VsZWN0U2luZ2xlVGFibGVEaWFsb2dcXFwiIEBvbi1zZWxlY3RlZC10YWJsZT1cXFwiYWRkVGFibGVUb0RpYWdyYW1cXFwiPjwvc2VsZWN0LXNpbmdsZS10YWJsZS1kaWFsb2c+XFxuICAgICAgICAgICAgICAgICAgICA8dGFibGUtcmVsYXRpb24tY29ubmVjdC10d28tdGFibGUtZGlhbG9nIHJlZj1cXFwidGFibGVSZWxhdGlvbkNvbm5lY3RUd29UYWJsZURpYWxvZ1xcXCIgQG9uLWNvbXBsZXRlZC1jb25uZWN0PVxcXCJjb25uZWN0U2VsZWN0aW9uTm9kZVxcXCI+PC90YWJsZS1yZWxhdGlvbi1jb25uZWN0LXR3by10YWJsZS1kaWFsb2c+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImRiLXRhYmxlLXJlbGF0aW9uLWNvbXBcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXRUYWJsZXNEYXRhVXJsOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGUvR2V0VGFibGVzRm9yWlRyZWVOb2RlTGlzdFwiLFxuICAgICAgICBnZXRUYWJsZUZpZWxkc1VybDogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlL0dldFRhYmxlRmllbGRzQnlUYWJsZUlkXCJcbiAgICAgIH0sXG4gICAgICByZWxhdGlvblRhYmxlVHJlZToge1xuICAgICAgICB0cmVlT2JqOiBudWxsLFxuICAgICAgICB0YWJsZVRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBhcmVudElkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgdmFyIF9zZWxmID0gd2luZG93Ll9kYnRhYmxlcmVsYXRpb25jb21wO1xuXG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkUmVsYXRpb25UYWJsZU5vZGUodHJlZU5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdGFibGVUcmVlUm9vdERhdGE6IHtcbiAgICAgICAgICBpZDogXCItMVwiLFxuICAgICAgICAgIHRleHQ6IFwi5pWw5o2u5YWz6IGUXCIsXG4gICAgICAgICAgcGFyZW50SWQ6IFwiXCIsXG4gICAgICAgICAgbm9kZVR5cGVOYW1lOiBcIuagueiKgueCuVwiLFxuICAgICAgICAgIGljb246IFwiLi4vLi4vLi4vVGhlbWVzL1BuZzE2WDE2L2NvaW5zX2FkZC5wbmdcIixcbiAgICAgICAgICBfbm9kZUV4VHlwZTogXCJyb290XCIsXG4gICAgICAgICAgdGFibGVJZDogXCItMVwiXG4gICAgICAgIH0sXG4gICAgICAgIGN1cnJlbnRTZWxlY3RlZE5vZGU6IG51bGxcbiAgICAgIH0sXG4gICAgICByZWxhdGlvblRhYmxlRWRpdG9yVmlldzoge1xuICAgICAgICBpc1Nob3dUYWJsZUVkaXREZXRhaWw6IGZhbHNlLFxuICAgICAgICBpc1N1YkVkaXRUcjogZmFsc2UsXG4gICAgICAgIGlzTWFpbkVkaXRUcjogZmFsc2UsXG4gICAgICAgIHNlbFBLRGF0YTogW10sXG4gICAgICAgIHNlbFNlbGZLZXlEYXRhOiBbXSxcbiAgICAgICAgc2VsRm9yZWlnbktleURhdGE6IFtdXG4gICAgICB9LFxuICAgICAgZW1wdHlFZGl0b3JEYXRhOiB7XG4gICAgICAgIGlkOiBcIlwiLFxuICAgICAgICBwYXJlbnRJZDogXCJcIixcbiAgICAgICAgc2luZ2xlTmFtZTogXCJcIixcbiAgICAgICAgcGtGaWVsZE5hbWU6IFwiXCIsXG4gICAgICAgIGRlc2M6IFwiXCIsXG4gICAgICAgIHNlbGZLZXlGaWVsZE5hbWU6IFwiXCIsXG4gICAgICAgIG91dGVyS2V5RmllbGROYW1lOiBcIlwiLFxuICAgICAgICByZWxhdGlvblR5cGU6IFwiMVRvTlwiLFxuICAgICAgICBpc1NhdmU6IFwidHJ1ZVwiLFxuICAgICAgICBjb25kaXRpb246IFwiXCIsXG4gICAgICAgIHRhYmxlSWQ6IFwiXCIsXG4gICAgICAgIHRhYmxlTmFtZTogXCJcIixcbiAgICAgICAgdGFibGVDYXB0aW9uOiBcIlwiXG4gICAgICB9LFxuICAgICAgY3VycmVudEVkaXRvckRhdGE6IHtcbiAgICAgICAgaWQ6IFwiXCIsXG4gICAgICAgIHBhcmVudElkOiBcIlwiLFxuICAgICAgICBzaW5nbGVOYW1lOiBcIlwiLFxuICAgICAgICBwa0ZpZWxkTmFtZTogXCJcIixcbiAgICAgICAgZGVzYzogXCJcIixcbiAgICAgICAgc2VsZktleUZpZWxkTmFtZTogXCJcIixcbiAgICAgICAgb3V0ZXJLZXlGaWVsZE5hbWU6IFwiXCIsXG4gICAgICAgIHJlbGF0aW9uVHlwZTogXCIxVG9OXCIsXG4gICAgICAgIGlzU2F2ZTogXCJ0cnVlXCIsXG4gICAgICAgIGNvbmRpdGlvbjogXCJcIixcbiAgICAgICAgdGFibGVJZDogXCJcIixcbiAgICAgICAgdGFibGVOYW1lOiBcIlwiLFxuICAgICAgICB0YWJsZUNhcHRpb246IFwiXCJcbiAgICAgIH0sXG4gICAgICBzZWxlY3RUYWJsZVRyZWU6IHtcbiAgICAgICAgb2xkU2VsZWN0ZWREQkxpbmtJZDogXCJKQnVpbGQ0ZExvY2F0aW9uREJMaW5rXCIsXG4gICAgICAgIGRpc2FibGVkREJMaW5rOiBmYWxzZSxcbiAgICAgICAgZGJMaW5rRW50aXRpZXM6IFtdLFxuICAgICAgICB0YWJsZVRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRhYmxlVHJlZVNldHRpbmc6IHtcbiAgICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBkYmxDbGlja0V4cGFuZDogZmFsc2UsXG4gICAgICAgICAgICBzaG93TGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDc3M6IHtcbiAgICAgICAgICAgICAgJ2NvbG9yJzogJ2JsYWNrJyxcbiAgICAgICAgICAgICAgJ2ZvbnQtd2VpZ2h0JzogJ25vcm1hbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoZWNrOiB7XG4gICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICBjaGtTdHlsZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBhcmVudElkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgaWYgKHRyZWVOb2RlLm5vZGVUeXBlTmFtZSA9PSBcIlRhYmxlXCIpIHtcbiAgICAgICAgICAgICAgICB2YXIgX3NlbGYgPSB3aW5kb3cuX2RidGFibGVyZWxhdGlvbmNvbXA7XG4gICAgICAgICAgICAgICAgJChcIiNkaXZTZWxlY3RUYWJsZVwiKS5kaWFsb2coXCJjbG9zZVwiKTtcblxuICAgICAgICAgICAgICAgIF9zZWxmLmFkZFRhYmxlVG9SZWxhdGlvblRhYmxlVHJlZSh0cmVlTm9kZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRhYmxlVHJlZURhdGE6IG51bGwsXG4gICAgICAgIGFsbFRhYmxlVHJlZURhdGE6IG51bGwsXG4gICAgICAgIHNlbGVjdGVkVGFibGVOYW1lOiBcIuaXoFwiXG4gICAgICB9LFxuICAgICAgdGVtcERhdGFTdG9yZToge30sXG4gICAgICByZXN1bHREYXRhOiBbXSxcbiAgICAgIHRyZWVOb2RlU2V0dGluZzoge1xuICAgICAgICBNYWluVGFibGVOb2RlSW1nOiBcIi4uLy4uLy4uL1RoZW1lcy9QbmcxNlgxNi9wYWdlX2tleS5wbmdcIixcbiAgICAgICAgU3ViVGFibGVOb2RlSW1nOiBcIi4uLy4uLy4uL1RoZW1lcy9QbmcxNlgxNi9wYWdlX3JlZnJlc2gucG5nXCJcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuZ2V0VGFibGVzQW5kQmluZE9sZFNlbGVjdGVkKCk7XG4gICAgdGhpcy5yZWxhdGlvblRhYmxlVHJlZS50cmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoXCIjZGF0YVJlbGF0aW9uWlRyZWVVTFwiKSwgdGhpcy5yZWxhdGlvblRhYmxlVHJlZS50YWJsZVRyZWVTZXR0aW5nLCB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRhYmxlVHJlZVJvb3REYXRhKTtcbiAgICB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZSA9IHRoaXMucmVsYXRpb25UYWJsZVRyZWUudHJlZU9iai5nZXROb2RlQnlQYXJhbShcImlkXCIsIFwiLTFcIik7XG4gICAgd2luZG93Ll9kYnRhYmxlcmVsYXRpb25jb21wID0gdGhpcztcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBjdXJyZW50RWRpdG9yRGF0YToge1xuICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcih2YWwsIG9sZFZhbCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmVzdWx0RGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmICh0aGlzLnJlc3VsdERhdGFbaV0uaWQgPT0gdmFsLmlkKSB7XG4gICAgICAgICAgICB0aGlzLnJlc3VsdEl0ZW1Db3B5RWRpdEVuYWJsZVZhbHVlKHRoaXMucmVzdWx0RGF0YVtpXSwgdmFsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBkZWVwOiB0cnVlXG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgcmVzdWx0SXRlbUNvcHlFZGl0RW5hYmxlVmFsdWU6IGZ1bmN0aW9uIHJlc3VsdEl0ZW1Db3B5RWRpdEVuYWJsZVZhbHVlKHRvT2JqLCBmcm9tT2JqKSB7XG4gICAgICB0b09iai5zaW5nbGVOYW1lID0gZnJvbU9iai5zaW5nbGVOYW1lO1xuICAgICAgdG9PYmoucGtGaWVsZE5hbWUgPSBmcm9tT2JqLnBrRmllbGROYW1lO1xuICAgICAgdG9PYmouZGVzYyA9IGZyb21PYmouZGVzYztcbiAgICAgIHRvT2JqLnNlbGZLZXlGaWVsZE5hbWUgPSBmcm9tT2JqLnNlbGZLZXlGaWVsZE5hbWU7XG4gICAgICB0b09iai5vdXRlcktleUZpZWxkTmFtZSA9IGZyb21PYmoub3V0ZXJLZXlGaWVsZE5hbWU7XG4gICAgICB0b09iai5yZWxhdGlvblR5cGUgPSBmcm9tT2JqLnJlbGF0aW9uVHlwZTtcbiAgICAgIHRvT2JqLmlzU2F2ZSA9IGZyb21PYmouaXNTYXZlO1xuICAgICAgdG9PYmouY29uZGl0aW9uID0gZnJvbU9iai5jb25kaXRpb247XG4gICAgfSxcbiAgICBnZXRUYWJsZUZpZWxkc0J5VGFibGVJZDogZnVuY3Rpb24gZ2V0VGFibGVGaWVsZHNCeVRhYmxlSWQodGFibGVJZCkge1xuICAgICAgaWYgKHRhYmxlSWQgPT0gXCItMVwiKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy50ZW1wRGF0YVN0b3JlW1widGFibGVGaWVsZF9cIiArIHRhYmxlSWRdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRlbXBEYXRhU3RvcmVbXCJ0YWJsZUZpZWxkX1wiICsgdGFibGVJZF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICAgIEFqYXhVdGlsaXR5LlBvc3RTeW5jKHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVGaWVsZHNVcmwsIHtcbiAgICAgICAgICB0YWJsZUlkOiB0YWJsZUlkXG4gICAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgIF9zZWxmLnRlbXBEYXRhU3RvcmVbXCJ0YWJsZUZpZWxkX1wiICsgdGFibGVJZF0gPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHRoaXMpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy50ZW1wRGF0YVN0b3JlW1widGFibGVGaWVsZF9cIiArIHRhYmxlSWRdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRlbXBEYXRhU3RvcmVbXCJ0YWJsZUZpZWxkX1wiICsgdGFibGVJZF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldEVtcHR5UmVzdWx0SXRlbTogZnVuY3Rpb24gZ2V0RW1wdHlSZXN1bHRJdGVtKCkge1xuICAgICAgcmV0dXJuIEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKHRoaXMuZW1wdHlFZGl0b3JEYXRhKTtcbiAgICB9LFxuICAgIGdldEV4aXN0UmVzdWx0SXRlbTogZnVuY3Rpb24gZ2V0RXhpc3RSZXN1bHRJdGVtKGlkKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmVzdWx0RGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAodGhpcy5yZXN1bHREYXRhW2ldLmlkID09IGlkKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0RGF0YVtpXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIGdldFRhYmxlc0FuZEJpbmRPbGRTZWxlY3RlZDogZnVuY3Rpb24gZ2V0VGFibGVzQW5kQmluZE9sZFNlbGVjdGVkKCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFRhYmxlc0RhdGFVcmwsIHt9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIF9zZWxmLnNlbGVjdFRhYmxlVHJlZS5kYkxpbmtFbnRpdGllcyA9IHJlc3VsdC5leEtWRGF0YS5kYkxpbmtFbnRpdHlMaXN0O1xuICAgICAgICAgIF9zZWxmLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhID0gcmVzdWx0LmRhdGE7XG5cbiAgICAgICAgICBfc2VsZi5iaW5kU2VsZWN0VGFibGVUcmVlKHRydWUpO1xuXG4gICAgICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKF9zZWxmLnNlbGVjdFRhYmxlVHJlZS50YWJsZVRyZWVPYmosIF9zZWxmLiRyZWZzLnR4dF90YWJsZV9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBiaW5kU2VsZWN0VGFibGVUcmVlOiBmdW5jdGlvbiBiaW5kU2VsZWN0VGFibGVUcmVlKGlzR2V0Q29va2llT2xkU2VsZWN0ZWQpIHtcbiAgICAgIHZhciBvbGRTZWxlY3RlZERCTGlua0lkID0gQ29va2llVXRpbGl0eS5HZXRDb29raWUoXCJEQlRSQ0RCTElOS0lEXCIpO1xuXG4gICAgICBpZiAob2xkU2VsZWN0ZWREQkxpbmtJZCAmJiBpc0dldENvb2tpZU9sZFNlbGVjdGVkKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0VGFibGVUcmVlLm9sZFNlbGVjdGVkREJMaW5rSWQgPSBvbGRTZWxlY3RlZERCTGlua0lkO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb2xkU2VsZWN0ZWREQkxpbmtJZCA9IHRoaXMuc2VsZWN0VGFibGVUcmVlLm9sZFNlbGVjdGVkREJMaW5rSWQ7XG4gICAgICB9XG5cbiAgICAgIHZhciBiaW5kVG9UcmVlRGF0YSA9IFtdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuc2VsZWN0VGFibGVUcmVlLmFsbFRhYmxlVHJlZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKG9sZFNlbGVjdGVkREJMaW5rSWQgPT0gdGhpcy5zZWxlY3RUYWJsZVRyZWUuYWxsVGFibGVUcmVlRGF0YVtpXS5vdXRlcklkKSB7XG4gICAgICAgICAgYmluZFRvVHJlZURhdGEucHVzaCh0aGlzLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS50YWJsZVRyZWVEYXRhID0gYmluZFRvVHJlZURhdGE7XG4gICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS50YWJsZVRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJChcIiNzZWxlY3RUYWJsZVpUcmVlVUxcIiksIHRoaXMuc2VsZWN0VGFibGVUcmVlLnRhYmxlVHJlZVNldHRpbmcsIHRoaXMuc2VsZWN0VGFibGVUcmVlLnRhYmxlVHJlZURhdGEpO1xuICAgICAgdGhpcy5zZWxlY3RUYWJsZVRyZWUudGFibGVUcmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcbiAgICB9LFxuICAgIGNoYW5nZURCTGluazogZnVuY3Rpb24gY2hhbmdlREJMaW5rKGRiTGlua0lkKSB7XG4gICAgICBDb29raWVVdGlsaXR5LlNldENvb2tpZTFNb250aChcIkRCVFJDREJMSU5LSURcIiwgZGJMaW5rSWQpO1xuICAgICAgdGhpcy5iaW5kU2VsZWN0VGFibGVUcmVlKHRydWUpO1xuICAgIH0sXG4gICAgZ2V0TWFpblRhYmxlREJMaW5rSWQ6IGZ1bmN0aW9uIGdldE1haW5UYWJsZURCTGlua0lkKCkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhW2ldLmlkID09IHRoaXMuZ2V0TWFpblRhYmxlSWQoKSkge1xuICAgICAgICAgIHJldHVybiB0aGlzLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhW2ldLm91dGVySWQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfSxcbiAgICBkZWxldGVTZWxlY3RlZFJlbGF0aW9uVHJlZU5vZGU6IGZ1bmN0aW9uIGRlbGV0ZVNlbGVjdGVkUmVsYXRpb25UcmVlTm9kZSgpIHtcbiAgICAgIGlmICh0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzU2VsZWN0ZWRSb290UmVsYXRpb25UYWJsZU5vZGUoKSkge1xuICAgICAgICAgIGlmICghdGhpcy5yZWxhdGlvblRhYmxlVHJlZS5jdXJyZW50U2VsZWN0ZWROb2RlLmlzUGFyZW50KSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucmVzdWx0RGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICBpZiAodGhpcy5yZXN1bHREYXRhW2ldLmlkID09IHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZS5pZCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0RGF0YS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5yZXN1bHRJdGVtQ29weUVkaXRFbmFibGVWYWx1ZSh0aGlzLmN1cnJlbnRFZGl0b3JEYXRhLCB0aGlzLmVtcHR5RWRpdG9yRGF0YSk7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRFZGl0b3JEYXRhLmlkID0gXCJcIjtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudEVkaXRvckRhdGEucGFyZW50SWQgPSBcIlwiO1xuICAgICAgICAgICAgdGhpcy4kcmVmcy5zcWxHZW5lcmFsRGVzaWduQ29tcC5zZXRWYWx1ZShcIlwiKTtcbiAgICAgICAgICAgIHRoaXMucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsUEtEYXRhID0gW107XG4gICAgICAgICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbFNlbGZLZXlEYXRhID0gW107XG4gICAgICAgICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbEZvcmVpZ25LZXlEYXRhID0gW107XG4gICAgICAgICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU2hvd1RhYmxlRWRpdERldGFpbCA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5yZWxhdGlvblRhYmxlVHJlZS50cmVlT2JqLnJlbW92ZU5vZGUodGhpcy5yZWxhdGlvblRhYmxlVHJlZS5jdXJyZW50U2VsZWN0ZWROb2RlLCBmYWxzZSk7XG4gICAgICAgICAgICB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUgPSBudWxsO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuS4jeiDveWIoOmZpOeItuiKgueCuSFcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi5LiN6IO95Yig6Zmk5qC56IqC54K5IVwiKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLor7fpgInmi6nopoHliKDpmaTnmoToioLngrkhXCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgYmVnaW5TZWxlY3RUYWJsZVRvUmVsYXRpb25UYWJsZTogZnVuY3Rpb24gYmVnaW5TZWxlY3RUYWJsZVRvUmVsYXRpb25UYWJsZSgpIHtcbiAgICAgIGlmICh0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUpIHtcbiAgICAgICAgJChcIiNkaXZTZWxlY3RUYWJsZVwiKS5kaWFsb2coe1xuICAgICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICAgIGhlaWdodDogNjAwLFxuICAgICAgICAgIHdpZHRoOiA3MDBcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBtYWluVGFibGVEQkxpbmtJZCA9IHRoaXMuZ2V0TWFpblRhYmxlREJMaW5rSWQoKTtcblxuICAgICAgICBpZiAobWFpblRhYmxlREJMaW5rSWQpIHtcbiAgICAgICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS5vbGRTZWxlY3RlZERCTGlua0lkID0gbWFpblRhYmxlREJMaW5rSWQ7XG4gICAgICAgICAgdGhpcy5iaW5kU2VsZWN0VGFibGVUcmVlKGZhbHNlKTtcbiAgICAgICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS5kaXNhYmxlZERCTGluayA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5zZWxlY3RUYWJsZVRyZWUuZGlzYWJsZWREQkxpbmsgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIFwi6YCJ5oup5LiA5Liq54i26IqC54K5IVwiLCBudWxsKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGFwcGVuZE1haW5UYWJsZU5vZGVQcm9wOiBmdW5jdGlvbiBhcHBlbmRNYWluVGFibGVOb2RlUHJvcChub2RlKSB7XG4gICAgICBub2RlLl9ub2RlRXhUeXBlID0gXCJNYWluTm9kZVwiO1xuICAgICAgbm9kZS5pY29uID0gdGhpcy50cmVlTm9kZVNldHRpbmcuTWFpblRhYmxlTm9kZUltZztcbiAgICB9LFxuICAgIGFwcGVuZFN1YlRhYmxlTm9kZVByb3A6IGZ1bmN0aW9uIGFwcGVuZFN1YlRhYmxlTm9kZVByb3Aobm9kZSkge1xuICAgICAgbm9kZS5fbm9kZUV4VHlwZSA9IFwiU3ViTm9kZVwiO1xuICAgICAgbm9kZS5pY29uID0gdGhpcy50cmVlTm9kZVNldHRpbmcuU3ViVGFibGVOb2RlSW1nO1xuICAgIH0sXG4gICAgYnVpbGRSZWxhdGlvblRhYmxlTm9kZTogZnVuY3Rpb24gYnVpbGRSZWxhdGlvblRhYmxlTm9kZShzb3VyY2VOb2RlLCB0cmVlTm9kZUlkKSB7XG4gICAgICBpZiAodGhpcy5yZWxhdGlvblRhYmxlVHJlZS5jdXJyZW50U2VsZWN0ZWROb2RlLl9ub2RlRXhUeXBlID09IFwicm9vdFwiKSB7XG4gICAgICAgIHRoaXMuYXBwZW5kTWFpblRhYmxlTm9kZVByb3Aoc291cmNlTm9kZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmFwcGVuZFN1YlRhYmxlTm9kZVByb3Aoc291cmNlTm9kZSk7XG4gICAgICB9XG5cbiAgICAgIHNvdXJjZU5vZGUudGFibGVJZCA9IHNvdXJjZU5vZGUuaWQ7XG5cbiAgICAgIGlmICh0cmVlTm9kZUlkKSB7XG4gICAgICAgIHNvdXJjZU5vZGUuaWQgPSB0cmVlTm9kZUlkO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc291cmNlTm9kZS5pZCA9IFN0cmluZ1V0aWxpdHkuR3VpZCgpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc291cmNlTm9kZTtcbiAgICB9LFxuICAgIGdldE1haW5SZWxhdGlvblRhYmxlTm9kZTogZnVuY3Rpb24gZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCkge1xuICAgICAgdmFyIG5vZGUgPSB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRyZWVPYmouZ2V0Tm9kZUJ5UGFyYW0oXCJfbm9kZUV4VHlwZVwiLCBcIk1haW5Ob2RlXCIpO1xuXG4gICAgICBpZiAobm9kZSkge1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBnZXRNYWluVGFibGVJZDogZnVuY3Rpb24gZ2V0TWFpblRhYmxlSWQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKSA/IHRoaXMuZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCkudGFibGVJZCA6IFwiXCI7XG4gICAgfSxcbiAgICBnZXRNYWluVGFibGVOYW1lOiBmdW5jdGlvbiBnZXRNYWluVGFibGVOYW1lKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCkgPyB0aGlzLmdldE1haW5SZWxhdGlvblRhYmxlTm9kZSgpLnZhbHVlIDogXCJcIjtcbiAgICB9LFxuICAgIGdldE1haW5UYWJsZUNhcHRpb246IGZ1bmN0aW9uIGdldE1haW5UYWJsZUNhcHRpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKSA/IHRoaXMuZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCkuYXR0cjEgOiBcIlwiO1xuICAgIH0sXG4gICAgaXNTZWxlY3RlZFJvb3RSZWxhdGlvblRhYmxlTm9kZTogZnVuY3Rpb24gaXNTZWxlY3RlZFJvb3RSZWxhdGlvblRhYmxlTm9kZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUuaWQgPT0gXCItMVwiO1xuICAgIH0sXG4gICAgaXNTZWxlY3RlZE1haW5SZWxhdGlvblRhYmxlTm9kZTogZnVuY3Rpb24gaXNTZWxlY3RlZE1haW5SZWxhdGlvblRhYmxlTm9kZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUuX25vZGVFeFR5cGUgPT0gXCJNYWluTm9kZVwiO1xuICAgIH0sXG4gICAgYWRkVGFibGVUb1JlbGF0aW9uVGFibGVUcmVlOiBmdW5jdGlvbiBhZGRUYWJsZVRvUmVsYXRpb25UYWJsZVRyZWUobmV3Tm9kZSkge1xuICAgICAgbmV3Tm9kZSA9IHRoaXMuYnVpbGRSZWxhdGlvblRhYmxlTm9kZShuZXdOb2RlKTtcbiAgICAgIHZhciB0ZW1wTm9kZSA9IHRoaXMuZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCk7XG5cbiAgICAgIGlmICh0ZW1wTm9kZSAhPSBudWxsKSB7XG4gICAgICAgIGlmICh0aGlzLmlzU2VsZWN0ZWRSb290UmVsYXRpb25UYWJsZU5vZGUoKSkge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCBcIuWPquWFgeiuuOWtmOWcqOS4gOS4quS4u+iusOW9lSFcIiwgbnVsbCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUudHJlZU9iai5hZGROb2Rlcyh0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUsIC0xLCBuZXdOb2RlLCBmYWxzZSk7XG4gICAgICB2YXIgbmV3UmVzdWx0SXRlbSA9IHRoaXMuZ2V0RW1wdHlSZXN1bHRJdGVtKCk7XG4gICAgICBuZXdSZXN1bHRJdGVtLmlkID0gbmV3Tm9kZS5pZDtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0ucGFyZW50SWQgPSB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUuaWQ7XG4gICAgICBuZXdSZXN1bHRJdGVtLnRhYmxlSWQgPSBuZXdOb2RlLnRhYmxlSWQ7XG4gICAgICBuZXdSZXN1bHRJdGVtLnRhYmxlTmFtZSA9IG5ld05vZGUudmFsdWU7XG4gICAgICBuZXdSZXN1bHRJdGVtLnRhYmxlQ2FwdGlvbiA9IG5ld05vZGUuYXR0cjE7XG4gICAgICBuZXdSZXN1bHRJdGVtLnRhYmxlQ29kZSA9IG5ld05vZGUuY29kZTtcbiAgICAgIHRoaXMucmVzdWx0RGF0YS5wdXNoKG5ld1Jlc3VsdEl0ZW0pO1xuICAgIH0sXG4gICAgc2VsZWN0ZWRSZWxhdGlvblRhYmxlTm9kZTogZnVuY3Rpb24gc2VsZWN0ZWRSZWxhdGlvblRhYmxlTm9kZShub2RlKSB7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUgPSBub2RlO1xuICAgICAgdGhpcy5yZWxhdGlvblRhYmxlRWRpdG9yVmlldy5pc1Nob3dUYWJsZUVkaXREZXRhaWwgPSAhdGhpcy5pc1NlbGVjdGVkUm9vdFJlbGF0aW9uVGFibGVOb2RlKCk7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzTWFpbkVkaXRUciA9IHRoaXMuaXNTZWxlY3RlZE1haW5SZWxhdGlvblRhYmxlTm9kZSgpO1xuICAgICAgdGhpcy5yZWxhdGlvblRhYmxlRWRpdG9yVmlldy5pc1N1YkVkaXRUciA9ICF0aGlzLmlzU2VsZWN0ZWRNYWluUmVsYXRpb25UYWJsZU5vZGUoKTtcblxuICAgICAgaWYgKHRoaXMuaXNTZWxlY3RlZFJvb3RSZWxhdGlvblRhYmxlTm9kZSgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5yZWxhdGlvblRhYmxlRWRpdG9yVmlldy5zZWxQS0RhdGEgPSB0aGlzLmdldFRhYmxlRmllbGRzQnlUYWJsZUlkKG5vZGUudGFibGVJZCkgIT0gbnVsbCA/IHRoaXMuZ2V0VGFibGVGaWVsZHNCeVRhYmxlSWQobm9kZS50YWJsZUlkKSA6IFtdO1xuICAgICAgdGhpcy5yZWxhdGlvblRhYmxlRWRpdG9yVmlldy5zZWxTZWxmS2V5RGF0YSA9IHRoaXMuZ2V0VGFibGVGaWVsZHNCeVRhYmxlSWQobm9kZS50YWJsZUlkKSAhPSBudWxsID8gdGhpcy5nZXRUYWJsZUZpZWxkc0J5VGFibGVJZChub2RlLnRhYmxlSWQpIDogW107XG4gICAgICB2YXIgcGFyZW50Tm9kZSA9IG5vZGUuZ2V0UGFyZW50Tm9kZSgpO1xuICAgICAgdGhpcy5yZWxhdGlvblRhYmxlRWRpdG9yVmlldy5zZWxGb3JlaWduS2V5RGF0YSA9IHRoaXMuZ2V0VGFibGVGaWVsZHNCeVRhYmxlSWQocGFyZW50Tm9kZS50YWJsZUlkKSAhPSBudWxsID8gdGhpcy5nZXRUYWJsZUZpZWxkc0J5VGFibGVJZChwYXJlbnROb2RlLnRhYmxlSWQpIDogW107XG4gICAgICB0aGlzLmN1cnJlbnRFZGl0b3JEYXRhLmlkID0gdGhpcy5yZWxhdGlvblRhYmxlVHJlZS5jdXJyZW50U2VsZWN0ZWROb2RlLmlkO1xuICAgICAgdGhpcy5jdXJyZW50RWRpdG9yRGF0YS5wYXJlbnRJZCA9IHBhcmVudE5vZGUuaWQ7XG4gICAgICB2YXIgZXhpc3RSZXN1bHRJdGVtID0gdGhpcy5nZXRFeGlzdFJlc3VsdEl0ZW0obm9kZS5pZCk7XG5cbiAgICAgIGlmIChleGlzdFJlc3VsdEl0ZW0gIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnJlc3VsdEl0ZW1Db3B5RWRpdEVuYWJsZVZhbHVlKHRoaXMuY3VycmVudEVkaXRvckRhdGEsIGV4aXN0UmVzdWx0SXRlbSk7XG5cbiAgICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3NlbGYuJHJlZnMuc3FsR2VuZXJhbERlc2lnbkNvbXAuc2V0VmFsdWUoX3NlbGYuY3VycmVudEVkaXRvckRhdGEuY29uZGl0aW9uKTtcblxuICAgICAgICAgIF9zZWxmLiRyZWZzLnNxbEdlbmVyYWxEZXNpZ25Db21wLnNldEFib3V0VGFibGVGaWVsZHMoX3NlbGYucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsU2VsZktleURhdGEsIF9zZWxmLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbEZvcmVpZ25LZXlEYXRhKTtcbiAgICAgICAgfSwgMzAwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFsZXJ0KFwi6YCa6L+HZ2V0RXhpc3RSZXN1bHRJdGVt6I635Y+W5LiN5Yiw5pWw5o2uIVwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldFJlc3VsdERhdGE6IGZ1bmN0aW9uIGdldFJlc3VsdERhdGEoKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZXN1bHREYXRhO1xuICAgIH0sXG4gICAgc2VyaWFsaXplUmVsYXRpb246IGZ1bmN0aW9uIHNlcmlhbGl6ZVJlbGF0aW9uKGlzRm9ybWF0KSB7XG4gICAgICBhbGVydChcInNlcmlhbGl6ZVJlbGF0aW9u5bey57uP5YGc55SoXCIpO1xuICAgICAgcmV0dXJuO1xuXG4gICAgICBpZiAoaXNGb3JtYXQpIHtcbiAgICAgICAgcmV0dXJuIEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZ0Zvcm1hdCh0aGlzLnJlc3VsdERhdGEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gSnNvblV0aWxpdHkuSnNvblRvU3RyaW5nKHRoaXMucmVzdWx0RGF0YSk7XG4gICAgfSxcbiAgICBkZXNlcmlhbGl6ZVJlbGF0aW9uOiBmdW5jdGlvbiBkZXNlcmlhbGl6ZVJlbGF0aW9uKGpzb25TdHJpbmcpIHtcbiAgICAgIGFsZXJ0KFwiZGVzZXJpYWxpemVSZWxhdGlvbuW3sue7j+WBnOeUqFwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9LFxuICAgIGdldFZhbHVlOiBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIHZhciByZXN1bHQgPSB7XG4gICAgICAgIG1haW5UYWJsZUlkOiB0aGlzLmdldE1haW5UYWJsZUlkKCksXG4gICAgICAgIG1haW5UYWJsZU5hbWU6IHRoaXMuZ2V0TWFpblRhYmxlTmFtZSgpLFxuICAgICAgICBtYWluVGFibGVDYXB0aW9uOiB0aGlzLmdldE1haW5UYWJsZUNhcHRpb24oKSxcbiAgICAgICAgcmVsYXRpb25EYXRhOiB0aGlzLnJlc3VsdERhdGFcbiAgICAgIH07XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gICAgc2V0VmFsdWU6IGZ1bmN0aW9uIHNldFZhbHVlKGpzb25TdHJpbmcpIHtcbiAgICAgIHZhciB0ZW1wRGF0YSA9IEpzb25VdGlsaXR5LlN0cmluZ1RvSnNvbihqc29uU3RyaW5nKTtcbiAgICAgIHRoaXMucmVzdWx0RGF0YSA9IHRlbXBEYXRhO1xuICAgICAgdmFyIHRyZWVOb2RlRGF0YSA9IG5ldyBBcnJheSgpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRlbXBEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciB0cmVlTm9kZSA9IHtcbiAgICAgICAgICBcInZhbHVlXCI6IHRlbXBEYXRhW2ldLnRhYmxlTmFtZSxcbiAgICAgICAgICBcImF0dHIxXCI6IHRlbXBEYXRhW2ldLnRhYmxlQ2FwdGlvbixcbiAgICAgICAgICBcInRleHRcIjogXCLjgJBcIiArIHRlbXBEYXRhW2ldLnRhYmxlQ29kZSArIFwi44CRXCIgKyB0ZW1wRGF0YVtpXS50YWJsZUNhcHRpb24gKyBcIuOAkFwiICsgdGVtcERhdGFbaV0udGFibGVOYW1lICsgXCLjgJFcIixcbiAgICAgICAgICBcImlkXCI6IHRlbXBEYXRhW2ldLmlkLFxuICAgICAgICAgIFwicGFyZW50SWRcIjogdGVtcERhdGFbaV0ucGFyZW50SWQsXG4gICAgICAgICAgXCJ0YWJsZUlkXCI6IHRlbXBEYXRhW2ldLnRhYmxlSWQsXG4gICAgICAgICAgXCJ0YWJsZU5hbWVcIjogdGVtcERhdGFbaV0udGFibGVOYW1lLFxuICAgICAgICAgIFwidGFibGVDYXB0aW9uXCI6IHRlbXBEYXRhW2ldLnRhYmxlQ2FwdGlvbixcbiAgICAgICAgICBcInRhYmxlQ29kZVwiOiB0ZW1wRGF0YVtpXS50YWJsZUNvZGVcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAodGVtcERhdGFbaV0ucGFyZW50SWQgPT0gXCItMVwiKSB7XG4gICAgICAgICAgdGhpcy5hcHBlbmRNYWluVGFibGVOb2RlUHJvcCh0cmVlTm9kZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5hcHBlbmRTdWJUYWJsZU5vZGVQcm9wKHRyZWVOb2RlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRyZWVOb2RlRGF0YS5wdXNoKHRyZWVOb2RlKTtcbiAgICAgIH1cblxuICAgICAgdHJlZU5vZGVEYXRhLnB1c2godGhpcy5yZWxhdGlvblRhYmxlVHJlZS50YWJsZVRyZWVSb290RGF0YSk7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJChcIiNkYXRhUmVsYXRpb25aVHJlZVVMXCIpLCB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRhYmxlVHJlZVNldHRpbmcsIHRyZWVOb2RlRGF0YSk7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgIH0sXG4gICAgYWxlcnRTZXJpYWxpemVSZWxhdGlvbjogZnVuY3Rpb24gYWxlcnRTZXJpYWxpemVSZWxhdGlvbigpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRKc29uQ29kZSh0aGlzLnJlc3VsdERhdGEpO1xuICAgIH0sXG4gICAgaW5wdXREZXNlcmlhbGl6ZVJlbGF0aW9uOiBmdW5jdGlvbiBpbnB1dERlc2VyaWFsaXplUmVsYXRpb24oKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LlByb21wdCh3aW5kb3csIHtcbiAgICAgICAgd2lkdGg6IDkwMCxcbiAgICAgICAgaGVpZ2h0OiA2MDBcbiAgICAgIH0sIERpYWxvZ1V0aWxpdHkuRGlhbG9nUHJvbXB0SWQsIFwi6K+36LS05YWl5pWw5o2u5YWz6IGUSnNvbuiuvue9ruWtl+espuS4slwiLCBmdW5jdGlvbiAoanNvblN0cmluZykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHdpbmRvdy5fZGJ0YWJsZXJlbGF0aW9uY29tcC5zZXRWYWx1ZShqc29uU3RyaW5nKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGFsZXJ0KFwi5Y+N5bqP5YiX5YyW5aSx6LSlOlwiICsgZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiBjbGFzcz1cXFwiZGItdGFibGUtcmVsYXRpb24tY29tcFxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXZpZGVyIG9yaWVudGF0aW9uPVxcXCJsZWZ0XFxcIiA6ZGFzaGVkPVxcXCJ0cnVlXFxcIiBzdHlsZT1cXFwiZm9udC1zaXplOiAxMnB4O21hcmdpbi10b3A6IDBweDttYXJnaW4tYm90dG9tOiAxMHB4XFxcIj5cXHU2NTcwXFx1NjM2RVxcdTUxNzNcXHU3Q0ZCXFx1NTE3M1xcdTgwNTRcXHU4QkJFXFx1N0Y2RTwvZGl2aWRlcj5cXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiZmxvYXQ6IGxlZnQ7d2lkdGg6IDM1MHB4O2hlaWdodDogMzMwcHg7Ym9yZGVyOiAjZGRkZGYxIDFweCBzb2xpZDtib3JkZXItcmFkaXVzOiA0cHg7cGFkZGluZzogMTBweCAxMHB4IDEwcHggMTBweDtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cCBzaGFwZT1cXFwiY2lyY2xlXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwic3VjY2Vzc1xcXCIgQGNsaWNrPVxcXCJiZWdpblNlbGVjdFRhYmxlVG9SZWxhdGlvblRhYmxlXFxcIj4mbmJzcDtcXHU2REZCXFx1NTJBMCZuYnNwOzwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiZGVsZXRlU2VsZWN0ZWRSZWxhdGlvblRyZWVOb2RlXFxcIj4mbmJzcDtcXHU1MjIwXFx1OTY2NCZuYnNwOzwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiYWxlcnRTZXJpYWxpemVSZWxhdGlvblxcXCI+XFx1NUU4RlxcdTUyMTdcXHU1MzE2PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJpbnB1dERlc2VyaWFsaXplUmVsYXRpb25cXFwiPlxcdTUzQ0RcXHU1RThGXFx1NTIxN1xcdTUzMTY8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbj5cXHU4QkY0XFx1NjYwRTwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgIDx1bCBpZD1cXFwiZGF0YVJlbGF0aW9uWlRyZWVVTFxcXCIgY2xhc3M9XFxcInp0cmVlXFxcIiBzdHlsZT1cXFwib3ZlcmZsb3cteDogaGlkZGVuXFxcIj48L3VsPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiZmxvYXQ6IHJpZ2h0O3dpZHRoOiA2MzBweDtoZWlnaHQ6IDMzMHB4O2JvcmRlcjogI2RkZGRmMSAxcHggc29saWQ7Ym9yZGVyLXJhZGl1czogNHB4O3BhZGRpbmc6IDEwcHggMTBweCAxMHB4IDEwcHg7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cXFwibGlnaHQtZ3JheS10YWJsZVxcXCIgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIHYtaWY9XFxcInJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU2hvd1RhYmxlRWRpdERldGFpbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTclXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMzMlXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTUlXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMzUlXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XFxcImxhYmVsXFxcIj5TaW5nbGVOYW1lXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiY3VycmVudEVkaXRvckRhdGEuc2luZ2xlTmFtZVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU2NzJDXFx1NTE3M1xcdTgwNTRcXHU0RTJEXFx1NzY4NFxcdTU1MkZcXHU0RTAwXFx1NTQwRFxcdTc5RjAsXFx1NTNFRlxcdTRFRTVcXHU0RTNBXFx1N0E3QVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XFxcImxhYmVsXFxcIj5QS0tleVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXNlbGVjdCBwbGFjZWhvbGRlcj1cXFwiXFx1OUVEOFxcdThCQTRcXHU0RjdGXFx1NzUyOElkXFx1NUI1N1xcdTZCQjVcXFwiIHYtbW9kZWw9XFxcImN1cnJlbnRFZGl0b3JEYXRhLnBrRmllbGROYW1lXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgc3R5bGU9XFxcIndpZHRoOjE5OXB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHYtZm9yPVxcXCJpdGVtIGluIHJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbFBLRGF0YVxcXCIgOnZhbHVlPVxcXCJpdGVtLmZpZWxkTmFtZVxcXCIgOmtleT1cXFwiaXRlbS5maWVsZE5hbWVcXFwiPnt7aXRlbS5maWVsZENhcHRpb259fTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLXNlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciB2LWlmPVxcXCJyZWxhdGlvblRhYmxlRWRpdG9yVmlldy5pc1N1YkVkaXRUclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XFxcImxhYmVsXFxcIj5cXHU2NTcwXFx1NjM2RVxcdTUxNzNcXHU3Q0ZCXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHYtbW9kZWw9XFxcImN1cnJlbnRFZGl0b3JEYXRhLnJlbGF0aW9uVHlwZVxcXCIgdHlwZT1cXFwiYnV0dG9uXFxcIiBzaXplPVxcXCJzbWFsbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiMVRvMVxcXCI+MToxPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCIxVG9OXFxcIj4xOk48L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcmFkaW8tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVxcXCJsYWJlbFxcXCI+XFx1NjYyRlxcdTU0MjZcXHU0RkREXFx1NUI1OFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpby1ncm91cCB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5pc1NhdmVcXFwiIHR5cGU9XFxcImJ1dHRvblxcXCIgc2l6ZT1cXFwic21hbGxcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcInRydWVcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcImZhbHNlXFxcIj5cXHU1NDI2PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9XFxcInJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU3ViRWRpdFRyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPlxcdTY3MkNcXHU4RUFCXFx1NTE3M1xcdTgwNTRcXHU1QjU3XFx1NkJCNVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3QgcGxhY2Vob2xkZXI9XFxcIlxcdTlFRDhcXHU4QkE0XFx1NEY3RlxcdTc1MjhJZFxcdTVCNTdcXHU2QkI1XFxcIiB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5zZWxmS2V5RmllbGROYW1lXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgc3R5bGU9XFxcIndpZHRoOjE5OXB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHYtZm9yPVxcXCJpdGVtIGluIHJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbFNlbGZLZXlEYXRhXFxcIiA6dmFsdWU9XFxcIml0ZW0uZmllbGROYW1lXFxcIiA6a2V5PVxcXCJpdGVtLmZpZWxkTmFtZVxcXCI+e3tpdGVtLmZpZWxkQ2FwdGlvbn19PC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPlxcdTU5MTZcXHU4MDU0XFx1NUI1N1xcdTZCQjVcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktc2VsZWN0IHBsYWNlaG9sZGVyPVxcXCJcXHU5RUQ4XFx1OEJBNFxcdTRGN0ZcXHU3NTI4SWRcXHU1QjU3XFx1NkJCNVxcXCIgdi1tb2RlbD1cXFwiY3VycmVudEVkaXRvckRhdGEub3V0ZXJLZXlGaWVsZE5hbWVcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBzdHlsZT1cXFwid2lkdGg6MTk5cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdi1mb3I9XFxcIml0ZW0gaW4gcmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsRm9yZWlnbktleURhdGFcXFwiIDp2YWx1ZT1cXFwiaXRlbS5maWVsZE5hbWVcXFwiIDprZXk9XFxcIml0ZW0uZmllbGROYW1lXFxcIj57e2l0ZW0uZmllbGRDYXB0aW9ufX08L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XFxcImxhYmVsXFxcIj5EZXNjXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiY3VycmVudEVkaXRvckRhdGEuZGVzY1xcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY0XFx1NjYwRVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPlxcdTUyQTBcXHU4RjdEXFx1Njc2MVxcdTRFRjZcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3FsLWdlbmVyYWwtZGVzaWduLWNvbXAgcmVmPVxcXCJzcWxHZW5lcmFsRGVzaWduQ29tcFxcXCIgOnNxbERlc2lnbmVySGVpZ2h0PVxcXCI3NFxcXCIgdi1tb2RlbD1cXFwiY3VycmVudEVkaXRvckRhdGEuY29uZGl0aW9uXFxcIiA6c2hvd0ZpZWxkPVxcXCJ0cnVlXFxcIj48L3NxbC1nZW5lcmFsLWRlc2lnbi1jb21wPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDxkaXYgaWQ9XFxcImRpdlNlbGVjdFRhYmxlXFxcIiB0aXRsZT1cXFwiXFx1OEJGN1xcdTkwMDlcXHU2MkU5XFx1ODg2OFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2VhcmNoIGNsYXNzPVxcXCJpbnB1dF9ib3JkZXJfYm90dG9tXFxcIiByZWY9XFxcInR4dF90YWJsZV9zZWFyY2hfdGV4dFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdThCRjdcXHU4RjkzXFx1NTE2NVxcdTg4NjhcXHU1NDBEXFx1NjIxNlxcdTgwMDVcXHU2ODA3XFx1OTg5OFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGktc2VsZWN0IHYtbW9kZWw9XFxcInNlbGVjdFRhYmxlVHJlZS5vbGRTZWxlY3RlZERCTGlua0lkXFxcIiBzbG90PVxcXCJwcmVwZW5kXFxcIiBzdHlsZT1cXFwid2lkdGg6IDI4MHB4XFxcIiBAb24tY2hhbmdlPVxcXCJjaGFuZ2VEQkxpbmtcXFwiIDpkaXNhYmxlZD1cXFwic2VsZWN0VGFibGVUcmVlLmRpc2FibGVkREJMaW5rXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIDp2YWx1ZT1cXFwiaXRlbS5kYklkXFxcIiB2LWZvcj1cXFwiaXRlbSBpbiBzZWxlY3RUYWJsZVRyZWUuZGJMaW5rRW50aXRpZXNcXFwiPnt7aXRlbS5kYkxpbmtOYW1lfX08L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICA8L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICA8dWwgaWQ9XFxcInNlbGVjdFRhYmxlWlRyZWVVTFxcXCIgY2xhc3M9XFxcInp0cmVlIGRpdi1jdXN0b20tc2Nyb2xsXFxcIiBzdHlsZT1cXFwiaGVpZ2h0OiA1MDBweDtvdmVyZmxvdy15OnNjcm9sbDtvdmVyZmxvdy14OmhpZGRlblxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJkZXNpZ24taHRtbC1lbGVtLWxpc3RcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7fTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7fSxcbiAgdGVtcGxhdGU6ICc8ZGl2IGNsYXNzPVwiZGVzaWduLWh0bWwtZWxlbS1saXN0LXdyYXBcIj5cXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRlc2lnbi1odG1sLWVsZW0tbGlzdC1pdGVtXCI+5qC85byP5YyWPC9kaXY+XFxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXNpZ24taHRtbC1lbGVtLWxpc3QtaXRlbVwiPuivtOaYjjwvZGl2PlxcXG4gICAgICAgIDwvZGl2Pidcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwiZmQtY29udHJvbC1iYXNlLWluZm9cIiwge1xuICBwcm9wczogW1widmFsdWVcIl0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGJhc2VJbmZvOiB7XG4gICAgICAgIGlkOiBcIlwiLFxuICAgICAgICBzZXJpYWxpemU6IFwiXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIGNsYXNzTmFtZTogXCJcIixcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwiXCIsXG4gICAgICAgIGN1c3RSZWFkb25seTogXCJcIixcbiAgICAgICAgY3VzdERpc2FibGVkOiBcIlwiLFxuICAgICAgICBzdHlsZTogXCJcIixcbiAgICAgICAgZGVzYzogXCJcIixcbiAgICAgICAgc3RhdHVzOiBcIlwiXG4gICAgICB9XG4gICAgfTtcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBiYXNlSW5mbzogZnVuY3Rpb24gYmFzZUluZm8obmV3VmFsKSB7XG4gICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIG5ld1ZhbCk7XG4gICAgfSxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUobmV3VmFsKSB7XG4gICAgICB0aGlzLmJhc2VJbmZvID0gbmV3VmFsO1xuICAgIH1cbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmJhc2VJbmZvID0gdGhpcy52YWx1ZTtcblxuICAgIGlmICghdGhpcy5iYXNlSW5mby5zdGF0dXMpIHtcbiAgICAgIHRoaXMuYmFzZUluZm8uc3RhdHVzID0gXCJlbmFibGVcIjtcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHt9LFxuICB0ZW1wbGF0ZTogXCI8dGFibGUgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIiBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAyNDBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogOTBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTIwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDkwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5JRFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8uaWRcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5TZXJpYWxpemVcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJ0ZXh0LWFsaWduOiBjZW50ZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIm1hcmdpbjogYXV0b1xcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8uc2VyaWFsaXplXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcInRydWVcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiZmFsc2VcXFwiPlxcdTU0MjY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTU0MkZcXHU3NTI4XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpby1ncm91cCB0eXBlPVxcXCJidXR0b25cXFwiIHN0eWxlPVxcXCJtYXJnaW46IGF1dG9cXFwiIHYtbW9kZWw9XFxcImJhc2VJbmZvLnN0YXR1c1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJlbmFibGVcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiZGlzYWJsZVxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+TmFtZVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8ubmFtZVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkNsYXNzTmFtZVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8uY2xhc3NOYW1lXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UGxhY2Vob2xkZXI8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8ucGxhY2Vob2xkZXJcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5SZWFkb25seVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5jdXN0UmVhZG9ubHlcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwicmVhZG9ubHlcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwibm9yZWFkb25seVxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+RGlzYWJsZWRcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJ0ZXh0LWFsaWduOiBjZW50ZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIm1hcmdpbjogYXV0b1xcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8uY3VzdERpc2FibGVkXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcImRpc2FibGVkXFxcIj5cXHU2NjJGPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIm5vZGlzYWJsZWRcXFwiPlxcdTU0MjY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTY4MzdcXHU1RjBGXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI1XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSByb3dzPVxcXCI3XFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5zdHlsZVxcXCI+PC90ZXh0YXJlYT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTU5MDdcXHU2Q0U4XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI1XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSByb3dzPVxcXCI4XFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5kZXNjXFxcIj48L3RleHRhcmVhPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICA8L3RhYmxlPlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImZkLWNvbnRyb2wtYmluZC10b1wiLCB7XG4gIHByb3BzOiBbXCJiaW5kVG9GaWVsZFByb3BcIiwgXCJkZWZhdWx0VmFsdWVQcm9wXCIsIFwidmFsaWRhdGVSdWxlc1Byb3BcIl0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGJpbmRUb0ZpZWxkOiB7XG4gICAgICAgIHJlbGF0aW9uSWQ6IFwiXCIsXG4gICAgICAgIHRhYmxlSWQ6IFwiXCIsXG4gICAgICAgIHRhYmxlTmFtZTogXCJcIixcbiAgICAgICAgdGFibGVDYXB0aW9uOiBcIlwiLFxuICAgICAgICBmaWVsZE5hbWU6IFwiXCIsXG4gICAgICAgIGZpZWxkQ2FwdGlvbjogXCJcIixcbiAgICAgICAgZmllbGREYXRhVHlwZTogXCJcIixcbiAgICAgICAgZmllbGRMZW5ndGg6IFwiXCJcbiAgICAgIH0sXG4gICAgICB2YWxpZGF0ZVJ1bGVzOiB7XG4gICAgICAgIG1zZzogXCJcIixcbiAgICAgICAgcnVsZXM6IFtdXG4gICAgICB9LFxuICAgICAgZGVmYXVsdFZhbHVlOiB7XG4gICAgICAgIGRlZmF1bHRUeXBlOiBcIlwiLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRUZXh0OiBcIlwiXG4gICAgICB9LFxuICAgICAgdGVtcERhdGE6IHtcbiAgICAgICAgZGVmYXVsdERpc3BsYXlUZXh0OiBcIlwiXG4gICAgICB9XG4gICAgfTtcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBiaW5kVG9Qcm9wOiBmdW5jdGlvbiBiaW5kVG9Qcm9wKG5ld1ZhbHVlKSB7XG4gICAgICBjb25zb2xlLmxvZyhuZXdWYWx1ZSk7XG4gICAgfSxcbiAgICBiaW5kVG9GaWVsZFByb3A6IGZ1bmN0aW9uIGJpbmRUb0ZpZWxkUHJvcChuZXdWYWx1ZSkge1xuICAgICAgdGhpcy5iaW5kVG9GaWVsZCA9IG5ld1ZhbHVlO1xuICAgIH0sXG4gICAgZGVmYXVsdFZhbHVlUHJvcDogZnVuY3Rpb24gZGVmYXVsdFZhbHVlUHJvcChuZXdWYWx1ZSkge1xuICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPSBuZXdWYWx1ZTtcblxuICAgICAgaWYgKCFTdHJpbmdVdGlsaXR5LklzTnVsbE9yRW1wdHkodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUpKSB7XG4gICAgICAgIHRoaXMudGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0ID0gRGVmYXVsdFZhbHVlVXRpbGl0eS5mb3JtYXRUZXh0KHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlLCB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCk7XG4gICAgICB9XG4gICAgfSxcbiAgICB2YWxpZGF0ZVJ1bGVzUHJvcDogZnVuY3Rpb24gdmFsaWRhdGVSdWxlc1Byb3AobmV3VmFsdWUpIHtcbiAgICAgIHRoaXMudmFsaWRhdGVSdWxlcyA9IG5ld1ZhbHVlO1xuICAgIH1cbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmJpbmRUb0ZpZWxkID0gdGhpcy5iaW5kVG9GaWVsZFByb3A7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBzZXRDb21wbGV0ZWQ6IGZ1bmN0aW9uIHNldENvbXBsZXRlZCgpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ29uLXNldC1jb21wbGV0ZWQnLCB0aGlzLmJpbmRUb0ZpZWxkLCB0aGlzLmRlZmF1bHRWYWx1ZSwgdGhpcy52YWxpZGF0ZVJ1bGVzKTtcbiAgICB9LFxuICAgIHNlbGVjdEJpbmRGaWVsZFZpZXc6IGZ1bmN0aW9uIHNlbGVjdEJpbmRGaWVsZFZpZXcoKSB7XG4gICAgICB3aW5kb3cuX1NlbGVjdEJpbmRPYmogPSB0aGlzO1xuICAgICAgd2luZG93LnBhcmVudC5hcHBGb3JtLnNlbGVjdEJpbmRUb1NpbmdsZUZpZWxkRGlhbG9nQmVnaW4od2luZG93LCB0aGlzLmdldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWUoKSk7XG4gICAgfSxcbiAgICBzZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlOiBmdW5jdGlvbiBzZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlKHJlc3VsdCkge1xuICAgICAgdGhpcy5iaW5kVG9GaWVsZCA9IHt9O1xuXG4gICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZE5hbWUgPSByZXN1bHQuZmllbGROYW1lO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlSWQgPSByZXN1bHQudGFibGVJZDtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC50YWJsZU5hbWUgPSByZXN1bHQudGFibGVOYW1lO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlQ2FwdGlvbiA9IHJlc3VsdC50YWJsZUNhcHRpb247XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQuZmllbGRDYXB0aW9uID0gcmVzdWx0LmZpZWxkQ2FwdGlvbjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZERhdGFUeXBlID0gcmVzdWx0LmZpZWxkRGF0YVR5cGU7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQuZmllbGRMZW5ndGggPSByZXN1bHQuZmllbGRMZW5ndGg7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQucmVsYXRpb25JZCA9IHJlc3VsdC5yZWxhdGlvbklkO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZE5hbWUgPSBcIlwiO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlSWQgPSBcIlwiO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlTmFtZSA9IFwiXCI7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQudGFibGVDYXB0aW9uID0gXCJcIjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZENhcHRpb24gPSBcIlwiO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLmZpZWxkRGF0YVR5cGUgPSBcIlwiO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLmZpZWxkTGVuZ3RoID0gXCJcIjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5yZWxhdGlvbklkID0gXCJcIjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZXRDb21wbGV0ZWQoKTtcbiAgICB9LFxuICAgIGdldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWU6IGZ1bmN0aW9uIGdldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWUoKSB7XG4gICAgICByZXR1cm4gSnNvblV0aWxpdHkuQ2xvbmVTaW1wbGUodGhpcy5iaW5kVG9GaWVsZCk7XG4gICAgfSxcbiAgICBzZWxlY3REZWZhdWx0VmFsdWVWaWV3OiBmdW5jdGlvbiBzZWxlY3REZWZhdWx0VmFsdWVWaWV3KCkge1xuICAgICAgd2luZG93Ll9TZWxlY3RCaW5kT2JqID0gdGhpcztcbiAgICAgIHdpbmRvdy5wYXJlbnQuYXBwRm9ybS5zZWxlY3REZWZhdWx0VmFsdWVEaWFsb2dCZWdpbih3aW5kb3csIG51bGwpO1xuICAgIH0sXG4gICAgc2V0U2VsZWN0RW52VmFyaWFibGVSZXN1bHRWYWx1ZTogZnVuY3Rpb24gc2V0U2VsZWN0RW52VmFyaWFibGVSZXN1bHRWYWx1ZShyZXN1bHQpIHtcbiAgICAgIGlmIChyZXN1bHQgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSA9IHJlc3VsdC5UeXBlO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VmFsdWUgPSByZXN1bHQuVmFsdWU7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0ID0gcmVzdWx0LlRleHQ7XG4gICAgICAgIHRoaXMudGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0ID0gRGVmYXVsdFZhbHVlVXRpbGl0eS5mb3JtYXRUZXh0KHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlLCB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSA9IFwiXCI7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRWYWx1ZSA9IFwiXCI7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0ID0gXCJcIjtcbiAgICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBcIlwiO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNldENvbXBsZXRlZCgpO1xuICAgIH0sXG4gICAgc2VsZWN0VmFsaWRhdGVSdWxlVmlldzogZnVuY3Rpb24gc2VsZWN0VmFsaWRhdGVSdWxlVmlldygpIHtcbiAgICAgIHdpbmRvdy5fU2VsZWN0QmluZE9iaiA9IHRoaXM7XG4gICAgICB3aW5kb3cucGFyZW50LmFwcEZvcm0uc2VsZWN0VmFsaWRhdGVSdWxlRGlhbG9nQmVnaW4od2luZG93LCB0aGlzLmdldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlKCkpO1xuICAgIH0sXG4gICAgc2V0U2VsZWN0VmFsaWRhdGVSdWxlUmVzdWx0VmFsdWU6IGZ1bmN0aW9uIHNldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlKHJlc3VsdCkge1xuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMudmFsaWRhdGVSdWxlcyA9IHJlc3VsdDtcbiAgICAgICAgdGhpcy5zZXRDb21wbGV0ZWQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudmFsaWRhdGVSdWxlcy5tc2cgPSBcIlwiO1xuICAgICAgICB0aGlzLnZhbGlkYXRlUnVsZXMucnVsZXMgPSBbXTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlOiBmdW5jdGlvbiBnZXRTZWxlY3RWYWxpZGF0ZVJ1bGVSZXN1bHRWYWx1ZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnZhbGlkYXRlUnVsZXM7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAyODBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI0XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTdFRDFcXHU1QjlBXFx1NTIzMFxcdTg4Njg8YnV0dG9uIGNsYXNzPVxcXCJidG4tc2VsZWN0IGZyaWdodFxcXCIgdi1vbjpjbGljaz1cXFwic2VsZWN0QmluZEZpZWxkVmlld1xcXCI+Li4uPC9idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU4ODY4XFx1N0YxNlxcdTUzRjdcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7YmluZFRvRmllbGQudGFibGVJZH19PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTY1NzBcXHU2MzZFXFx1NkU5MFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTg4NjhcXHU1NDBEXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e2JpbmRUb0ZpZWxkLnRhYmxlTmFtZX19PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTg4NjhcXHU2ODA3XFx1OTg5OFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tiaW5kVG9GaWVsZC50YWJsZUNhcHRpb259fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1QjU3XFx1NkJCNVxcdTU0MERcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7YmluZFRvRmllbGQuZmllbGROYW1lfX08L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NUI1N1xcdTZCQjVcXHU2ODA3XFx1OTg5OFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tiaW5kVG9GaWVsZC5maWVsZENhcHRpb259fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU3QzdCXFx1NTc4QlxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tiaW5kVG9GaWVsZC5maWVsZERhdGFUeXBlfX08L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1OTU3RlxcdTVFQTZcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7YmluZFRvRmllbGQuZmllbGRMZW5ndGh9fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI0XFxcIj5cXHU5RUQ4XFx1OEJBNFxcdTUwM0M8YnV0dG9uIGNsYXNzPVxcXCJidG4tc2VsZWN0IGZyaWdodFxcXCIgdi1vbjpjbGljaz1cXFwic2VsZWN0RGVmYXVsdFZhbHVlVmlld1xcXCI+Li4uPC9idXR0b24+PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBzdHlsZT1cXFwiaGVpZ2h0OiAzNXB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjRcXFwiIHN0eWxlPVxcXCJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7dGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0fX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjRcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NjgyMVxcdTlBOENcXHU4OUM0XFx1NTIxOTxidXR0b24gY2xhc3M9XFxcImJ0bi1zZWxlY3QgZnJpZ2h0XFxcIiB2LW9uOmNsaWNrPVxcXCJzZWxlY3RWYWxpZGF0ZVJ1bGVWaWV3XFxcIj4uLi48L2J1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjRcXFwiIHN0eWxlPVxcXCJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy10YWJsZS13cmFwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyO1xcXCI+XFx1NjNEMFxcdTc5M0FcXHU2RDg4XFx1NjA2RlxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7dmFsaWRhdGVSdWxlcy5tc2d9fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyO1xcXCI+XFx1OUE4Q1xcdThCQzFcXHU3QzdCXFx1NTc4QjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcImJhY2tncm91bmQ6ICNlOGVhZWM7dGV4dC1hbGlnbjogY2VudGVyO1xcXCI+XFx1NTNDMlxcdTY1NzA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgdi1mb3I9XFxcInJ1bGVJdGVtIGluIHZhbGlkYXRlUnVsZXMucnVsZXNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJiYWNrZ3JvdW5kOiAjZmZmZmZmO3RleHQtYWxpZ246IGNlbnRlcjtjb2xvcjogI2FkOTM2MVxcXCI+e3tydWxlSXRlbS52YWxpZGF0ZVR5cGV9fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcImJhY2tncm91bmQ6ICNmZmZmZmY7dGV4dC1hbGlnbjogY2VudGVyO1xcXCI+PHAgdi1pZj1cXFwicnVsZUl0ZW0udmFsaWRhdGVQYXJhcyA9PT0gJydcXFwiPlxcdTY1RTBcXHU1M0MyXFx1NjU3MDwvcD48cCB2LWVsc2U+e3tydWxlSXRlbS52YWxpZGF0ZVBhcmFzfX08L3A+PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgPC90YWJsZT5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJmZC1jb250cm9sLWRhdGFzb3VyY2VcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBub3JtYWxEYXRhU291cmNlOiB7XG4gICAgICAgIGRlZmF1bHRJc051bGw6IFwidHJ1ZVwiLFxuICAgICAgICBzcWxEYXRhU291cmNlOiBcIlwiLFxuICAgICAgICBkaWN0aW9uYXJ5SWREYXRhU291cmNlOiBcIlwiLFxuICAgICAgICByZXN0RGF0YVNvdXJjZTogXCJcIixcbiAgICAgICAgc3RhdGljRGF0YVNvdXJjZTogXCJcIlxuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIHdhdGNoOiB7fSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0VmFsdWU6IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgdGhpcy5ub3JtYWxEYXRhU291cmNlLnNxbERhdGFTb3VyY2UgPSBlbmNvZGVVUklDb21wb25lbnQodGhpcy5ub3JtYWxEYXRhU291cmNlLnNxbERhdGFTb3VyY2UpO1xuICAgICAgcmV0dXJuIHRoaXMubm9ybWFsRGF0YVNvdXJjZTtcbiAgICB9LFxuICAgIHNldFZhbHVlOiBmdW5jdGlvbiBzZXRWYWx1ZShuZXdWYWx1ZSkge1xuICAgICAgdGhpcy5ub3JtYWxEYXRhU291cmNlID0gbmV3VmFsdWU7XG4gICAgICB0aGlzLm5vcm1hbERhdGFTb3VyY2Uuc3FsRGF0YVNvdXJjZSA9IGRlY29kZVVSSUNvbXBvbmVudChuZXdWYWx1ZS5zcWxEYXRhU291cmNlKTtcbiAgICAgIHRoaXMuJHJlZnMuc3FsR2VuZXJhbERlc2lnbkNvbXAuc2V0VmFsdWUodGhpcy5ub3JtYWxEYXRhU291cmNlLnNxbERhdGFTb3VyY2UpO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPHRhYmxlIGNlbGxwYWRkaW5nPVxcXCIwXFxcIiBjZWxsc3BhY2luZz1cXFwiMFxcXCIgYm9yZGVyPVxcXCIwXFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy10YWJsZS13cmFwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxMDBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMjgwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgLz5cXG4gICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU5RUQ4XFx1OEJBNFxcdTdBN0FcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpby1ncm91cCB0eXBlPVxcXCJidXR0b25cXFwiIHN0eWxlPVxcXCJtYXJnaW46IGF1dG9cXFwiIHYtbW9kZWw9XFxcIm5vcm1hbERhdGFTb3VyY2UuZGVmYXVsdElzTnVsbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJ0cnVlXFxcIj5cXHU2NjJGPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcImZhbHNlXFxcIj5cXHU1NDI2PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcmFkaW8tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTgzQjdcXHU1M0Q2XFx1NjU3MFxcdTYzNkVcXHU2RTkwXFx1NEYxOFxcdTUxNDhcXHU3RUE3XFx1NTIyQi0+UmVzdFxcdTYzQTVcXHU1M0UzLT5cXHU2NzJDXFx1NTczMFxcdTYzQTVcXHU1M0UzLT5zcWwtPlxcdTk3NTlcXHU2MDAxXFx1NTAzQ1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU5NzU5XFx1NjAwMVxcdTUwM0NcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIj5cXG5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NjU3MFxcdTYzNkVcXHU1QjU3XFx1NTE3OFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjNcXFwiPlxcblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgcm93c3Bhbj1cXFwiMlxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTUUxcXHU2NTcwXFx1NjM2RVxcdTZFOTBcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPVxcXCJjb2xvcjogcmVkXFxcIj5bSVRFWFRcXHU0RTBFSVZBTFVFXFx1OEJGN1xcdTRGN0ZcXHU3NTI4XFx1NTkyN1xcdTUxOTldPC9zcGFuPlxcdTc5M0FcXHU0RjhCOlxcdTMwMTBTRUxFQ1QgJzEnIElURVhULCcyJyBJVkFMVUVcXHUzMDExXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIiBzdHlsZT1cXFwiYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRlxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3FsLWdlbmVyYWwtZGVzaWduLWNvbXAgcmVmPVxcXCJzcWxHZW5lcmFsRGVzaWduQ29tcFxcXCIgOnNxbC1kZXNpZ25lci1oZWlnaHQ9XFxcIjc0XFxcIiAgdi1tb2RlbD1cXFwibm9ybWFsRGF0YVNvdXJjZS5zcWxEYXRhU291cmNlXFxcIj48L3NxbC1nZW5lcmFsLWRlc2lnbi1jb21wPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSRVNUXFx1NjU3MFxcdTYzNkVcXHU2RTkwXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgPC90YWJsZT5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJmZC1jb250cm9sLXNlbGVjdC1iaW5kLXRvLXNpbmdsZS1maWVsZC1kaWFsb2dcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZ2V0VGFibGVzRGF0YVVybDogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlL0dldFRhYmxlc0ZvclpUcmVlTm9kZUxpc3RcIixcbiAgICAgICAgZ2V0VGFibGVGaWVsZHNEYXRhVXJsOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGUvR2V0VGFibGVGaWVsZHNCeVRhYmxlSWRcIixcbiAgICAgICAgZ2V0VGFibGVzRmllbGRzQnlUYWJsZUlkczogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlL0dldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHNcIlxuICAgICAgfSxcbiAgICAgIHNlbGVjdGVkRGF0YToge1xuICAgICAgICByZWxhdGlvbklkOiBcIlwiLFxuICAgICAgICB0YWJsZUlkOiBcIlwiLFxuICAgICAgICB0YWJsZU5hbWU6IFwiXCIsXG4gICAgICAgIHRhYmxlQ2FwdGlvbjogXCJcIixcbiAgICAgICAgZmllbGROYW1lOiBcIlwiLFxuICAgICAgICBmaWVsZENhcHRpb246IFwiXCIsXG4gICAgICAgIGZpZWxkRGF0YVR5cGU6IFwiXCIsXG4gICAgICAgIGZpZWxkTGVuZ3RoOiBcIlwiXG4gICAgICB9LFxuICAgICAgdGFibGVUcmVlOiB7XG4gICAgICAgIHRhYmxlVHJlZU9iajogbnVsbCxcbiAgICAgICAgdGFibGVUcmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICBjaGtTdHlsZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJkaXNwbGF5VGV4dFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2ltcGxlRGF0YToge1xuICAgICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICAgIGlkS2V5OiBcImlkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJwYXJlbnRJZFwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRGF0YS50YWJsZUlkID0gdHJlZU5vZGUudGFibGVJZDtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWREYXRhLnRhYmxlTmFtZSA9IHRyZWVOb2RlLnRhYmxlTmFtZTtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWREYXRhLnRhYmxlQ2FwdGlvbiA9IHRyZWVOb2RlLnRhYmxlQ2FwdGlvbjtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWREYXRhLmZpZWxkTmFtZSA9IFwiXCI7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRGF0YS5maWVsZENhcHRpb24gPSBcIlwiO1xuICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZERhdGEuZmllbGREYXRhVHlwZSA9IFwiXCI7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRGF0YS5maWVsZExlbmd0aCA9IFwiXCI7XG4gICAgICAgICAgICAgIF9zZWxmLmZpZWxkVGFibGUuZmllbGREYXRhID0gW107XG5cbiAgICAgICAgICAgICAgX3NlbGYuZmlsdGVyQWxsRmllbGRzVG9UYWJsZShfc2VsZi5zZWxlY3RlZERhdGEudGFibGVJZCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25EYmxDbGljazogZnVuY3Rpb24gb25EYmxDbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge30sXG4gICAgICAgICAgICBvbkFzeW5jU3VjY2VzczogZnVuY3Rpb24gb25Bc3luY1N1Y2Nlc3MoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUsIG1zZykge31cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRhYmxlVHJlZURhdGE6IG51bGwsXG4gICAgICAgIHNlbGVjdGVkVGFibGVOYW1lOiBcIuaXoFwiXG4gICAgICB9LFxuICAgICAgZmllbGRUYWJsZToge1xuICAgICAgICBmaWVsZERhdGE6IFtdLFxuICAgICAgICB0YWJsZUhlaWdodDogNDcwLFxuICAgICAgICBjb2x1bW5zQ29uZmlnOiBbe1xuICAgICAgICAgIHRpdGxlOiAnICcsXG4gICAgICAgICAgd2lkdGg6IDYwLFxuICAgICAgICAgIGtleTogJ2lzU2VsZWN0ZWRUb0JpbmQnLFxuICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIHBhcmFtcykge1xuICAgICAgICAgICAgaWYgKHBhcmFtcy5yb3cuaXNTZWxlY3RlZFRvQmluZCA9PSBcIjFcIikge1xuICAgICAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogXCJsaXN0LXJvdy1idXR0b24td3JhcFwiXG4gICAgICAgICAgICAgIH0sIFtoKCdkaXYnLCB7XG4gICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBcImxpc3Qtcm93LWJ1dHRvbiBzZWxlY3RlZFwiXG4gICAgICAgICAgICAgIH0pXSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogXCJcIlxuICAgICAgICAgICAgICB9LCBcIlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIHtcbiAgICAgICAgICB0aXRsZTogJ+WQjeensCcsXG4gICAgICAgICAga2V5OiAnZmllbGROYW1lJyxcbiAgICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgdGl0bGU6ICfmoIfpopgnLFxuICAgICAgICAgIGtleTogJ2ZpZWxkQ2FwdGlvbicsXG4gICAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICBvbGRSZWxhdGlvbkRhdGFTdHJpbmc6IFwiXCIsXG4gICAgICByZWxhdGlvbkRhdGE6IG51bGwsXG4gICAgICBhbGxGaWVsZHM6IG51bGwsXG4gICAgICBvbGRCaW5kRmllbGREYXRhOiBudWxsXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgYmVnaW5TZWxlY3Q6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0KHJlbGF0aW9uRGF0YSwgb2xkQmluZEZpZWxkRGF0YSkge1xuICAgICAgY29uc29sZS5sb2coXCLlhbPogZTooajmlbDmja7vvJpcIik7XG4gICAgICBjb25zb2xlLmxvZyhyZWxhdGlvbkRhdGEpO1xuICAgICAgY29uc29sZS5sb2coXCLlt7Lnu4/nu5HlrprkuobnmoTmlbDmja7vvJpcIik7XG4gICAgICBjb25zb2xlLmxvZyhvbGRCaW5kRmllbGREYXRhKTtcblxuICAgICAgaWYgKHJlbGF0aW9uRGF0YSA9PSBudWxsIHx8IHJlbGF0aW9uRGF0YSA9PSBcIlwiIHx8IHJlbGF0aW9uRGF0YS5sZW5ndGggPT0gMCkge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuivt+WFiOiuvue9ruihqOWNleeahOaVsOaNruWFs+iBlO+8gVwiKTtcbiAgICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktd2lkZ2V0LW92ZXJsYXlcIikuY3NzKFwiekluZGV4XCIsIDEwMTAwKTtcbiAgICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktZGlhbG9nXCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGVsZW0gPSB0aGlzLiRyZWZzLmZkQ29udHJvbFNlbGVjdEJpbmRUb1NpbmdsZUZpZWxkRGlhbG9nV3JhcDtcbiAgICAgIHZhciBoZWlnaHQgPSA0NTA7XG4gICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgaGVpZ2h0OiA2ODAsXG4gICAgICAgIHdpZHRoOiA5ODAsXG4gICAgICAgIHRpdGxlOiBcIumAieaLqee7keWumuWtl+autVwiXG4gICAgICB9KTtcbiAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLXdpZGdldC1vdmVybGF5XCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMCk7XG4gICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS1kaWFsb2dcIikuY3NzKFwiekluZGV4XCIsIDEwMTAxKTtcbiAgICAgIHRoaXMub2xkQmluZEZpZWxkRGF0YSA9IG9sZEJpbmRGaWVsZERhdGE7XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0YSA9IEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKG9sZEJpbmRGaWVsZERhdGEpO1xuXG4gICAgICBpZiAoSnNvblV0aWxpdHkuSnNvblRvU3RyaW5nKHJlbGF0aW9uRGF0YSkgIT0gdGhpcy5vbGRSZWxhdGlvbkRhdGFTdHJpbmcpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWxhdGlvbkRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICByZWxhdGlvbkRhdGFbaV0uZGlzcGxheVRleHQgPSByZWxhdGlvbkRhdGFbaV0udGFibGVOYW1lICsgXCJbXCIgKyByZWxhdGlvbkRhdGFbaV0udGFibGVDYXB0aW9uICsgXCJdKFwiICsgcmVsYXRpb25EYXRhW2ldLnJlbGF0aW9uVHlwZSArIFwiKVwiO1xuXG4gICAgICAgICAgaWYgKHJlbGF0aW9uRGF0YVtpXS5wYXJlbnRJZCA9PSBcIi0xXCIpIHtcbiAgICAgICAgICAgIHJlbGF0aW9uRGF0YVtpXS5kaXNwbGF5VGV4dCA9IHJlbGF0aW9uRGF0YVtpXS50YWJsZU5hbWUgKyBcIltcIiArIHJlbGF0aW9uRGF0YVtpXS50YWJsZUNhcHRpb24gKyBcIl1cIjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZWxhdGlvbkRhdGFbaV0uaWNvbiA9IFwiLi4vLi4vLi4vVGhlbWVzL1BuZzE2WDE2L3RhYmxlLnBuZ1wiO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50YWJsZVRyZWUudGFibGVUcmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoXCIjdGFibGVaVHJlZVVMXCIpLCB0aGlzLnRhYmxlVHJlZS50YWJsZVRyZWVTZXR0aW5nLCByZWxhdGlvbkRhdGEpO1xuICAgICAgICB0aGlzLnRhYmxlVHJlZS50YWJsZVRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgICAgICB0aGlzLm9sZFJlbGF0aW9uRGF0YVN0cmluZyA9IEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyhyZWxhdGlvbkRhdGEpO1xuICAgICAgICB0aGlzLnJlbGF0aW9uRGF0YSA9IHJlbGF0aW9uRGF0YTtcbiAgICAgICAgdGhpcy5nZXRBbGxUYWJsZXNGaWVsZHMocmVsYXRpb25EYXRhKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucmVzZXRGaWVsZFRvU2VsZWN0ZWRTdGF0dXModGhpcy5hbGxGaWVsZHMpO1xuICAgICAgfVxuXG4gICAgICBpZiAob2xkQmluZEZpZWxkRGF0YSAmJiBvbGRCaW5kRmllbGREYXRhLnRhYmxlSWQgJiYgb2xkQmluZEZpZWxkRGF0YS50YWJsZUlkICE9IFwiXCIpIHtcbiAgICAgICAgdmFyIHNlbGVjdGVkTm9kZSA9IHRoaXMudGFibGVUcmVlLnRhYmxlVHJlZU9iai5nZXROb2RlQnlQYXJhbShcInRhYmxlSWRcIiwgb2xkQmluZEZpZWxkRGF0YS50YWJsZUlkKTtcbiAgICAgICAgdGhpcy50YWJsZVRyZWUudGFibGVUcmVlT2JqLnNlbGVjdE5vZGUoc2VsZWN0ZWROb2RlLCBmYWxzZSwgdHJ1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICByZXNldEZpZWxkVG9TZWxlY3RlZFN0YXR1czogZnVuY3Rpb24gcmVzZXRGaWVsZFRvU2VsZWN0ZWRTdGF0dXMoX2FsbEZpZWxkcykge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmZpZWxkVGFibGUuZmllbGREYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMuZmllbGRUYWJsZS5maWVsZERhdGFbaV0uaXNTZWxlY3RlZFRvQmluZCA9IFwiMFwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoX2FsbEZpZWxkcykge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IF9hbGxGaWVsZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBfYWxsRmllbGRzW2ldLmlzU2VsZWN0ZWRUb0JpbmQgPSBcIjBcIjtcblxuICAgICAgICAgIGlmIChfYWxsRmllbGRzW2ldLmZpZWxkVGFibGVJZCA9PSB0aGlzLm9sZEJpbmRGaWVsZERhdGEudGFibGVJZCkge1xuICAgICAgICAgICAgaWYgKF9hbGxGaWVsZHNbaV0uZmllbGROYW1lID09IHRoaXMub2xkQmluZEZpZWxkRGF0YS5maWVsZE5hbWUpIHtcbiAgICAgICAgICAgICAgX2FsbEZpZWxkc1tpXS5pc1NlbGVjdGVkVG9CaW5kID0gXCIxXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5hbGxGaWVsZHMgPSBfYWxsRmllbGRzO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmZpbHRlckFsbEZpZWxkc1RvVGFibGUodGhpcy5vbGRCaW5kRmllbGREYXRhLnRhYmxlSWQpO1xuICAgIH0sXG4gICAgZ2V0QWxsVGFibGVzRmllbGRzOiBmdW5jdGlvbiBnZXRBbGxUYWJsZXNGaWVsZHMocmVsYXRpb25EYXRhKSB7XG4gICAgICB2YXIgdGFibGVJZHMgPSBbXTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWxhdGlvbkRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdGFibGVJZHMucHVzaChyZWxhdGlvbkRhdGFbaV0udGFibGVJZCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzLCB7XG4gICAgICAgIFwidGFibGVJZHNcIjogdGFibGVJZHNcbiAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgdmFyIGFsbEZpZWxkcyA9IHJlc3VsdC5kYXRhO1xuICAgICAgICAgIHZhciBzaW5nbGVUYWJsZSA9IHJlc3VsdC5leEtWRGF0YS5UYWJsZXNbMF07XG4gICAgICAgICAgY29uc29sZS5sb2coXCLph43mlrDojrflj5bmlbDmja5cIik7XG4gICAgICAgICAgY29uc29sZS5sb2coYWxsRmllbGRzKTtcblxuICAgICAgICAgIF9zZWxmLnJlc2V0RmllbGRUb1NlbGVjdGVkU3RhdHVzKGFsbEZpZWxkcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBmaWx0ZXJBbGxGaWVsZHNUb1RhYmxlOiBmdW5jdGlvbiBmaWx0ZXJBbGxGaWVsZHNUb1RhYmxlKHRhYmxlSWQpIHtcbiAgICAgIGlmICh0YWJsZUlkKSB7XG4gICAgICAgIHZhciBmaWVsZHMgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYWxsRmllbGRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKHRoaXMuYWxsRmllbGRzW2ldLmZpZWxkVGFibGVJZCA9PSB0YWJsZUlkKSB7XG4gICAgICAgICAgICBmaWVsZHMucHVzaCh0aGlzLmFsbEZpZWxkc1tpXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5maWVsZFRhYmxlLmZpZWxkRGF0YSA9IGZpZWxkcztcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5maWVsZFRhYmxlLmZpZWxkRGF0YSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBzZWxlY3RlZEZpZWxkOiBmdW5jdGlvbiBzZWxlY3RlZEZpZWxkKHNlbGVjdGlvbiwgaW5kZXgpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRhLmZpZWxkTmFtZSA9IHNlbGVjdGlvbi5maWVsZE5hbWU7XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0YS5maWVsZENhcHRpb24gPSBzZWxlY3Rpb24uZmllbGRDYXB0aW9uO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEuZmllbGREYXRhVHlwZSA9IHNlbGVjdGlvbi5maWVsZERhdGFUeXBlO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEuZmllbGRMZW5ndGggPSBzZWxlY3Rpb24uZmllbGREYXRhTGVuZ3RoO1xuICAgICAgdmFyIHNlbGVjdGVkTm9kZSA9IHRoaXMudGFibGVUcmVlLnRhYmxlVHJlZU9iai5nZXROb2RlQnlQYXJhbShcInRhYmxlSWRcIiwgc2VsZWN0aW9uLmZpZWxkVGFibGVJZCk7XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0YS50YWJsZUlkID0gc2VsZWN0ZWROb2RlLnRhYmxlSWQ7XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0YS50YWJsZU5hbWUgPSBzZWxlY3RlZE5vZGUudGFibGVOYW1lO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEudGFibGVDYXB0aW9uID0gc2VsZWN0ZWROb2RlLnRhYmxlQ2FwdGlvbjtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRhLnJlbGF0aW9uSWQgPSBzZWxlY3RlZE5vZGUuaWQ7XG4gICAgfSxcbiAgICBzZWxlY3RDb21wbGV0ZTogZnVuY3Rpb24gc2VsZWN0Q29tcGxldGUoKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdGhpcy5zZWxlY3RlZERhdGE7XG5cbiAgICAgIGlmICghU3RyaW5nVXRpbGl0eS5Jc051bGxPckVtcHR5KHJlc3VsdC50YWJsZUlkKSAmJiAhU3RyaW5nVXRpbGl0eS5Jc051bGxPckVtcHR5KHJlc3VsdC5maWVsZE5hbWUpKSB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLWJpbmQtdG8tc2luZ2xlLWZpZWxkJywgcmVzdWx0KTtcbiAgICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIFwi6K+36YCJ5oup6ZyA6KaB57uR5a6a55qE5a2X5q61IVwiLCBudWxsKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGNsZWFyQ29tcGxldGU6IGZ1bmN0aW9uIGNsZWFyQ29tcGxldGUoKSB7XG4gICAgICB3aW5kb3cuT3BlbmVyV2luZG93T2JqW3RoaXMuZ2V0U2VsZWN0SW5zdGFuY2VOYW1lKCldLnNldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWUobnVsbCk7XG4gICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgfSxcbiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UoKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LkNsb3NlRGlhbG9nRWxlbSh0aGlzLiRyZWZzLmZkQ29udHJvbFNlbGVjdEJpbmRUb1NpbmdsZUZpZWxkRGlhbG9nV3JhcCk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IHJlZj1cXFwiZmRDb250cm9sU2VsZWN0QmluZFRvU2luZ2xlRmllbGREaWFsb2dXcmFwXFxcIiBjbGFzcz1cXFwiZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcCBkZXNpZ24tZGlhbG9nLXdyYXBlci1zaW5nbGUtZGlhbG9nXFxcIiBzdHlsZT1cXFwiZGlzcGxheTogbm9uZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZWxlY3QtdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2aWRlciBvcmllbnRhdGlvbj1cXFwibGVmdFxcXCIgOmRhc2hlZD1cXFwidHJ1ZVxcXCIgc3R5bGU9XFxcImZvbnQtc2l6ZTogMTJweFxcXCI+XFx1OTAwOVxcdTYyRTlcXHU4ODY4PC9kaXZpZGVyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgaWQ9XFxcInR4dFNlYXJjaFRhYmxlVHJlZVxcXCIgc3R5bGU9XFxcIndpZHRoOiAxMDAlO2hlaWdodDogMzJweDttYXJnaW4tdG9wOiAycHhcXFwiIC8+LS0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGlkPVxcXCJ0YWJsZVpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic2VsZWN0LWZpZWxkLXdyYXBlciBpdi1saXN0LXBhZ2Utd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdmlkZXIgb3JpZW50YXRpb249XFxcImxlZnRcXFwiIDpkYXNoZWQ9XFxcInRydWVcXFwiIHN0eWxlPVxcXCJmb250LXNpemU6IDEycHhcXFwiPlxcdTkwMDlcXHU2MkU5XFx1NUI1N1xcdTZCQjU8L2RpdmlkZXI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgYm9yZGVyIDpjb2x1bW5zPVxcXCJmaWVsZFRhYmxlLmNvbHVtbnNDb25maWdcXFwiIDpkYXRhPVxcXCJmaWVsZFRhYmxlLmZpZWxkRGF0YVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiaXYtbGlzdC10YWJsZVxcXCIgOmhpZ2hsaWdodC1yb3c9XFxcInRydWVcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG9uLXJvdy1jbGljaz1cXFwic2VsZWN0ZWRGaWVsZFxcXCIgOmhlaWdodD1cXFwiZmllbGRUYWJsZS50YWJsZUhlaWdodFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIG5vLWRhdGEtdGV4dD1cXFwiXFx1OEJGN1xcdTkwMDlcXHU2MkU5XFx1ODg2OFxcXCI+PC9pLXRhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24tb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLWlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwic2VsZWN0Q29tcGxldGUoKVxcXCI+IFxcdTc4NkUgXFx1OEJBNCA8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwiY2xlYXJDb21wbGV0ZSgpXFxcIj4gXFx1NkUwNSBcXHU3QTdBIDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJoYW5kbGVDbG9zZSgpXFxcIj5cXHU1MTczIFxcdTk1RUQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJpbm5lci1mb3JtLWJ1dHRvbi1saXN0LWNvbXBcIiwge1xuICBwcm9wczogW1wiZm9ybUlkXCJdLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgY29sdW1uc0NvbmZpZzogW3tcbiAgICAgICAgdGl0bGU6ICfmoIfpopgnLFxuICAgICAgICBrZXk6ICdjYXB0aW9uJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfnsbvlnosnLFxuICAgICAgICBrZXk6ICdidXR0b25UeXBlJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfmk43kvZwnLFxuICAgICAgICBrZXk6ICdpZCcsXG4gICAgICAgIHdpZHRoOiAyMDAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICB2YXIgYnV0dG9ucyA9IFtdO1xuXG4gICAgICAgICAgaWYgKHBhcmFtcy5yb3cuYnV0dG9uVHlwZSA9PSBcIuS/neWtmOaMiemSrlwiKSB7XG4gICAgICAgICAgICBidXR0b25zLnB1c2goTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5FZGl0QnV0dG9uKGgsIHBhcmFtcywgXCJpZFwiLCBfc2VsZikpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJ1dHRvbnMucHVzaChMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUlubmVyQnV0dG9uLkRlbGV0ZUJ1dHRvbihoLCBwYXJhbXMsIFwiaWRcIiwgX3NlbGYpKTtcbiAgICAgICAgICBidXR0b25zLnB1c2goTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5Nb3ZlVXBCdXR0b24oaCwgcGFyYW1zLCBcImlkXCIsIF9zZWxmKSk7XG4gICAgICAgICAgYnV0dG9ucy5wdXNoKExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uTW92ZURvd25CdXR0b24oaCwgcGFyYW1zLCBcImlkXCIsIF9zZWxmKSk7XG4gICAgICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgICAgIFwiY2xhc3NcIjogXCJsaXN0LXJvdy1idXR0b24td3JhcFwiXG4gICAgICAgICAgfSwgYnV0dG9ucyk7XG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgdGFibGVEYXRhOiBbXSxcbiAgICAgIGlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhOiB7XG4gICAgICAgIGNhcHRpb246IFwiXCIsXG4gICAgICAgIHNhdmVBbmRDbG9zZTogXCJ0cnVlXCIsXG4gICAgICAgIGFwaXM6IFtdLFxuICAgICAgICBmaWVsZHM6IFtdLFxuICAgICAgICBpZDogXCJcIixcbiAgICAgICAgYnV0dG9uVHlwZTogXCLkv53lrZjmjInpkq5cIixcbiAgICAgICAgY3VzdFNlcnZlclJlc29sdmVNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RTZXJ2ZXJSZXNvbHZlTWV0aG9kUGFyYTogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2RQYXJhOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2RQYXJhOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZFBhcmE6IFwiXCJcbiAgICAgIH0sXG4gICAgICBhcGk6IHtcbiAgICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgICBnZXRBUElEYXRhOiBcIi9SZXN0L0J1aWxkZXIvQXBpSXRlbS9HZXRBUElTRm9yWlRyZWVOb2RlTGlzdFwiXG4gICAgICAgIH0sXG4gICAgICAgIGFwaVRyZWVPYmo6IG51bGwsXG4gICAgICAgIGFwaVRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIGNoa1N0eWxlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGFyZW50SWRcIixcbiAgICAgICAgICAgICAgcm9vdFBJZDogXCItMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjYWxsYmFjazoge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgICBfc2VsZi5hcGkuYXBpU2VsZWN0RGF0YSA9IHRyZWVOb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXBpRGF0YTogbnVsbCxcbiAgICAgICAgYXBpU2VsZWN0RGF0YTogbnVsbCxcbiAgICAgICAgZWRpdFRhYmxlT2JqZWN0OiBudWxsLFxuICAgICAgICBlZGl0VGFibGVDb25maWc6IHtcbiAgICAgICAgICBTdGF0dXM6IFwiRWRpdFwiLFxuICAgICAgICAgIEFkZEFmdGVyUm93RXZlbnQ6IG51bGwsXG4gICAgICAgICAgRGF0YUZpZWxkOiBcImZpZWxkTmFtZVwiLFxuICAgICAgICAgIFRlbXBsYXRlczogW3tcbiAgICAgICAgICAgIFRpdGxlOiBcIkFQSeWQjeensFwiLFxuICAgICAgICAgICAgQmluZE5hbWU6IFwidmFsdWVcIixcbiAgICAgICAgICAgIFJlbmRlcmVyOiBcIkVkaXRUYWJsZV9MYWJlbFwiLFxuICAgICAgICAgICAgVGl0bGVDZWxsQ2xhc3NOYW1lOiBcIlRpdGxlQ2VsbFwiLFxuICAgICAgICAgICAgRm9ybWF0ZXI6IGZ1bmN0aW9uIEZvcm1hdGVyKHZhbHVlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfc2VsZi5nZXRBUElUZXh0KHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBUaXRsZTogXCLosIPnlKjpobrluo9cIixcbiAgICAgICAgICAgIEJpbmROYW1lOiBcInJ1blRpbWVcIixcbiAgICAgICAgICAgIFJlbmRlcmVyOiBcIkVkaXRUYWJsZV9TZWxlY3RcIixcbiAgICAgICAgICAgIENsaWVudERhdGFTb3VyY2U6IFt7XG4gICAgICAgICAgICAgIFwiVGV4dFwiOiBcIuS5i+WJjVwiLFxuICAgICAgICAgICAgICBcIlZhbHVlXCI6IFwi5LmL5YmNXCJcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgXCJUZXh0XCI6IFwi5LmL5ZCOXCIsXG4gICAgICAgICAgICAgIFwiVmFsdWVcIjogXCLkuYvlkI5cIlxuICAgICAgICAgICAgfV0sXG4gICAgICAgICAgICBXaWR0aDogMTAwXG4gICAgICAgICAgfV0sXG4gICAgICAgICAgUm93SWRDcmVhdGVyOiBmdW5jdGlvbiBSb3dJZENyZWF0ZXIoKSB7fSxcbiAgICAgICAgICBUYWJsZUNsYXNzOiBcImVkaXQtdGFibGVcIixcbiAgICAgICAgICBSZW5kZXJlclRvOiBcImFwaUNvbnRhaW5lclwiLFxuICAgICAgICAgIFRhYmxlSWQ6IFwiYXBpQ29udGFpbmVyVGFibGVcIixcbiAgICAgICAgICBUYWJsZUF0dHJzOiB7XG4gICAgICAgICAgICBjZWxscGFkZGluZzogXCIxXCIsXG4gICAgICAgICAgICBjZWxsc3BhY2luZzogXCIxXCIsXG4gICAgICAgICAgICBib3JkZXI6IFwiMVwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZmllbGQ6IHtcbiAgICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgICBnZXRGb3JtTWFpblRhYmxlRmllbGRzOiBcIi9SZXN0L0J1aWxkZXIvRm9ybS9HZXRGb3JtTWFpblRhYmxlRmllbGRzXCJcbiAgICAgICAgfSxcbiAgICAgICAgZWRpdFRhYmxlT2JqZWN0OiBudWxsLFxuICAgICAgICBlZGl0VGFibGVDb25maWc6IHtcbiAgICAgICAgICBTdGF0dXM6IFwiRWRpdFwiLFxuICAgICAgICAgIEFkZEFmdGVyUm93RXZlbnQ6IG51bGwsXG4gICAgICAgICAgRGF0YUZpZWxkOiBcImZpZWxkTmFtZVwiLFxuICAgICAgICAgIFRlbXBsYXRlczogW3tcbiAgICAgICAgICAgIFRpdGxlOiBcIuihqOWQjeagh+mimFwiLFxuICAgICAgICAgICAgQmluZE5hbWU6IFwidGFibGVOYW1lXCIsXG4gICAgICAgICAgICBSZW5kZXJlcjogXCJFZGl0VGFibGVfTGFiZWxcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIFRpdGxlOiBcIuWtl+auteagh+mimFwiLFxuICAgICAgICAgICAgQmluZE5hbWU6IFwiZmllbGROYW1lXCIsXG4gICAgICAgICAgICBSZW5kZXJlcjogXCJFZGl0VGFibGVfU2VsZWN0XCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBUaXRsZTogXCLpu5jorqTlgLxcIixcbiAgICAgICAgICAgIEJpbmROYW1lOiBcImRlZmF1bHRWYWx1ZVwiLFxuICAgICAgICAgICAgUmVuZGVyZXI6IFwiRWRpdFRhYmxlX1NlbGVjdERlZmF1bHRWYWx1ZVwiLFxuICAgICAgICAgICAgSGlkZGVuOiBmYWxzZVxuICAgICAgICAgIH1dLFxuICAgICAgICAgIFJvd0lkQ3JlYXRlcjogZnVuY3Rpb24gUm93SWRDcmVhdGVyKCkge30sXG4gICAgICAgICAgVGFibGVDbGFzczogXCJlZGl0LXRhYmxlXCIsXG4gICAgICAgICAgUmVuZGVyZXJUbzogXCJmaWVsZENvbnRhaW5lclwiLFxuICAgICAgICAgIFRhYmxlSWQ6IFwiZmllbGRDb250YWluZXJUYWJsZVwiLFxuICAgICAgICAgIFRhYmxlQXR0cnM6IHtcbiAgICAgICAgICAgIGNlbGxwYWRkaW5nOiBcIjFcIixcbiAgICAgICAgICAgIGNlbGxzcGFjaW5nOiBcIjFcIixcbiAgICAgICAgICAgIGJvcmRlcjogXCIxXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvbGRGb3JtSWQ6IFwiXCJcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICByZWFkeTogZnVuY3Rpb24gcmVhZHkodGFibGVEYXRhSnNvbikge1xuICAgICAgaWYgKHRhYmxlRGF0YUpzb24gIT0gbnVsbCAmJiB0YWJsZURhdGFKc29uICE9IFwiXCIpIHtcbiAgICAgICAgdGhpcy50YWJsZURhdGEgPSBKc29uVXRpbGl0eS5TdHJpbmdUb0pzb24odGFibGVEYXRhSnNvbik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYmluZEFQSVRyZWVBbmRJbml0RWRpdFRhYmxlKG51bGwpO1xuICAgIH0sXG4gICAgZ2V0SnNvbjogZnVuY3Rpb24gZ2V0SnNvbigpIHtcbiAgICAgIHJldHVybiBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcodGhpcy50YWJsZURhdGEpO1xuICAgIH0sXG4gICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKGRpYWxvZ0VsZW0pIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnNbZGlhbG9nRWxlbV0pO1xuICAgIH0sXG4gICAgZWRpdDogZnVuY3Rpb24gZWRpdChpZCwgcGFyYW1zKSB7XG4gICAgICBpZiAocGFyYW1zLnJvd1tcImJ1dHRvblR5cGVcIl0gPT0gXCLkv53lrZjmjInpkq5cIikge1xuICAgICAgICB0aGlzLmVkaXRJbm5lckZvcm1TYXZlQnV0dG9uKHBhcmFtcyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBkZWw6IGZ1bmN0aW9uIGRlbChpZCwgcGFyYW1zKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudGFibGVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLnRhYmxlRGF0YVtpXS5pZCA9PSBpZCkge1xuICAgICAgICAgIEFycmF5VXRpbGl0eS5EZWxldGUodGhpcy50YWJsZURhdGEsIGkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBtb3ZlVXA6IGZ1bmN0aW9uIG1vdmVVcChpZCwgcGFyYW1zKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudGFibGVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLnRhYmxlRGF0YVtpXS5pZCA9PSBpZCkge1xuICAgICAgICAgIEFycmF5VXRpbGl0eS5Nb3ZlVXAodGhpcy50YWJsZURhdGEsIGkpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgbW92ZURvd246IGZ1bmN0aW9uIG1vdmVEb3duKGlkLCBwYXJhbXMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50YWJsZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHRoaXMudGFibGVEYXRhW2ldLmlkID09IGlkKSB7XG4gICAgICAgICAgQXJyYXlVdGlsaXR5Lk1vdmVEb3duKHRoaXMudGFibGVEYXRhLCBpKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGFkZElubmVyRm9ybVNhdmVCdXR0b246IGZ1bmN0aW9uIGFkZElubmVyRm9ybVNhdmVCdXR0b24oKSB7XG4gICAgICBpZiAodGhpcy5mb3JtSWQgIT0gbnVsbCAmJiB0aGlzLmZvcm1JZCAhPSBcIlwiKSB7XG4gICAgICAgIHRoaXMuZWRpdFNhdmVCdXR0b25TdGF0dWMgPSBcImFkZFwiO1xuICAgICAgICB0aGlzLnJlc2V0SW5uZXJTYXZlQnV0dG9uRGF0YSgpO1xuICAgICAgICB2YXIgZWxlbSA9IHRoaXMuJHJlZnMuaW5uZXJGb3JtQnV0dG9uRWRpdDtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5EaWFsb2dFbGVtT2JqKGVsZW0sIHtcbiAgICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgICBoZWlnaHQ6IDUyMCxcbiAgICAgICAgICB3aWR0aDogNzIwLFxuICAgICAgICAgIHRpdGxlOiBcIueql+S9k+WGheaMiemSrlwiXG4gICAgICAgIH0pO1xuICAgICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS13aWRnZXQtb3ZlcmxheVwiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDApO1xuICAgICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS1kaWFsb2dcIikuY3NzKFwiekluZGV4XCIsIDEwMTAxKTtcbiAgICAgICAgdGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YS5pZCA9IFwiaW5uZXJfZm9ybV9idXR0b25fXCIgKyBTdHJpbmdVdGlsaXR5LlRpbWVzdGFtcCgpO1xuICAgICAgICB0aGlzLmJpbmRUYWJsZUZpZWxkcyhudWxsKTtcbiAgICAgICAgdGhpcy5jbGVhckFQSSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLor7flhYjorr7nva7nu5HlrprnmoTnqpfkvZMhXCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZWRpdElubmVyRm9ybVNhdmVCdXR0b246IGZ1bmN0aW9uIGVkaXRJbm5lckZvcm1TYXZlQnV0dG9uKHBhcmFtcykge1xuICAgICAgdGhpcy5hZGRJbm5lckZvcm1TYXZlQnV0dG9uKCk7XG4gICAgICB0aGlzLmlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhID0gSnNvblV0aWxpdHkuQ2xvbmVTdHJpbmdpZnkocGFyYW1zLnJvdyk7XG4gICAgICB0aGlzLmVkaXRTYXZlQnV0dG9uU3RhdHVjID0gXCJlZGl0XCI7XG4gICAgICB0aGlzLmJpbmRBUElUcmVlQW5kSW5pdEVkaXRUYWJsZSh0aGlzLmlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmFwaXMpO1xuICAgICAgdGhpcy5iaW5kVGFibGVGaWVsZHModGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YS5maWVsZHMpO1xuICAgIH0sXG4gICAgcmVzZXRJbm5lclNhdmVCdXR0b25EYXRhOiBmdW5jdGlvbiByZXNldElubmVyU2F2ZUJ1dHRvbkRhdGEoKSB7XG4gICAgICB0aGlzLmlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhID0ge1xuICAgICAgICBjYXB0aW9uOiBcIlwiLFxuICAgICAgICBzYXZlQW5kQ2xvc2U6IFwidHJ1ZVwiLFxuICAgICAgICBhcGlzOiBbXSxcbiAgICAgICAgZmllbGRzOiBbXSxcbiAgICAgICAgaWQ6IFwiXCIsXG4gICAgICAgIGJ1dHRvblR5cGU6IFwi5L+d5a2Y5oyJ6ZKuXCIsXG4gICAgICAgIGN1c3RTZXJ2ZXJSZXNvbHZlTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0U2VydmVyUmVzb2x2ZU1ldGhvZFBhcmE6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlck1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyTWV0aG9kUGFyYTogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlckFmdGVyTWV0aG9kUGFyYTogXCJcIixcbiAgICAgICAgY3VzdENsaWVudENsaWNrQmVmb3JlTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2RQYXJhOiBcIlwiXG4gICAgICB9O1xuICAgIH0sXG4gICAgc2F2ZUlubmVyU2F2ZUJ1dHRvblRvTGlzdDogZnVuY3Rpb24gc2F2ZUlubmVyU2F2ZUJ1dHRvblRvTGlzdCgpIHtcbiAgICAgIHZhciBzaW5nbGVJbm5lckZvcm1CdXR0b25EYXRhID0gSnNvblV0aWxpdHkuQ2xvbmVTaW1wbGUodGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YSk7XG4gICAgICB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QuQ29tcGxldGVkRWRpdGluZ1JvdygpO1xuICAgICAgc2luZ2xlSW5uZXJGb3JtQnV0dG9uRGF0YS5hcGlzID0gdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LkdldFNlcmlhbGl6ZUpzb24oKTtcbiAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkNvbXBsZXRlZEVkaXRpbmdSb3coKTtcbiAgICAgIHNpbmdsZUlubmVyRm9ybUJ1dHRvbkRhdGEuZmllbGRzID0gdGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QuR2V0U2VyaWFsaXplSnNvbigpO1xuXG4gICAgICBpZiAodGhpcy5lZGl0U2F2ZUJ1dHRvblN0YXR1YyA9PSBcImFkZFwiKSB7XG4gICAgICAgIHRoaXMudGFibGVEYXRhLnB1c2goc2luZ2xlSW5uZXJGb3JtQnV0dG9uRGF0YSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudGFibGVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKHRoaXMudGFibGVEYXRhW2ldLmlkID09IHNpbmdsZUlubmVyRm9ybUJ1dHRvbkRhdGEuaWQpIHtcbiAgICAgICAgICAgIFZ1ZS5zZXQodGhpcy50YWJsZURhdGEsIGksIHNpbmdsZUlubmVyRm9ybUJ1dHRvbkRhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLmhhbmRsZUNsb3NlKFwiaW5uZXJGb3JtQnV0dG9uRWRpdFwiKTtcbiAgICB9LFxuICAgIGJpbmRUYWJsZUZpZWxkczogZnVuY3Rpb24gYmluZFRhYmxlRmllbGRzKG9sZERhdGEpIHtcbiAgICAgIGlmICh0aGlzLm9sZEZvcm1JZCAhPSB0aGlzLmZvcm1JZCkge1xuICAgICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuZmllbGQuYWNJbnRlcmZhY2UuZ2V0Rm9ybU1haW5UYWJsZUZpZWxkcywge1xuICAgICAgICAgIGZvcm1JZDogdGhpcy5mb3JtSWRcbiAgICAgICAgfSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgIHZhciBmaWVsZHNEYXRhID0gW107XG5cbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBmaWVsZHNEYXRhLnB1c2goe1xuICAgICAgICAgICAgICBWYWx1ZTogcmVzdWx0LmRhdGFbaV0uZmllbGROYW1lLFxuICAgICAgICAgICAgICBUZXh0OiByZXN1bHQuZGF0YVtpXS5maWVsZENhcHRpb25cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlQ29uZmlnLlRlbXBsYXRlc1swXS5EZWZhdWx0VmFsdWUgPSB7XG4gICAgICAgICAgICBUeXBlOiBcIkNvbnN0XCIsXG4gICAgICAgICAgICBWYWx1ZTogcmVzdWx0LmRhdGFbMF0udGFibGVOYW1lXG4gICAgICAgICAgfTtcbiAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZUNvbmZpZy5UZW1wbGF0ZXNbMV0uQ2xpZW50RGF0YVNvdXJjZSA9IGZpZWxkc0RhdGE7XG5cbiAgICAgICAgICBpZiAoIXRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0KSB7XG4gICAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdCA9IE9iamVjdC5jcmVhdGUoRWRpdFRhYmxlKTtcbiAgICAgICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkluaXRpYWxpemF0aW9uKHRoaXMuZmllbGQuZWRpdFRhYmxlQ29uZmlnKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLm9sZEZvcm1JZCA9IHRoaXMuZm9ybUlkO1xuXG4gICAgICAgICAgaWYgKG9sZERhdGEpIHtcbiAgICAgICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkxvYWRKc29uRGF0YShvbGREYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHRoaXMpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QpIHtcbiAgICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QuUmVtb3ZlQWxsUm93KCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChvbGREYXRhICYmIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0KSB7XG4gICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkxvYWRKc29uRGF0YShvbGREYXRhKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGFkZEZpZWxkOiBmdW5jdGlvbiBhZGRGaWVsZCgpIHtcbiAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkFkZEVkaXRpbmdSb3dCeVRlbXBsYXRlKCk7XG4gICAgfSxcbiAgICByZW1vdmVGaWVsZDogZnVuY3Rpb24gcmVtb3ZlRmllbGQoKSB7XG4gICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5SZW1vdmVSb3coKTtcbiAgICB9LFxuICAgIGFkZElubmVyRm9ybUNsb3NlQnV0dG9uOiBmdW5jdGlvbiBhZGRJbm5lckZvcm1DbG9zZUJ1dHRvbigpIHtcbiAgICAgIHZhciBjbG9zZUJ1dHRvbkRhdGEgPSB7XG4gICAgICAgIGNhcHRpb246IFwi5YWz6ZetXCIsXG4gICAgICAgIGlkOiBcImlubmVyX2Nsb3NlX2J1dHRvbl9cIiArIFN0cmluZ1V0aWxpdHkuVGltZXN0YW1wKCksXG4gICAgICAgIGJ1dHRvblR5cGU6IFwi5YWz6Zet5oyJ6ZKuXCJcbiAgICAgIH07XG4gICAgICB0aGlzLnRhYmxlRGF0YS5wdXNoKGNsb3NlQnV0dG9uRGF0YSk7XG4gICAgfSxcbiAgICBiaW5kQVBJVHJlZUFuZEluaXRFZGl0VGFibGU6IGZ1bmN0aW9uIGJpbmRBUElUcmVlQW5kSW5pdEVkaXRUYWJsZShvbGREYXRhKSB7XG4gICAgICBpZiAoIXRoaXMuYXBpLmFwaURhdGEpIHtcbiAgICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFwaS5hY0ludGVyZmFjZS5nZXRBUElEYXRhLCB7fSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgICAgdGhpcy5hcGkuYXBpRGF0YSA9IHJlc3VsdC5kYXRhO1xuXG4gICAgICAgICAgICBpZiAocmVzdWx0LmRhdGEgIT0gbnVsbCAmJiByZXN1bHQuZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0LmRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmRhdGFbaV0ubm9kZVR5cGVOYW1lID09IFwiR3JvdXBcIikge1xuICAgICAgICAgICAgICAgICAgcmVzdWx0LmRhdGFbaV0uaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvcGFja2FnZS5wbmdcIjtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgcmVzdWx0LmRhdGFbaV0uaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvYXBwbGljYXRpb25fdmlld19jb2x1bW5zLnBuZ1wiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFwaS5hcGlUcmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoXCIjYXBpWlRyZWVVTFwiKSwgdGhpcy5hcGkuYXBpVHJlZVNldHRpbmcsIHJlc3VsdC5kYXRhKTtcbiAgICAgICAgICAgIHRoaXMuYXBpLmFwaVRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgICAgICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKHRoaXMuYXBpLmFwaVRyZWVPYmosIHRoaXMuJHJlZnMudHh0X3NlYXJjaF9hcGlfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0ID0gT2JqZWN0LmNyZWF0ZShFZGl0VGFibGUpO1xuICAgICAgICB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QuSW5pdGlhbGl6YXRpb24odGhpcy5hcGkuZWRpdFRhYmxlQ29uZmlnKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZUFsbFJvdygpO1xuXG4gICAgICBpZiAob2xkRGF0YSkge1xuICAgICAgICB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QuTG9hZEpzb25EYXRhKG9sZERhdGEpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0QXBpQ29uZmlnQW5kQmluZFRvVGFibGU6IGZ1bmN0aW9uIGdldEFwaUNvbmZpZ0FuZEJpbmRUb1RhYmxlKCkge1xuICAgICAgcmV0dXJuO1xuXG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYXBpLmFjSW50ZXJmYWNlLmdldEJ1dHRvbkFwaUNvbmZpZywge30sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgdmFyIGFwaVNlbGVjdERhdGEgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdmFyIGdyb3VwID0ge1xuICAgICAgICAgICAgR3JvdXA6IHJlc3VsdC5kYXRhW2ldLm5hbWVcbiAgICAgICAgICB9O1xuICAgICAgICAgIHZhciBvcHRpb25zID0gW107XG5cbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlc3VsdC5kYXRhW2ldLmJ1dHRvbkFQSVZvTGlzdC5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgb3B0aW9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgVmFsdWU6IHJlc3VsdC5kYXRhW2ldLmJ1dHRvbkFQSVZvTGlzdFtqXS5pZCxcbiAgICAgICAgICAgICAgVGV4dDogcmVzdWx0LmRhdGFbaV0uYnV0dG9uQVBJVm9MaXN0W2pdLm5hbWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGdyb3VwW1wiT3B0aW9uc1wiXSA9IG9wdGlvbnM7XG4gICAgICAgICAgYXBpU2VsZWN0RGF0YS5wdXNoKGdyb3VwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9zZWxmLmFwaS5lZGl0VGFibGVDb25maWcuVGVtcGxhdGVzWzBdLkNsaWVudERhdGFTb3VyY2UgPSBhcGlTZWxlY3REYXRhO1xuICAgICAgICBfc2VsZi5hcGkuZWRpdFRhYmxlT2JqZWN0ID0gT2JqZWN0LmNyZWF0ZShFZGl0VGFibGUpO1xuXG4gICAgICAgIF9zZWxmLmFwaS5lZGl0VGFibGVPYmplY3QuSW5pdGlhbGl6YXRpb24oX3NlbGYuYXBpLmVkaXRUYWJsZUNvbmZpZyk7XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIGFkZEFQSTogZnVuY3Rpb24gYWRkQVBJKCkge1xuICAgICAgaWYgKHRoaXMuYXBpLmFwaVNlbGVjdERhdGEubm9kZVR5cGVOYW1lID09IFwiQVBJXCIpIHtcbiAgICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LkFkZEVkaXRpbmdSb3dCeVRlbXBsYXRlKFtdLCB7XG4gICAgICAgICAgdmFsdWU6IHRoaXMuYXBpLmFwaVNlbGVjdERhdGEudmFsdWUsXG4gICAgICAgICAgcnVuVGltZTogXCLkuYvlkI5cIlxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+36YCJ5oup6ZyA6KaB5re75Yqg55qEQVBJIVwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHJlbW92ZUFQSTogZnVuY3Rpb24gcmVtb3ZlQVBJKCkge1xuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZVJvdygpO1xuICAgIH0sXG4gICAgY2xlYXJBUEk6IGZ1bmN0aW9uIGNsZWFyQVBJKCkge1xuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZUFsbFJvdygpO1xuICAgIH0sXG4gICAgZ2V0QVBJVGV4dDogZnVuY3Rpb24gZ2V0QVBJVGV4dCh2YWx1ZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmFwaS5hcGlEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLmFwaS5hcGlEYXRhW2ldLm5vZGVUeXBlTmFtZSA9PSBcIkFQSVwiKSB7XG4gICAgICAgICAgaWYgKHRoaXMuYXBpLmFwaURhdGFbaV0udmFsdWUgPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaS5hcGlEYXRhW2ldLnRleHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiBzdHlsZT1cXFwiaGVpZ2h0OiAyMTBweFxcXCIgY2xhc3M9XFxcIml2LWxpc3QtcGFnZS13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgcmVmPVxcXCJpbm5lckZvcm1CdXR0b25FZGl0XFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy13cmFwZXIgZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmU7bWFyZ2luLXRvcDogMHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGFicyBzaXplPVxcXCJzbWFsbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWItcGFuZSBsYWJlbD1cXFwiXFx1N0VEMVxcdTVCOUFcXHU0RkUxXFx1NjA2RlxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogNjBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDIyMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTY4MDdcXHU5ODk4XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY2FwdGlvblxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NEZERFxcdTVCNThcXHU1RTc2XFx1NTE3M1xcdTk1RURcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5zYXZlQW5kQ2xvc2VcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcInRydWVcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcImZhbHNlXFxcIj5cXHU1NDI2PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTVCNTdcXHU2QkI1XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiaGVpZ2h0OiAxNDBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiBsZWZ0O3dpZHRoOiA5NCVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cXFwiZmllbGRDb250YWluZXJcXFwiIGNsYXNzPVxcXCJlZGl0LXRhYmxlLXdyYXBcXFwiIHN0eWxlPVxcXCJoZWlnaHQ6IDMyMHB4O292ZXJmbG93OiBhdXRvO3dpZHRoOiA5OCU7bWFyZ2luOiBhdXRvXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiByaWdodDt3aWR0aDogNSVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cCB2ZXJ0aWNhbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIGljb249XFxcIm1kLWFkZFxcXCIgQGNsaWNrPVxcXCJhZGRGaWVsZFxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLWNsb3NlXFxcIiBAY2xpY2s9XFxcInJlbW92ZUZpZWxkXFxcIj48L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWItcGFuZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYi1wYW5lIGxhYmVsPVxcXCJBUElcXHU4QkJFXFx1N0Y2RVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMzIwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiA2MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwiYmFja2dyb3VuZDogI2ZmZmZmZlxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2VhcmNoIGNsYXNzPVxcXCJpbnB1dF9ib3JkZXJfYm90dG9tXFxcIiByZWY9XFxcInR4dF9zZWFyY2hfYXBpX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVBUElcXHU1NDBEXFx1NzlGMFxcXCI+PC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBpZD1cXFwiYXBpWlRyZWVVTFxcXCIgY2xhc3M9XFxcInp0cmVlXFxcIiBzdHlsZT1cXFwiaGVpZ2h0OiAzMjBweDtvdmVyZmxvdzogYXV0b1xcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwIHZlcnRpY2FsPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIGljb249XFxcIm1kLWFkZFxcXCIgQGNsaWNrPVxcXCJhZGRBUElcXFwiPjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBzaXplPVxcXCJzbWFsbFxcXCIgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtY2xvc2VcXFwiIEBjbGljaz1cXFwicmVtb3ZlQVBJXFxcIj48L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcImlvcy10cmFzaFxcXCIgQGNsaWNrPVxcXCJjbGVhckFQSVxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcImJhY2tncm91bmQ6ICNmZmZmZmY7XFxcIiB2YWxpZ249XFxcInRvcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cXFwiYXBpQ29udGFpbmVyXFxcIiBjbGFzcz1cXFwiZWRpdC10YWJsZS13cmFwXFxcIiBzdHlsZT1cXFwiaGVpZ2h0OiAzNDBweDtvdmVyZmxvdzogYXV0bzt3aWR0aDogOTglO21hcmdpbjogYXV0b1xcXCI+PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYi1wYW5lPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFiLXBhbmUgbGFiZWw9XFxcIlxcdTVGMDBcXHU1M0QxXFx1NjI2OVxcdTVDNTVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNlbGxwYWRkaW5nPVxcXCIwXFxcIiBjZWxsc3BhY2luZz1cXFwiMFxcXCIgYm9yZGVyPVxcXCIwXFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy10YWJsZS13cmFwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDE1MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5JRFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmlkXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU2NzBEXFx1NTJBMVxcdTdBRUZcXHU4OUUzXFx1Njc5MFxcdTdDN0JcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5jdXN0U2VydmVyUmVzb2x2ZU1ldGhvZFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU2MzA5XFx1OTRBRVxcdThGREJcXHU4ODRDXFx1NjcwRFxcdTUyQTFcXHU3QUVGXFx1ODlFM1xcdTY3OTBcXHU2NUY2LFxcdTdDN0JcXHU1MTY4XFx1NzlGMCxcXHU1QzA2XFx1OEMwM1xcdTc1MjhcXHU4QkU1XFx1N0M3QixcXHU5NzAwXFx1ODk4MVxcdTVCOUVcXHU3M0IwXFx1NjNBNVxcdTUzRTNJRm9ybUJ1dHRvbkN1c3RSZXNvbHZlXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTUzQzJcXHU2NTcwXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY3VzdFNlcnZlclJlc29sdmVNZXRob2RQYXJhXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTY3MERcXHU1MkExXFx1N0FFRlxcdTg5RTNcXHU2NzkwXFx1N0M3QlxcdTc2ODRcXHU1M0MyXFx1NjU3MFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU2RTMyXFx1NjdEM1xcdTY1QjlcXHU2Q0Q1XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY3VzdENsaWVudFJlbmRlcmVyTWV0aG9kXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTZFMzJcXHU2N0QzXFx1NjVCOVxcdTZDRDUsXFx1NjMwOVxcdTk0QUVcXHU1QzA2XFx1N0VDRlxcdTc1MzFcXHU4QkU1XFx1NjVCOVxcdTZDRDVcXHU2RTMyXFx1NjdEMyxcXHU2NzAwXFx1N0VDOFxcdTVGNjJcXHU2MjEwXFx1OTg3NVxcdTk3NjJcXHU1MTQzXFx1N0QyMCxcXHU5NzAwXFx1ODk4MVxcdThGRDRcXHU1NkRFXFx1NjcwMFxcdTdFQzhcXHU1MTQzXFx1N0QyMFxcdTc2ODRIVE1MXFx1NUJGOVxcdThDNjFcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NTNDMlxcdTY1NzBcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5jdXN0Q2xpZW50UmVuZGVyZXJNZXRob2RQYXJhXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTZFMzJcXHU2N0QzXFx1NjVCOVxcdTZDRDVcXHU3Njg0XFx1NTNDMlxcdTY1NzBcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU1NDBFXFx1NjVCOVxcdTZDRDVcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5jdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU2RTMyXFx1NjdEM1xcdTU0MEVcXHU4QzAzXFx1NzUyOFxcdTY1QjlcXHU2Q0Q1LFxcdTdFQ0ZcXHU4RkM3XFx1OUVEOFxcdThCQTRcXHU3Njg0XFx1NkUzMlxcdTY3RDMsXFx1NjVFMFxcdThGRDRcXHU1NkRFXFx1NTAzQ1xcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1M0MyXFx1NjU3MFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmN1c3RDbGllbnRSZW5kZXJlckFmdGVyTWV0aG9kUGFyYVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU2RTMyXFx1NjdEM1xcdTU0MEVcXHU2NUI5XFx1NkNENVxcdTc2ODRcXHU1M0MyXFx1NjU3MFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU3MEI5XFx1NTFGQlxcdTUyNERcXHU2NUI5XFx1NkNENVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU3MEI5XFx1NTFGQlxcdThCRTVcXHU2MzA5XFx1OTRBRVxcdTY1RjZcXHU3Njg0XFx1NTI0RFxcdTdGNkVcXHU2NUI5XFx1NkNENSxcXHU1OTgyXFx1Njc5Q1xcdThGRDRcXHU1NkRFZmFsc2VcXHU1QzA2XFx1OTYzQlxcdTZCNjJcXHU5RUQ4XFx1OEJBNFxcdThDMDNcXHU3NTI4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTUzQzJcXHU2NTcwXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY3VzdENsaWVudENsaWNrQmVmb3JlTWV0aG9kUGFyYVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU3MEI5XFx1NTFGQlxcdTUyNERcXHU2NUI5XFx1NkNENVxcdTc2ODRcXHU1M0MyXFx1NjU3MFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFiLXBhbmU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJzPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1vdXRlci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLWlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJzYXZlSW5uZXJTYXZlQnV0dG9uVG9MaXN0KClcXFwiPiBcXHU0RkREIFxcdTVCNTg8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImhhbmRsZUNsb3NlKCdpbm5lckZvcm1CdXR0b25FZGl0JylcXFwiPlxcdTUxNzMgXFx1OTVFRDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImhlaWdodDogMjEwcHg7d2lkdGg6IDEwMCVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiBsZWZ0O3dpZHRoOiA4NCVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS10YWJsZSA6aGVpZ2h0PVxcXCIyMTBcXFwiIHdpZHRoPVxcXCIxMDAlXFxcIiBzdHJpcGUgYm9yZGVyIDpjb2x1bW5zPVxcXCJjb2x1bW5zQ29uZmlnXFxcIiA6ZGF0YT1cXFwidGFibGVEYXRhXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcIml2LWxpc3QtdGFibGVcXFwiIDpoaWdobGlnaHQtcm93PVxcXCJ0cnVlXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cXFwic21hbGxcXFwiPjwvaS10YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogcmlnaHQ7d2lkdGg6IDE1JVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25Hcm91cCB2ZXJ0aWNhbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJzdWNjZXNzXFxcIiBAY2xpY2s9XFxcImFkZElubmVyRm9ybVNhdmVCdXR0b24oKVxcXCIgaWNvbj1cXFwibWQtYWRkXFxcIj5cXHU0RkREXFx1NUI1OFxcdTYzMDlcXHU5NEFFPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBpY29uPVxcXCJtZC1hZGRcXFwiIGRpc2FibGVkPlxcdTYxMEZcXHU4OUMxXFx1NjMwOVxcdTk0QUU8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwiYWRkSW5uZXJGb3JtQ2xvc2VCdXR0b24oKVxcXCIgaWNvbj1cXFwibWQtYWRkXFxcIj5cXHU1MTczXFx1OTVFRFxcdTYzMDlcXHU5NEFFPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBkaXNhYmxlZCBpY29uPVxcXCJtZC1hZGRcXFwiPlxcdTYyRjdcXHU4RDFESnNvbjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gZGlzYWJsZWQgaWNvbj1cXFwibWQtYWRkXFxcIj5cXHU5RUNGXFx1OEQzNEpzb248L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbkdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImxpc3Qtc2VhcmNoLWNvbnRyb2wtYmluZC10by1jb21wXCIsIHtcbiAgcHJvcHM6IFtcImJpbmRUb1NlYXJjaEZpZWxkUHJvcFwiLCBcImRhdGFTZXRJZFwiXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGJpbmRUb1NlYXJjaEZpZWxkOiB7XG4gICAgICAgIGNvbHVtblRpdGxlOiBcIlwiLFxuICAgICAgICBjb2x1bW5UYWJsZU5hbWU6IFwiXCIsXG4gICAgICAgIGNvbHVtbk5hbWU6IFwiXCIsXG4gICAgICAgIGNvbHVtbkNhcHRpb246IFwiXCIsXG4gICAgICAgIGNvbHVtbkRhdGFUeXBlTmFtZTogXCJcIixcbiAgICAgICAgY29sdW1uT3BlcmF0b3I6IFwi5Yy56YWNXCJcbiAgICAgIH0sXG4gICAgICBkZWZhdWx0VmFsdWU6IHtcbiAgICAgICAgZGVmYXVsdFR5cGU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogXCJcIixcbiAgICAgICAgZGVmYXVsdFRleHQ6IFwiXCJcbiAgICAgIH0sXG4gICAgICB0cmVlOiB7XG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIGNoa1N0eWxlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGlkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0Q29sdW1uKHRyZWVOb2RlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkRibENsaWNrOiBmdW5jdGlvbiBvbkRibENsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7fSxcbiAgICAgICAgICAgIG9uQXN5bmNTdWNjZXNzOiBmdW5jdGlvbiBvbkFzeW5jU3VjY2VzcyhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSwgbXNnKSB7fVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdHJlZURhdGE6IG51bGxcbiAgICAgIH0sXG4gICAgICB0ZW1wRGF0YToge1xuICAgICAgICBkZWZhdWx0RGlzcGxheVRleHQ6IFwiXCJcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIGJpbmRUb1NlYXJjaEZpZWxkUHJvcDogZnVuY3Rpb24gYmluZFRvU2VhcmNoRmllbGRQcm9wKG5ld1ZhbHVlKSB7XG4gICAgICBjb25zb2xlLmxvZyhuZXdWYWx1ZSk7XG4gICAgfSxcbiAgICBkZWZhdWx0VmFsdWVQcm9wOiBmdW5jdGlvbiBkZWZhdWx0VmFsdWVQcm9wKG5ld1ZhbHVlKSB7XG4gICAgICB0aGlzLmRlZmF1bHRWYWx1ZSA9IG5ld1ZhbHVlO1xuXG4gICAgICBpZiAoIVN0cmluZ1V0aWxpdHkuSXNOdWxsT3JFbXB0eSh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSkpIHtcbiAgICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5iaW5kVG9GaWVsZCA9IHRoaXMuYmluZFRvRmllbGRQcm9wO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdChkYXRhU2V0UE8pIHtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGFTZXRQTyk7XG4gICAgICB2YXIgdHJlZU5vZGVBcnJheSA9IFtdO1xuICAgICAgdmFyIHJvb3ROb2RlID0ge1xuICAgICAgICBwaWQ6IFwiLTFcIixcbiAgICAgICAgdGV4dDogZGF0YVNldFBPLmRzTmFtZSxcbiAgICAgICAgaWQ6IGRhdGFTZXRQTy5kc0lkLFxuICAgICAgICBub2RlVHlwZTogXCJEYXRhU2V0XCJcbiAgICAgIH07XG4gICAgICB0cmVlTm9kZUFycmF5LnB1c2gocm9vdE5vZGUpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdHJlZU5vZGVBcnJheS5wdXNoKHtcbiAgICAgICAgICBwaWQ6IGRhdGFTZXRQTy5kc0lkLFxuICAgICAgICAgIHRleHQ6IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3RbaV0ucnRUYWJsZUNhcHRpb24sXG4gICAgICAgICAgaWQ6IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3RbaV0ucnRUYWJsZUlkLFxuICAgICAgICAgIG5vZGVUeXBlOiBcIlRhYmxlXCJcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBkYXRhU2V0UE8ucmVsYXRlZFRhYmxlVm9MaXN0W2ldLnRhYmxlRmllbGRQT0xpc3QubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICB2YXIgc2luZ2xlTm9kZSA9IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3RbaV0udGFibGVGaWVsZFBPTGlzdFtqXTtcbiAgICAgICAgICBzaW5nbGVOb2RlLnBpZCA9IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3RbaV0ucnRUYWJsZUlkO1xuICAgICAgICAgIHNpbmdsZU5vZGUudGV4dCA9IHNpbmdsZU5vZGUuZmllbGRDYXB0aW9uICsgXCJbXCIgKyBzaW5nbGVOb2RlLmZpZWxkTmFtZSArIFwiXVwiO1xuICAgICAgICAgIHNpbmdsZU5vZGUubm9kZVR5cGUgPSBcIlRhYmxlRmllbGRcIjtcbiAgICAgICAgICBzaW5nbGVOb2RlLmlkID0gc2luZ2xlTm9kZS5maWVsZElkO1xuICAgICAgICAgIHNpbmdsZU5vZGUuaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvcGFnZS5wbmdcIjtcbiAgICAgICAgICB0cmVlTm9kZUFycmF5LnB1c2goc2luZ2xlTm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy50cmVlLnRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJCh0aGlzLiRyZWZzLnpUcmVlVUwpLCB0aGlzLnRyZWUudHJlZVNldHRpbmcsIHRyZWVOb2RlQXJyYXkpO1xuICAgICAgdGhpcy50cmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKHRoaXMudHJlZS50cmVlT2JqLCB0aGlzLiRyZWZzLnR4dF9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgfSxcbiAgICBzZWxlY3RDb2x1bW46IGZ1bmN0aW9uIHNlbGVjdENvbHVtbihmaWVsZFBPKSB7XG4gICAgICBpZiAoZmllbGRQTy5ub2RlVHlwZSA9PSBcIlRhYmxlRmllbGRcIikge1xuICAgICAgICB0aGlzLmJpbmRUb1NlYXJjaEZpZWxkLmNvbHVtblRhYmxlTmFtZSA9IGZpZWxkUE8udGFibGVOYW1lO1xuICAgICAgICB0aGlzLmJpbmRUb1NlYXJjaEZpZWxkLmNvbHVtbk5hbWUgPSBmaWVsZFBPLmZpZWxkTmFtZTtcbiAgICAgICAgdGhpcy5iaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5DYXB0aW9uID0gZmllbGRQTy5maWVsZENhcHRpb247XG4gICAgICAgIHRoaXMuYmluZFRvU2VhcmNoRmllbGQuY29sdW1uRGF0YVR5cGVOYW1lID0gZmllbGRQTy5maWVsZERhdGFUeXBlO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHtcbiAgICAgIGNvbnNvbGUubG9nKHRoaXMuYmluZFRvU2VhcmNoRmllbGQpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYmluZFRvU2VhcmNoRmllbGQ6IHRoaXMuYmluZFRvU2VhcmNoRmllbGQsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogdGhpcy5kZWZhdWx0VmFsdWVcbiAgICAgIH07XG4gICAgfSxcbiAgICBzZXREYXRhOiBmdW5jdGlvbiBzZXREYXRhKGJpbmRUb1NlYXJjaEZpZWxkLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIGNvbnNvbGUubG9nKGJpbmRUb1NlYXJjaEZpZWxkKTtcbiAgICAgIHRoaXMuYmluZFRvU2VhcmNoRmllbGQgPSBiaW5kVG9TZWFyY2hGaWVsZDtcbiAgICAgIHRoaXMuZGVmYXVsdFZhbHVlID0gZGVmYXVsdFZhbHVlO1xuICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICB9LFxuICAgIHNlbGVjdERlZmF1bHRWYWx1ZVZpZXc6IGZ1bmN0aW9uIHNlbGVjdERlZmF1bHRWYWx1ZVZpZXcoKSB7XG4gICAgICB3aW5kb3cuX1NlbGVjdEJpbmRPYmogPSB0aGlzO1xuICAgICAgd2luZG93LnBhcmVudC5saXN0RGVzaWduLnNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ0JlZ2luKHdpbmRvdywgbnVsbCk7XG4gICAgfSxcbiAgICBzZXRTZWxlY3RFbnZWYXJpYWJsZVJlc3VsdFZhbHVlOiBmdW5jdGlvbiBzZXRTZWxlY3RFbnZWYXJpYWJsZVJlc3VsdFZhbHVlKHJlc3VsdCkge1xuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlID0gcmVzdWx0LlR5cGU7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRWYWx1ZSA9IHJlc3VsdC5WYWx1ZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQgPSByZXN1bHQuVGV4dDtcbiAgICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlID0gXCJcIjtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFZhbHVlID0gXCJcIjtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQgPSBcIlwiO1xuICAgICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IFwiXCI7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAyODBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NjgwN1xcdTk4OThcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5UaXRsZVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHJvd3NwYW49XFxcIjlcXFwiIHZhbGlnbj1cXFwidG9wXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cXFwiaW5wdXRfYm9yZGVyX2JvdHRvbVxcXCIgcmVmPVxcXCJ0eHRfc2VhcmNoX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVcXHU1MjE3XFx1NTQwRFxcdTYyMTZcXHU4MDA1XFx1NjgwN1xcdTk4OThcXFwiPjwvaS1pbnB1dD4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCByZWY9XFxcInpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZSBkaXYtY3VzdG9tLXNjcm9sbFxcXCIgc3R5bGU9XFxcImhlaWdodDogNDMwcHg7b3ZlcmZsb3cteDpoaWRkZW47b3ZlcmZsb3cteTogc2Nyb2xsXFxcIj48L3VsPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU2MjQwXFx1NUM1RVxcdTg4NjhcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7YmluZFRvU2VhcmNoRmllbGQuY29sdW1uVGFibGVOYW1lfX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1N0VEMVxcdTVCOUFcXHU1QjU3XFx1NkJCNVxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5DYXB0aW9ufX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NUI1N1xcdTZCQjVcXHU1NDBEXFx1NzlGMFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5OYW1lfX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NUI1N1xcdTZCQjVcXHU3QzdCXFx1NTc4QlxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5EYXRhVHlwZU5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU4RkQwXFx1N0I5N1xcdTdCMjZcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXNlbGVjdCB2LW1vZGVsPVxcXCJiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5PcGVyYXRvclxcXCIgc3R5bGU9XFxcIndpZHRoOjI2MHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcImVxXFxcIj5cXHU3QjQ5XFx1NEU4RTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJsaWtlXFxcIj5cXHU1MzM5XFx1OTE0RDwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJub3RfZXFcXFwiPlxcdTRFMERcXHU3QjQ5XFx1NEU4RTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJndFxcXCI+XFx1NTkyN1xcdTRFOEU8L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2YWx1ZT1cXFwiZ3RfZXFcXFwiPlxcdTU5MjdcXHU0RThFXFx1N0I0OVxcdTRFOEU8L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2YWx1ZT1cXFwibHRcXFwiPlxcdTVDMEZcXHU0RThFPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcImx0X2VxXFxcIj5cXHU1QzBGXFx1NEU4RVxcdTdCNDlcXHU0RThFPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcImxlZnRfbGlrZVxcXCI+XFx1NURFNlxcdTUzMzlcXHU5MTREPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcInJpZ2h0X2xpa2VcXFwiPlxcdTUzRjNcXHU1MzM5XFx1OTE0RDwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJpbmNsdWRlXFxcIj5cXHU1MzA1XFx1NTQyQltcXHU2NjgyXFx1NjVGNlxcdTRFMERcXHU2NTJGXFx1NjMwMV08L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLXNlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjJcXFwiPlxcdTlFRDhcXHU4QkE0XFx1NTAzQzxidXR0b24gY2xhc3M9XFxcImJ0bi1zZWxlY3QgZnJpZ2h0XFxcIiB2LW9uOmNsaWNrPVxcXCJzZWxlY3REZWZhdWx0VmFsdWVWaWV3XFxcIj4uLi48L2J1dHRvbj48L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHN0eWxlPVxcXCJoZWlnaHQ6IDM1cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiMlxcXCIgc3R5bGU9XFxcImJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7dGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0fX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NTkwN1xcdTZDRThcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSByb3dzPVxcXCI4XFxcIj48L3RleHRhcmVhPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICA8L3RhYmxlPlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImxpc3QtdGFibGUtbGFiZWwtYmluZC10by1jb21wXCIsIHtcbiAgcHJvcHM6IFtcImJpbmRQcm9wUHJvcFwiLCBcImRhdGFTZXRJZFwiXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGJpbmRQcm9wOiB7XG4gICAgICAgIGNvbHVtblRhYmxlTmFtZTogXCJcIixcbiAgICAgICAgY29sdW1uTmFtZTogXCJcIixcbiAgICAgICAgY29sdW1uQ2FwdGlvbjogXCJcIixcbiAgICAgICAgY29sdW1uRGF0YVR5cGVOYW1lOiBcIlwiLFxuICAgICAgICB0YXJnZXRCdXR0b25JZDogXCJcIixcbiAgICAgICAgY29sdW1uQWxpZ246IFwi5bGF5Lit5a+56b2QXCJcbiAgICAgIH0sXG4gICAgICBkZWZhdWx0VmFsdWU6IHtcbiAgICAgICAgZGVmYXVsdFR5cGU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogXCJcIixcbiAgICAgICAgZGVmYXVsdFRleHQ6IFwiXCJcbiAgICAgIH0sXG4gICAgICB0cmVlOiB7XG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIGNoa1N0eWxlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGlkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0Q29sdW1uKHRyZWVOb2RlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkRibENsaWNrOiBmdW5jdGlvbiBvbkRibENsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7fSxcbiAgICAgICAgICAgIG9uQXN5bmNTdWNjZXNzOiBmdW5jdGlvbiBvbkFzeW5jU3VjY2VzcyhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSwgbXNnKSB7fVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdHJlZURhdGE6IG51bGxcbiAgICAgIH0sXG4gICAgICB0ZW1wRGF0YToge1xuICAgICAgICBkZWZhdWx0RGlzcGxheVRleHQ6IFwiXCJcbiAgICAgIH0sXG4gICAgICBidXR0b25zOiBbXVxuICAgIH07XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgYmluZFByb3BQcm9wOiBmdW5jdGlvbiBiaW5kUHJvcFByb3AobmV3VmFsdWUpIHtcbiAgICAgIGNvbnNvbGUubG9nKG5ld1ZhbHVlKTtcbiAgICB9LFxuICAgIGRlZmF1bHRWYWx1ZVByb3A6IGZ1bmN0aW9uIGRlZmF1bHRWYWx1ZVByb3AobmV3VmFsdWUpIHtcbiAgICAgIHRoaXMuZGVmYXVsdFZhbHVlID0gbmV3VmFsdWU7XG5cbiAgICAgIGlmICghU3RyaW5nVXRpbGl0eS5Jc051bGxPckVtcHR5KHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlKSkge1xuICAgICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IERlZmF1bHRWYWx1ZVV0aWxpdHkuZm9ybWF0VGV4dCh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSwgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmJpbmRUb0ZpZWxkID0gdGhpcy5iaW5kVG9GaWVsZFByb3A7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBpbml0OiBmdW5jdGlvbiBpbml0KGRhdGFTZXRWbywgYnV0dG9ucykge1xuICAgICAgY29uc29sZS5sb2coZGF0YVNldFZvKTtcbiAgICAgIHZhciB0cmVlTm9kZUFycmF5ID0gW107XG4gICAgICB2YXIgdHJlZU5vZGVEYXRhID0gZGF0YVNldFZvLmNvbHVtblZvTGlzdDtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0cmVlTm9kZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNpbmdsZU5vZGUgPSB0cmVlTm9kZURhdGFbaV07XG4gICAgICAgIHNpbmdsZU5vZGUucGlkID0gZGF0YVNldFZvLmRzSWQ7XG4gICAgICAgIHNpbmdsZU5vZGUudGV4dCA9IHNpbmdsZU5vZGUuY29sdW1uQ2FwdGlvbiArIFwiW1wiICsgc2luZ2xlTm9kZS5jb2x1bW5OYW1lICsgXCJdXCI7XG4gICAgICAgIHNpbmdsZU5vZGUubm9kZVR5cGUgPSBcIkRhdGFTZXRDb2x1bW5cIjtcbiAgICAgICAgc2luZ2xlTm9kZS5pZCA9IHNpbmdsZU5vZGUuY29sdW1uSWQ7XG4gICAgICAgIHNpbmdsZU5vZGUuaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvcGFnZS5wbmdcIjtcbiAgICAgICAgdHJlZU5vZGVBcnJheS5wdXNoKHNpbmdsZU5vZGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcm9vdE5vZGUgPSB7XG4gICAgICAgIHBpZDogXCItMVwiLFxuICAgICAgICB0ZXh0OiBkYXRhU2V0Vm8uZHNOYW1lLFxuICAgICAgICBpZDogZGF0YVNldFZvLmRzSWQsXG4gICAgICAgIG5vZGVUeXBlOiBcIkRhdGFTZXRcIlxuICAgICAgfTtcbiAgICAgIHRyZWVOb2RlQXJyYXkucHVzaChyb290Tm9kZSk7XG4gICAgICB0aGlzLnRyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKHRoaXMuJHJlZnMuelRyZWVVTCksIHRoaXMudHJlZS50cmVlU2V0dGluZywgdHJlZU5vZGVBcnJheSk7XG4gICAgICB0aGlzLnRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgICB0aGlzLmJ1dHRvbnMgPSBidXR0b25zO1xuICAgIH0sXG4gICAgc2VsZWN0Q29sdW1uOiBmdW5jdGlvbiBzZWxlY3RDb2x1bW4oY29sdW1uVm8pIHtcbiAgICAgIHRoaXMuYmluZFByb3AuY29sdW1uVGFibGVOYW1lID0gY29sdW1uVm8uY29sdW1uVGFibGVOYW1lO1xuICAgICAgdGhpcy5iaW5kUHJvcC5jb2x1bW5OYW1lID0gY29sdW1uVm8uY29sdW1uTmFtZTtcbiAgICAgIHRoaXMuYmluZFByb3AuY29sdW1uQ2FwdGlvbiA9IGNvbHVtblZvLmNvbHVtbkNhcHRpb247XG4gICAgICB0aGlzLmJpbmRQcm9wLmNvbHVtbkRhdGFUeXBlTmFtZSA9IGNvbHVtblZvLmNvbHVtbkRhdGFUeXBlTmFtZTtcbiAgICB9LFxuICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmJpbmRQcm9wKTtcblxuICAgICAgaWYgKCF0aGlzLmJpbmRQcm9wLnRhcmdldEJ1dHRvbklkKSB7XG4gICAgICAgIHRoaXMuYmluZFByb3AudGFyZ2V0QnV0dG9uSWQgPSBcIlwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBiaW5kUHJvcDogdGhpcy5iaW5kUHJvcCxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiB0aGlzLmRlZmF1bHRWYWx1ZVxuICAgICAgfTtcbiAgICB9LFxuICAgIHNldERhdGE6IGZ1bmN0aW9uIHNldERhdGEoYmluZFByb3AsIGRlZmF1bHRWYWx1ZSkge1xuICAgICAgY29uc29sZS5sb2coYmluZFByb3ApO1xuICAgICAgdGhpcy5iaW5kUHJvcCA9IGJpbmRQcm9wO1xuICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPSBkZWZhdWx0VmFsdWU7XG4gICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IERlZmF1bHRWYWx1ZVV0aWxpdHkuZm9ybWF0VGV4dCh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSwgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpO1xuICAgIH0sXG4gICAgc2VsZWN0RGVmYXVsdFZhbHVlVmlldzogZnVuY3Rpb24gc2VsZWN0RGVmYXVsdFZhbHVlVmlldygpIHtcbiAgICAgIHdpbmRvdy5fU2VsZWN0QmluZE9iaiA9IHRoaXM7XG4gICAgICB3aW5kb3cucGFyZW50Lmxpc3REZXNpZ24uc2VsZWN0RGVmYXVsdFZhbHVlRGlhbG9nQmVnaW4od2luZG93LCBudWxsKTtcbiAgICB9LFxuICAgIHNldFNlbGVjdEVudlZhcmlhYmxlUmVzdWx0VmFsdWU6IGZ1bmN0aW9uIHNldFNlbGVjdEVudlZhcmlhYmxlUmVzdWx0VmFsdWUocmVzdWx0KSB7XG4gICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUgPSByZXN1bHQuVHlwZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFZhbHVlID0gcmVzdWx0LlZhbHVlO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCA9IHJlc3VsdC5UZXh0O1xuICAgICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IERlZmF1bHRWYWx1ZVV0aWxpdHkuZm9ybWF0VGV4dCh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSwgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUgPSBcIlwiO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VmFsdWUgPSBcIlwiO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCA9IFwiXCI7XG4gICAgICAgIHRoaXMudGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0ID0gXCJcIjtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjx0YWJsZSBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCIgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDI4MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgLz5cXG4gICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1QkY5XFx1OUY1MFxcdTY1QjlcXHU1RjBGXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3Qgdi1tb2RlbD1cXFwiYmluZFByb3AuY29sdW1uQWxpZ25cXFwiIHN0eWxlPVxcXCJ3aWR0aDoyNjBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJcXHU1REU2XFx1NUJGOVxcdTlGNTBcXFwiPlxcdTVERTZcXHU1QkY5XFx1OUY1MDwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJcXHU1QzQ1XFx1NEUyRFxcdTVCRjlcXHU5RjUwXFxcIj5cXHU1QzQ1XFx1NEUyRFxcdTVCRjlcXHU5RjUwPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcIlxcdTUzRjNcXHU1QkY5XFx1OUY1MFxcXCI+XFx1NTNGM1xcdTVCRjlcXHU5RjUwPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCByb3dzcGFuPVxcXCI5XFxcIiB2YWxpZ249XFxcInRvcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgcmVmPVxcXCJ6VHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTYyNDBcXHU1QzVFXFx1ODg2OFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kUHJvcC5jb2x1bW5UYWJsZU5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU3RUQxXFx1NUI5QVxcdTVCNTdcXHU2QkI1XFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2JpbmRQcm9wLmNvbHVtbkNhcHRpb259fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1QjU3XFx1NkJCNVxcdTU0MERcXHU3OUYwXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2JpbmRQcm9wLmNvbHVtbk5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1QjU3XFx1NkJCNVxcdTdDN0JcXHU1NzhCXFx1RkYxQSBcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kUHJvcC5jb2x1bW5EYXRhVHlwZU5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU4OUU2XFx1NTNEMVxcdTYzMDlcXHU5NEFFXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3Qgdi1tb2RlbD1cXFwiYmluZFByb3AudGFyZ2V0QnV0dG9uSWRcXFwiIHN0eWxlPVxcXCJ3aWR0aDoyNjBweFxcXCIgOmNsZWFyYWJsZT1cXFwidHJ1ZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIDp2YWx1ZT1cXFwiaXRlbS5idXR0b25JZFxcXCIgdi1mb3I9XFxcIml0ZW0gaW4gYnV0dG9uc1xcXCI+e3tpdGVtLmJ1dHRvbkNhcHRpb259fTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiMlxcXCI+XFx1OUVEOFxcdThCQTRcXHU1MDNDPGJ1dHRvbiBjbGFzcz1cXFwiYnRuLXNlbGVjdCBmcmlnaHRcXFwiIHYtb246Y2xpY2s9XFxcInNlbGVjdERlZmF1bHRWYWx1ZVZpZXdcXFwiPi4uLjwvYnV0dG9uPjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHIgc3R5bGU9XFxcImhlaWdodDogMzVweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIyXFxcIiBzdHlsZT1cXFwiYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3t0ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHR9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1OTA3XFx1NkNFOFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHJvd3M9XFxcIjhcXFwiPjwvdGV4dGFyZWE+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgIDwvdGFibGU+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwibW9kdWxlLWxpc3Qtd2ViZm9ybS1jb21wXCIsIHtcbiAgcHJvcHM6IFsnbGlzdEhlaWdodCcsICdtb2R1bGVEYXRhJywgJ2FjdGl2ZVRhYk5hbWUnXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGVkaXRWaWV3OiBcIi9IVE1ML0J1aWxkZXIvRm9ybS9Gb3JtRGVzaWduLmh0bWxcIixcbiAgICAgICAgcHJldmlld1dlYkZvcm1Vcmw6IFwiL0hUTUwvQnVpbGRlci9Gb3JtL0Zvcm1QcmV2aWV3Lmh0bWxcIixcbiAgICAgICAgcmVsb2FkRGF0YTogXCIvUmVzdC9CdWlsZGVyL0Zvcm0vR2V0TGlzdERhdGFcIixcbiAgICAgICAgXCJkZWxldGVcIjogXCIvUmVzdC9CdWlsZGVyL0Zvcm0vRGVsZXRlXCIsXG4gICAgICAgIG1vdmU6IFwiL1Jlc3QvQnVpbGRlci9Gb3JtL01vdmVcIlxuICAgICAgfSxcbiAgICAgIGlkRmllbGROYW1lOiBcImZvcm1JZFwiLFxuICAgICAgc2VhcmNoQ29uZGl0aW9uOiB7XG4gICAgICAgIGZvcm1Nb2R1bGVJZDoge1xuICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgIHR5cGU6IFNlYXJjaFV0aWxpdHkuU2VhcmNoRmllbGRUeXBlLlN0cmluZ1R5cGVcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgIHR5cGU6ICdzZWxlY3Rpb24nLFxuICAgICAgICB3aWR0aDogNjAsXG4gICAgICAgIGFsaWduOiAnY2VudGVyJ1xuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+e8luWPtycsXG4gICAgICAgIGtleTogJ2Zvcm1Db2RlJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHdpZHRoOiA4MFxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+ihqOWNleWQjeensCcsXG4gICAgICAgIGtleTogJ2Zvcm1OYW1lJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfllK/kuIDlkI0nLFxuICAgICAgICBrZXk6ICdmb3JtU2luZ2xlTmFtZScsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5aSH5rOoJyxcbiAgICAgICAga2V5OiAnZm9ybURlc2MnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+e8lui+keaXtumXtCcsXG4gICAgICAgIGtleTogJ2Zvcm1VcGRhdGVUaW1lJyxcbiAgICAgICAgd2lkdGg6IDEwMCxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIHBhcmFtcykge1xuICAgICAgICAgIHJldHVybiBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZVJlbmRlcmVyLlRvRGF0ZVlZWVlfTU1fREQoaCwgcGFyYW1zLnJvdy5mb3JtVXBkYXRlVGltZSk7XG4gICAgICAgIH1cbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfmk43kvZwnLFxuICAgICAgICBrZXk6ICdmb3JtSWQnLFxuICAgICAgICB3aWR0aDogMTIwLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgcGFyYW1zKSB7XG4gICAgICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgICAgIFwiY2xhc3NcIjogXCJsaXN0LXJvdy1idXR0b24td3JhcFwiXG4gICAgICAgICAgfSwgW0xpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uRWRpdEJ1dHRvbihoLCBwYXJhbXMsIF9zZWxmLmlkRmllbGROYW1lLCBfc2VsZiksIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uRGVsZXRlQnV0dG9uKGgsIHBhcmFtcywgX3NlbGYuaWRGaWVsZE5hbWUsIF9zZWxmKV0pO1xuICAgICAgICB9XG4gICAgICB9XSxcbiAgICAgIHRhYmxlRGF0YTogW10sXG4gICAgICB0YWJsZURhdGFPcmlnaW5hbDogW10sXG4gICAgICBzZWxlY3Rpb25Sb3dzOiBudWxsLFxuICAgICAgcGFnZVRvdGFsOiAwLFxuICAgICAgcGFnZVNpemU6IDUwMCxcbiAgICAgIHBhZ2VOdW06IDEsXG4gICAgICBzZWFyY2hUZXh0OiBcIlwiXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB3aW5kb3cuX21vZHVsZWxpc3R3ZWJmb3JtY29tcCA9IHRoaXM7XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgbW9kdWxlRGF0YTogZnVuY3Rpb24gbW9kdWxlRGF0YShuZXdWYWwpIHtcbiAgICAgIHRoaXMucmVsb2FkRGF0YSgpO1xuICAgIH0sXG4gICAgYWN0aXZlVGFiTmFtZTogZnVuY3Rpb24gYWN0aXZlVGFiTmFtZShuZXdWYWwpIHtcbiAgICAgIHRoaXMucmVsb2FkRGF0YSgpO1xuICAgIH0sXG4gICAgc2VhcmNoVGV4dDogZnVuY3Rpb24gc2VhcmNoVGV4dChuZXdWYWwpIHtcbiAgICAgIGlmIChuZXdWYWwpIHtcbiAgICAgICAgdmFyIGZpbHRlclRhYmxlRGF0YSA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50YWJsZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB2YXIgcm93ID0gdGhpcy50YWJsZURhdGFbaV07XG5cbiAgICAgICAgICBpZiAocm93LmZvcm1Db2RlLmluZGV4T2YobmV3VmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBmaWx0ZXJUYWJsZURhdGEucHVzaChyb3cpO1xuICAgICAgICAgIH0gZWxzZSBpZiAocm93LmZvcm1OYW1lLmluZGV4T2YobmV3VmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBmaWx0ZXJUYWJsZURhdGEucHVzaChyb3cpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudGFibGVEYXRhID0gZmlsdGVyVGFibGVEYXRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy50YWJsZURhdGEgPSB0aGlzLnRhYmxlRGF0YU9yaWdpbmFsO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGdldE1vZHVsZU5hbWU6IGZ1bmN0aW9uIGdldE1vZHVsZU5hbWUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tb2R1bGVEYXRhID09IG51bGwgPyBcIuivt+mAieS4reaooeWdl1wiIDogdGhpcy5tb2R1bGVEYXRhLm1vZHVsZVRleHQ7XG4gICAgfSxcbiAgICBzZWxlY3Rpb25DaGFuZ2U6IGZ1bmN0aW9uIHNlbGVjdGlvbkNoYW5nZShzZWxlY3Rpb24pIHtcbiAgICAgIHRoaXMuc2VsZWN0aW9uUm93cyA9IHNlbGVjdGlvbjtcbiAgICB9LFxuICAgIHJlbG9hZERhdGE6IGZ1bmN0aW9uIHJlbG9hZERhdGEoKSB7XG4gICAgICBpZiAodGhpcy5tb2R1bGVEYXRhICE9IG51bGwgJiYgdGhpcy5hY3RpdmVUYWJOYW1lID09IFwibGlzdC13ZWJmb3JtXCIpIHtcbiAgICAgICAgdGhpcy5zZWFyY2hDb25kaXRpb24uZm9ybU1vZHVsZUlkLnZhbHVlID0gdGhpcy5tb2R1bGVEYXRhLm1vZHVsZUlkO1xuICAgICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUJpbmREYXRhQnlTZWFyY2goe1xuICAgICAgICAgIHVybDogdGhpcy5hY0ludGVyZmFjZS5yZWxvYWREYXRhLFxuICAgICAgICAgIHBhZ2VOdW06IHRoaXMucGFnZU51bSxcbiAgICAgICAgICBwYWdlU2l6ZTogdGhpcy5wYWdlU2l6ZSxcbiAgICAgICAgICBzZWFyY2hDb25kaXRpb246IHRoaXMuc2VhcmNoQ29uZGl0aW9uLFxuICAgICAgICAgIHBhZ2VBcHBPYmo6IHRoaXMsXG4gICAgICAgICAgdGFibGVMaXN0OiB0aGlzLFxuICAgICAgICAgIGlkRmllbGQ6IHRoaXMuaWRGaWVsZE5hbWUsXG4gICAgICAgICAgYXV0b1NlbGVjdGVkT2xkUm93czogdHJ1ZSxcbiAgICAgICAgICBzdWNjZXNzRnVuYzogZnVuY3Rpb24gc3VjY2Vzc0Z1bmMocmVzdWx0LCBwYWdlQXBwT2JqKSB7XG4gICAgICAgICAgICBwYWdlQXBwT2JqLnRhYmxlRGF0YU9yaWdpbmFsID0gcmVzdWx0LmRhdGEubGlzdDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGxvYWREaWN0OiBmYWxzZSxcbiAgICAgICAgICBjdXN0UGFyYXM6IHt9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7XG4gICAgICBpZiAodGhpcy5tb2R1bGVEYXRhICE9IG51bGwpIHtcbiAgICAgICAgdmFyIHVybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyh0aGlzLmFjSW50ZXJmYWNlLmVkaXRWaWV3LCB7XG4gICAgICAgICAgXCJvcFwiOiBcImFkZFwiLFxuICAgICAgICAgIFwibW9kdWxlSWRcIjogdGhpcy5tb2R1bGVEYXRhLm1vZHVsZUlkXG4gICAgICAgIH0pO1xuICAgICAgICBEaWFsb2dVdGlsaXR5Lk9wZW5OZXdXaW5kb3cod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0lkLCB1cmwsIHtcbiAgICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgICBoZWlnaHQ6IDBcbiAgICAgICAgfSwgMik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgXCLor7fpgInmi6nmqKHlnZchXCIsIG51bGwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZWRpdDogZnVuY3Rpb24gZWRpdChyZWNvcmRJZCkge1xuICAgICAgdmFyIHVybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyh0aGlzLmFjSW50ZXJmYWNlLmVkaXRWaWV3LCB7XG4gICAgICAgIFwib3BcIjogXCJ1cGRhdGVcIixcbiAgICAgICAgXCJyZWNvcmRJZFwiOiByZWNvcmRJZFxuICAgICAgfSk7XG4gICAgICBEaWFsb2dVdGlsaXR5Lk9wZW5OZXdXaW5kb3cod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0lkLCB1cmwsIHtcbiAgICAgICAgd2lkdGg6IDAsXG4gICAgICAgIGhlaWdodDogMFxuICAgICAgfSwgMik7XG4gICAgfSxcbiAgICBkZWw6IGZ1bmN0aW9uIGRlbChyZWNvcmRJZCkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVEZWxldGVSb3codGhpcy5hY0ludGVyZmFjZVtcImRlbGV0ZVwiXSwgcmVjb3JkSWQsIHRoaXMpO1xuICAgIH0sXG4gICAgc3RhdHVzRW5hYmxlOiBmdW5jdGlvbiBzdGF0dXNFbmFibGUoc3RhdHVzTmFtZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3Q2hhbmdlU2VydmVyU3RhdHVzRmFjZSh0aGlzLmFjSW50ZXJmYWNlLnN0YXR1c0NoYW5nZSwgdGhpcy5zZWxlY3Rpb25Sb3dzLCBhcHBMaXN0LmlkRmllbGROYW1lLCBzdGF0dXNOYW1lLCBhcHBMaXN0KTtcbiAgICB9LFxuICAgIG1vdmU6IGZ1bmN0aW9uIG1vdmUodHlwZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3TW92ZUZhY2UodGhpcy5hY0ludGVyZmFjZS5tb3ZlLCB0aGlzLnNlbGVjdGlvblJvd3MsIHRoaXMuaWRGaWVsZE5hbWUsIHR5cGUsIHRoaXMpO1xuICAgIH0sXG4gICAgcHJldmlld1dlYkZvcm06IGZ1bmN0aW9uIHByZXZpZXdXZWJGb3JtKCkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVNYXJlU3VyZVNlbGVjdGVkT25lKHRoaXMuc2VsZWN0aW9uUm93cywgdGhpcykudGhlbihmdW5jdGlvbiAoc2VsZWN0aW9uUm93cykge1xuICAgICAgICB2YXIgcmVjb3JkSWQgPSBzZWxlY3Rpb25Sb3dzWzBdW3RoaXMuaWRGaWVsZE5hbWVdO1xuICAgICAgICB2YXIgcHJldmlld1VybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyh0aGlzLmFjSW50ZXJmYWNlLnByZXZpZXdXZWJGb3JtVXJsLCB7XG4gICAgICAgICAgRm9ybUlkOiByZWNvcmRJZCxcbiAgICAgICAgICBPcGVyYXRpb25UeXBlOiBcImFkZFwiLFxuICAgICAgICAgIFJlY29yZElkOiBTdHJpbmdVdGlsaXR5Lkd1aWQoKVxuICAgICAgICB9KTtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5PcGVuTmV3VGFiV2luZG93KHByZXZpZXdVcmwpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IGNsYXNzPVxcXCJtb2R1bGUtbGlzdC13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XFxcImxpc3QtYnV0dG9uLXdyYXBcXFwiIGNsYXNzPVxcXCJsaXN0LWJ1dHRvbi1vdXRlci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtb2R1bGUtbGlzdC1uYW1lXFxcIj48SWNvbiB0eXBlPVxcXCJpb3MtYXJyb3ctZHJvcHJpZ2h0LWNpcmNsZVxcXCIgLz4mbmJzcDtcXHU2QTIxXFx1NTc1N1xcdTMwMTB7e2dldE1vZHVsZU5hbWUoKX19XFx1MzAxMTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImxpc3QtYnV0dG9uLWlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uR3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIEBjbGljaz1cXFwiYWRkKClcXFwiIGljb249XFxcIm1kLWFkZFxcXCI+XFx1NjVCMFxcdTU4OUU8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwicHJldmlld1dlYkZvcm0oKVxcXCIgIGljb249XFxcIm1kLXByaWNldGFnXFxcIj5cXHU5ODg0XFx1ODlDODwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgZGlzYWJsZWQgaWNvbj1cXFwibWQtYWRkXFxcIj5cXHU1RjE1XFx1NTE2NVVSTCA8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIGRpc2FibGVkIGljb249XFxcIm1kLWFsYnVtc1xcXCI+XFx1NTkwRFxcdTUyMzY8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIGRpc2FibGVkIGljb249XFxcIm1kLWJvb2ttYXJrc1xcXCI+XFx1NTM4NlxcdTUzRjJcXHU3MjQ4XFx1NjcyQzwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgZGlzYWJsZWQgaWNvbj1cXFwibWQtYnJ1c2hcXFwiPlxcdTU5MERcXHU1MjM2SUQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwibW92ZSgndXAnKVxcXCIgaWNvbj1cXFwibWQtYXJyb3ctdXBcXFwiPlxcdTRFMEFcXHU3OUZCPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcIm1vdmUoJ2Rvd24nKVxcXCIgaWNvbj1cXFwibWQtYXJyb3ctZG93blxcXCI+XFx1NEUwQlxcdTc5RkI8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbkdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogcmlnaHQ7d2lkdGg6IDIwMHB4O21hcmdpbi1yaWdodDogMTBweDtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XFxcImlucHV0X2JvcmRlcl9ib3R0b21cXFwiIHYtbW9kZWw9XFxcInNlYXJjaFRleHRcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiY2xlYXI6IGJvdGhcXFwiPjwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8aS10YWJsZSA6aGVpZ2h0PVxcXCJsaXN0SGVpZ2h0XFxcIiBzdHJpcGUgYm9yZGVyIDpjb2x1bW5zPVxcXCJjb2x1bW5zQ29uZmlnXFxcIiA6ZGF0YT1cXFwidGFibGVEYXRhXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XFxcIml2LWxpc3QtdGFibGVcXFwiIDpoaWdobGlnaHQtcm93PVxcXCJ0cnVlXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG9uLXNlbGVjdGlvbi1jaGFuZ2U9XFxcInNlbGVjdGlvbkNoYW5nZVxcXCI+PC9pLXRhYmxlPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJtb2R1bGUtbGlzdC13ZWJsaXN0LWNvbXBcIiwge1xuICBwcm9wczogWydsaXN0SGVpZ2h0JywgJ21vZHVsZURhdGEnLCAnYWN0aXZlVGFiTmFtZSddLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZWRpdFZpZXc6IFwiL0hUTUwvQnVpbGRlci9MaXN0L0xpc3REZXNpZ24uaHRtbFwiLFxuICAgICAgICByZWxvYWREYXRhOiBcIi9SZXN0L0J1aWxkZXIvTGlzdC9HZXRMaXN0RGF0YVwiLFxuICAgICAgICBcImRlbGV0ZVwiOiBcIi9SZXN0L0J1aWxkZXIvTGlzdC9EZWxldGVcIixcbiAgICAgICAgbW92ZTogXCIvUmVzdC9CdWlsZGVyL0xpc3QvTW92ZVwiXG4gICAgICB9LFxuICAgICAgaWRGaWVsZE5hbWU6IFwibGlzdElkXCIsXG4gICAgICBzZWFyY2hDb25kaXRpb246IHtcbiAgICAgICAgbGlzdE1vZHVsZUlkOiB7XG4gICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgdHlwZTogU2VhcmNoVXRpbGl0eS5TZWFyY2hGaWVsZFR5cGUuU3RyaW5nVHlwZVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgY29sdW1uc0NvbmZpZzogW3tcbiAgICAgICAgdHlwZTogJ3NlbGVjdGlvbicsXG4gICAgICAgIHdpZHRoOiA2MCxcbiAgICAgICAgYWxpZ246ICdjZW50ZXInXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn57yW5Y+3JyxcbiAgICAgICAga2V5OiAnbGlzdENvZGUnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgd2lkdGg6IDgwXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5YiX6KGo5ZCN56ewJyxcbiAgICAgICAga2V5OiAnbGlzdE5hbWUnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+WUr+S4gOWQjScsXG4gICAgICAgIGtleTogJ2xpc3RTaW5nbGVOYW1lJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICflpIfms6gnLFxuICAgICAgICBrZXk6ICdsaXN0RGVzYycsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn57yW6L6R5pe26Ze0JyxcbiAgICAgICAga2V5OiAnbGlzdFVwZGF0ZVRpbWUnLFxuICAgICAgICB3aWR0aDogMTAwLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgcGFyYW1zKSB7XG4gICAgICAgICAgcmV0dXJuIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlUmVuZGVyZXIuVG9EYXRlWVlZWV9NTV9ERChoLCBwYXJhbXMucm93Lmxpc3RVcGRhdGVUaW1lKTtcbiAgICAgICAgfVxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+aTjeS9nCcsXG4gICAgICAgIGtleTogJ2xpc3RJZCcsXG4gICAgICAgIHdpZHRoOiAxMjAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgXCJjbGFzc1wiOiBcImxpc3Qtcm93LWJ1dHRvbi13cmFwXCJcbiAgICAgICAgICB9LCBbTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5FZGl0QnV0dG9uKGgsIHBhcmFtcywgX3NlbGYuaWRGaWVsZE5hbWUsIF9zZWxmKSwgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5EZWxldGVCdXR0b24oaCwgcGFyYW1zLCBfc2VsZi5pZEZpZWxkTmFtZSwgX3NlbGYpXSk7XG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgdGFibGVEYXRhOiBbXSxcbiAgICAgIHRhYmxlRGF0YU9yaWdpbmFsOiBbXSxcbiAgICAgIHNlbGVjdGlvblJvd3M6IG51bGwsXG4gICAgICBwYWdlVG90YWw6IDAsXG4gICAgICBwYWdlU2l6ZTogNTAwLFxuICAgICAgcGFnZU51bTogMSxcbiAgICAgIHNlYXJjaFRleHQ6IFwiXCJcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHdpbmRvdy5fbW9kdWxlbGlzdHdlYmxpc3Rjb21wID0gdGhpcztcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBtb2R1bGVEYXRhOiBmdW5jdGlvbiBtb2R1bGVEYXRhKG5ld1ZhbCkge1xuICAgICAgdGhpcy5yZWxvYWREYXRhKCk7XG4gICAgfSxcbiAgICBhY3RpdmVUYWJOYW1lOiBmdW5jdGlvbiBhY3RpdmVUYWJOYW1lKG5ld1ZhbCkge1xuICAgICAgdGhpcy5yZWxvYWREYXRhKCk7XG4gICAgfSxcbiAgICBzZWFyY2hUZXh0OiBmdW5jdGlvbiBzZWFyY2hUZXh0KG5ld1ZhbCkge1xuICAgICAgaWYgKG5ld1ZhbCkge1xuICAgICAgICB2YXIgZmlsdGVyVGFibGVEYXRhID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRhYmxlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciByb3cgPSB0aGlzLnRhYmxlRGF0YVtpXTtcblxuICAgICAgICAgIGlmIChyb3cuZm9ybUNvZGUuaW5kZXhPZihuZXdWYWwpID49IDApIHtcbiAgICAgICAgICAgIGZpbHRlclRhYmxlRGF0YS5wdXNoKHJvdyk7XG4gICAgICAgICAgfSBlbHNlIGlmIChyb3cuZm9ybU5hbWUuaW5kZXhPZihuZXdWYWwpID49IDApIHtcbiAgICAgICAgICAgIGZpbHRlclRhYmxlRGF0YS5wdXNoKHJvdyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50YWJsZURhdGEgPSBmaWx0ZXJUYWJsZURhdGE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IHRoaXMudGFibGVEYXRhT3JpZ2luYWw7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0TW9kdWxlTmFtZTogZnVuY3Rpb24gZ2V0TW9kdWxlTmFtZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLm1vZHVsZURhdGEgPT0gbnVsbCA/IFwi6K+36YCJ5Lit5qih5Z2XXCIgOiB0aGlzLm1vZHVsZURhdGEubW9kdWxlVGV4dDtcbiAgICB9LFxuICAgIHNlbGVjdGlvbkNoYW5nZTogZnVuY3Rpb24gc2VsZWN0aW9uQ2hhbmdlKHNlbGVjdGlvbikge1xuICAgICAgdGhpcy5zZWxlY3Rpb25Sb3dzID0gc2VsZWN0aW9uO1xuICAgIH0sXG4gICAgcmVsb2FkRGF0YTogZnVuY3Rpb24gcmVsb2FkRGF0YSgpIHtcbiAgICAgIGlmICh0aGlzLm1vZHVsZURhdGEgIT0gbnVsbCAmJiB0aGlzLmFjdGl2ZVRhYk5hbWUgPT0gXCJsaXN0LXdlYmxpc3RcIikge1xuICAgICAgICB0aGlzLnNlYXJjaENvbmRpdGlvbi5saXN0TW9kdWxlSWQudmFsdWUgPSB0aGlzLm1vZHVsZURhdGEubW9kdWxlSWQ7XG4gICAgICAgIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlQmluZERhdGFCeVNlYXJjaCh7XG4gICAgICAgICAgdXJsOiB0aGlzLmFjSW50ZXJmYWNlLnJlbG9hZERhdGEsXG4gICAgICAgICAgcGFnZU51bTogdGhpcy5wYWdlTnVtLFxuICAgICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLFxuICAgICAgICAgIHNlYXJjaENvbmRpdGlvbjogdGhpcy5zZWFyY2hDb25kaXRpb24sXG4gICAgICAgICAgcGFnZUFwcE9iajogdGhpcyxcbiAgICAgICAgICB0YWJsZUxpc3Q6IHRoaXMsXG4gICAgICAgICAgaWRGaWVsZDogdGhpcy5pZEZpZWxkTmFtZSxcbiAgICAgICAgICBhdXRvU2VsZWN0ZWRPbGRSb3dzOiB0cnVlLFxuICAgICAgICAgIHN1Y2Nlc3NGdW5jOiBmdW5jdGlvbiBzdWNjZXNzRnVuYyhyZXN1bHQsIHBhZ2VBcHBPYmopIHtcbiAgICAgICAgICAgIHBhZ2VBcHBPYmoudGFibGVEYXRhT3JpZ2luYWwgPSByZXN1bHQuZGF0YS5saXN0O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbG9hZERpY3Q6IGZhbHNlLFxuICAgICAgICAgIGN1c3RQYXJhczoge31cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBhZGQ6IGZ1bmN0aW9uIGFkZCgpIHtcbiAgICAgIGlmICh0aGlzLm1vZHVsZURhdGEgIT0gbnVsbCkge1xuICAgICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KHRoaXMuYWNJbnRlcmZhY2UuZWRpdFZpZXcsIHtcbiAgICAgICAgICBcIm9wXCI6IFwiYWRkXCIsXG4gICAgICAgICAgXCJtb2R1bGVJZFwiOiB0aGlzLm1vZHVsZURhdGEubW9kdWxlSWRcbiAgICAgICAgfSk7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuT3Blbk5ld1dpbmRvdyh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nSWQsIHVybCwge1xuICAgICAgICAgIHdpZHRoOiAwLFxuICAgICAgICAgIGhlaWdodDogMFxuICAgICAgICB9LCAyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCBcIuivt+mAieaLqeaooeWdlyFcIiwgbnVsbCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBlZGl0OiBmdW5jdGlvbiBlZGl0KHJlY29yZElkKSB7XG4gICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KHRoaXMuYWNJbnRlcmZhY2UuZWRpdFZpZXcsIHtcbiAgICAgICAgXCJvcFwiOiBcInVwZGF0ZVwiLFxuICAgICAgICBcInJlY29yZElkXCI6IHJlY29yZElkXG4gICAgICB9KTtcbiAgICAgIERpYWxvZ1V0aWxpdHkuT3Blbk5ld1dpbmRvdyh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nSWQsIHVybCwge1xuICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgaGVpZ2h0OiAwXG4gICAgICB9LCAyKTtcbiAgICB9LFxuICAgIGRlbDogZnVuY3Rpb24gZGVsKHJlY29yZElkKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZURlbGV0ZVJvdyh0aGlzLmFjSW50ZXJmYWNlW1wiZGVsZXRlXCJdLCByZWNvcmRJZCwgdGhpcyk7XG4gICAgfSxcbiAgICBzdGF0dXNFbmFibGU6IGZ1bmN0aW9uIHN0YXR1c0VuYWJsZShzdGF0dXNOYW1lKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdDaGFuZ2VTZXJ2ZXJTdGF0dXNGYWNlKHRoaXMuYWNJbnRlcmZhY2Uuc3RhdHVzQ2hhbmdlLCB0aGlzLnNlbGVjdGlvblJvd3MsIGFwcExpc3QuaWRGaWVsZE5hbWUsIHN0YXR1c05hbWUsIGFwcExpc3QpO1xuICAgIH0sXG4gICAgbW92ZTogZnVuY3Rpb24gbW92ZSh0eXBlKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdNb3ZlRmFjZSh0aGlzLmFjSW50ZXJmYWNlLm1vdmUsIHRoaXMuc2VsZWN0aW9uUm93cywgdGhpcy5pZEZpZWxkTmFtZSwgdHlwZSwgdGhpcyk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJtb2R1bGUtbGlzdC13cmFwXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cImxpc3QtYnV0dG9uLXdyYXBcIiBjbGFzcz1cImxpc3QtYnV0dG9uLW91dGVyLXdyYXBcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZHVsZS1saXN0LW5hbWVcIj48SWNvbiB0eXBlPVwiaW9zLWFycm93LWRyb3ByaWdodC1jaXJjbGVcIiAvPiZuYnNwO+aooeWdl+OAkHt7Z2V0TW9kdWxlTmFtZSgpfX3jgJE8L2Rpdj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpc3QtYnV0dG9uLWlubmVyLXdyYXBcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25Hcm91cD5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gIHR5cGU9XCJzdWNjZXNzXCIgQGNsaWNrPVwiYWRkKClcIiBpY29uPVwibWQtYWRkXCI+5paw5aKePC9pLWJ1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cImVycm9yXCIgaWNvbj1cIm1kLWFsYnVtc1wiPuWkjeWItjwvaS1idXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XCJlcnJvclwiIGljb249XCJtZC1wcmljZXRhZ1wiPumihOiniDwvaS1idXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XCJlcnJvclwiIGljb249XCJtZC1ib29rbWFya3NcIj7ljoblj7LniYjmnKw8L2ktYnV0dG9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVwiZXJyb3JcIiBpY29uPVwibWQtYnJ1c2hcIj7lpI3liLZJRDwvaS1idXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XCJwcmltYXJ5XCIgQGNsaWNrPVwibW92ZShcXCd1cFxcJylcIiBpY29uPVwibWQtYXJyb3ctdXBcIj7kuIrnp7s8L2ktYnV0dG9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVwicHJpbWFyeVwiIEBjbGljaz1cIm1vdmUoXFwnZG93blxcJylcIiBpY29uPVwibWQtYXJyb3ctZG93blwiPuS4i+enuzwvaS1idXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbkdyb3VwPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJmbG9hdDogcmlnaHQ7d2lkdGg6IDIwMHB4O21hcmdpbi1yaWdodDogMTBweDtcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cImlucHV0X2JvcmRlcl9ib3R0b21cIiB2LW1vZGVsPVwic2VhcmNoVGV4dFwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWlucHV0PlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImNsZWFyOiBib3RoXCI+PC9kaXY+XFxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcbiAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgOmhlaWdodD1cImxpc3RIZWlnaHRcIiBzdHJpcGUgYm9yZGVyIDpjb2x1bW5zPVwiY29sdW1uc0NvbmZpZ1wiIDpkYXRhPVwidGFibGVEYXRhXCJcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIml2LWxpc3QtdGFibGVcIiA6aGlnaGxpZ2h0LXJvdz1cInRydWVcIlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBvbi1zZWxlY3Rpb24tY2hhbmdlPVwic2VsZWN0aW9uQ2hhbmdlXCI+PC9pLXRhYmxlPlxcXG4gICAgICAgICAgICAgICAgPC9kaXY+J1xufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJtb2R1bGUtbGlzdC13b3JrZmxvdy1jb21wXCIsIHtcbiAgcHJvcHM6IFsnbGlzdEhlaWdodCcsICdtb2R1bGVEYXRhJywgJ2FjdGl2ZVRhYk5hbWUnXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGVkaXRWaWV3OiBcIi9IVE1ML1dvcmtGbG93L01vZGVsZXIvSW5kZXguaHRtbFwiLFxuICAgICAgICByZWxvYWREYXRhOiBcIi9SZXN0L0J1aWxkZXIvTGlzdC9HZXRMaXN0RGF0YVwiLFxuICAgICAgICBcImRlbGV0ZVwiOiBcIi9SZXN0L0J1aWxkZXIvTGlzdC9EZWxldGVcIixcbiAgICAgICAgbW92ZTogXCIvUmVzdC9CdWlsZGVyL0xpc3QvTW92ZVwiXG4gICAgICB9LFxuICAgICAgaWRGaWVsZE5hbWU6IFwibGlzdElkXCIsXG4gICAgICBzZWFyY2hDb25kaXRpb246IHtcbiAgICAgICAgbGlzdE1vZHVsZUlkOiB7XG4gICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgdHlwZTogU2VhcmNoVXRpbGl0eS5TZWFyY2hGaWVsZFR5cGUuU3RyaW5nVHlwZVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgY29sdW1uc0NvbmZpZzogW3tcbiAgICAgICAgdHlwZTogJ3NlbGVjdGlvbicsXG4gICAgICAgIHdpZHRoOiA2MCxcbiAgICAgICAgYWxpZ246ICdjZW50ZXInXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn57yW5Y+3JyxcbiAgICAgICAga2V5OiAnbGlzdENvZGUnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgd2lkdGg6IDgwXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5YiX6KGo5ZCN56ewJyxcbiAgICAgICAga2V5OiAnbGlzdE5hbWUnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+WUr+S4gOWQjScsXG4gICAgICAgIGtleTogJ2xpc3RTaW5nbGVOYW1lJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICflpIfms6gnLFxuICAgICAgICBrZXk6ICdsaXN0RGVzYycsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn57yW6L6R5pe26Ze0JyxcbiAgICAgICAga2V5OiAnbGlzdFVwZGF0ZVRpbWUnLFxuICAgICAgICB3aWR0aDogMTAwLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgcGFyYW1zKSB7XG4gICAgICAgICAgcmV0dXJuIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlUmVuZGVyZXIuVG9EYXRlWVlZWV9NTV9ERChoLCBwYXJhbXMucm93Lmxpc3RVcGRhdGVUaW1lKTtcbiAgICAgICAgfVxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+aTjeS9nCcsXG4gICAgICAgIGtleTogJ2xpc3RJZCcsXG4gICAgICAgIHdpZHRoOiAxMjAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgXCJjbGFzc1wiOiBcImxpc3Qtcm93LWJ1dHRvbi13cmFwXCJcbiAgICAgICAgICB9LCBbTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5FZGl0QnV0dG9uKGgsIHBhcmFtcywgX3NlbGYuaWRGaWVsZE5hbWUsIF9zZWxmKSwgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5EZWxldGVCdXR0b24oaCwgcGFyYW1zLCBfc2VsZi5pZEZpZWxkTmFtZSwgX3NlbGYpXSk7XG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgdGFibGVEYXRhOiBbXSxcbiAgICAgIHRhYmxlRGF0YU9yaWdpbmFsOiBbXSxcbiAgICAgIHNlbGVjdGlvblJvd3M6IG51bGwsXG4gICAgICBwYWdlVG90YWw6IDAsXG4gICAgICBwYWdlU2l6ZTogNTAwLFxuICAgICAgcGFnZU51bTogMSxcbiAgICAgIHNlYXJjaFRleHQ6IFwiXCJcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHdpbmRvdy5fbW9kdWxlbGlzdHdlYmxpc3Rjb21wID0gdGhpcztcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBtb2R1bGVEYXRhOiBmdW5jdGlvbiBtb2R1bGVEYXRhKG5ld1ZhbCkge1xuICAgICAgdGhpcy5yZWxvYWREYXRhKCk7XG4gICAgfSxcbiAgICBhY3RpdmVUYWJOYW1lOiBmdW5jdGlvbiBhY3RpdmVUYWJOYW1lKG5ld1ZhbCkge1xuICAgICAgdGhpcy5yZWxvYWREYXRhKCk7XG4gICAgfSxcbiAgICBzZWFyY2hUZXh0OiBmdW5jdGlvbiBzZWFyY2hUZXh0KG5ld1ZhbCkge1xuICAgICAgaWYgKG5ld1ZhbCkge1xuICAgICAgICB2YXIgZmlsdGVyVGFibGVEYXRhID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRhYmxlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciByb3cgPSB0aGlzLnRhYmxlRGF0YVtpXTtcblxuICAgICAgICAgIGlmIChyb3cuZm9ybUNvZGUuaW5kZXhPZihuZXdWYWwpID49IDApIHtcbiAgICAgICAgICAgIGZpbHRlclRhYmxlRGF0YS5wdXNoKHJvdyk7XG4gICAgICAgICAgfSBlbHNlIGlmIChyb3cuZm9ybU5hbWUuaW5kZXhPZihuZXdWYWwpID49IDApIHtcbiAgICAgICAgICAgIGZpbHRlclRhYmxlRGF0YS5wdXNoKHJvdyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50YWJsZURhdGEgPSBmaWx0ZXJUYWJsZURhdGE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IHRoaXMudGFibGVEYXRhT3JpZ2luYWw7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0TW9kdWxlTmFtZTogZnVuY3Rpb24gZ2V0TW9kdWxlTmFtZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLm1vZHVsZURhdGEgPT0gbnVsbCA/IFwi6K+36YCJ5Lit5qih5Z2XXCIgOiB0aGlzLm1vZHVsZURhdGEubW9kdWxlVGV4dDtcbiAgICB9LFxuICAgIHNlbGVjdGlvbkNoYW5nZTogZnVuY3Rpb24gc2VsZWN0aW9uQ2hhbmdlKHNlbGVjdGlvbikge1xuICAgICAgdGhpcy5zZWxlY3Rpb25Sb3dzID0gc2VsZWN0aW9uO1xuICAgIH0sXG4gICAgcmVsb2FkRGF0YTogZnVuY3Rpb24gcmVsb2FkRGF0YSgpIHtcbiAgICAgIGlmICh0aGlzLm1vZHVsZURhdGEgIT0gbnVsbCAmJiB0aGlzLmFjdGl2ZVRhYk5hbWUgPT0gXCJsaXN0LXdlYmxpc3RcIikge1xuICAgICAgICB0aGlzLnNlYXJjaENvbmRpdGlvbi5saXN0TW9kdWxlSWQudmFsdWUgPSB0aGlzLm1vZHVsZURhdGEubW9kdWxlSWQ7XG4gICAgICAgIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlQmluZERhdGFCeVNlYXJjaCh7XG4gICAgICAgICAgdXJsOiB0aGlzLmFjSW50ZXJmYWNlLnJlbG9hZERhdGEsXG4gICAgICAgICAgcGFnZU51bTogdGhpcy5wYWdlTnVtLFxuICAgICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLFxuICAgICAgICAgIHNlYXJjaENvbmRpdGlvbjogdGhpcy5zZWFyY2hDb25kaXRpb24sXG4gICAgICAgICAgcGFnZUFwcE9iajogdGhpcyxcbiAgICAgICAgICB0YWJsZUxpc3Q6IHRoaXMsXG4gICAgICAgICAgaWRGaWVsZDogdGhpcy5pZEZpZWxkTmFtZSxcbiAgICAgICAgICBhdXRvU2VsZWN0ZWRPbGRSb3dzOiB0cnVlLFxuICAgICAgICAgIHN1Y2Nlc3NGdW5jOiBmdW5jdGlvbiBzdWNjZXNzRnVuYyhyZXN1bHQsIHBhZ2VBcHBPYmopIHtcbiAgICAgICAgICAgIHBhZ2VBcHBPYmoudGFibGVEYXRhT3JpZ2luYWwgPSByZXN1bHQuZGF0YS5saXN0O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbG9hZERpY3Q6IGZhbHNlLFxuICAgICAgICAgIGN1c3RQYXJhczoge31cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBhZGQ6IGZ1bmN0aW9uIGFkZCgpIHtcbiAgICAgIGlmICh0aGlzLm1vZHVsZURhdGEgIT0gbnVsbCkge1xuICAgICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KHRoaXMuYWNJbnRlcmZhY2UuZWRpdFZpZXcsIHtcbiAgICAgICAgICBcIm9wXCI6IFwiYWRkXCIsXG4gICAgICAgICAgXCJtb2R1bGVJZFwiOiB0aGlzLm1vZHVsZURhdGEubW9kdWxlSWRcbiAgICAgICAgfSk7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuT3Blbk5ld1dpbmRvdyh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nSWQsIHVybCwge1xuICAgICAgICAgIHdpZHRoOiAwLFxuICAgICAgICAgIGhlaWdodDogMFxuICAgICAgICB9LCAyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCBcIuivt+mAieaLqeaooeWdlyFcIiwgbnVsbCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBlZGl0OiBmdW5jdGlvbiBlZGl0KHJlY29yZElkKSB7XG4gICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KHRoaXMuYWNJbnRlcmZhY2UuZWRpdFZpZXcsIHtcbiAgICAgICAgXCJvcFwiOiBcInVwZGF0ZVwiLFxuICAgICAgICBcInJlY29yZElkXCI6IHJlY29yZElkXG4gICAgICB9KTtcbiAgICAgIERpYWxvZ1V0aWxpdHkuT3Blbk5ld1dpbmRvdyh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nSWQsIHVybCwge1xuICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgaGVpZ2h0OiAwXG4gICAgICB9LCAyKTtcbiAgICB9LFxuICAgIGRlbDogZnVuY3Rpb24gZGVsKHJlY29yZElkKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZURlbGV0ZVJvdyh0aGlzLmFjSW50ZXJmYWNlW1wiZGVsZXRlXCJdLCByZWNvcmRJZCwgdGhpcyk7XG4gICAgfSxcbiAgICBzdGF0dXNFbmFibGU6IGZ1bmN0aW9uIHN0YXR1c0VuYWJsZShzdGF0dXNOYW1lKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdDaGFuZ2VTZXJ2ZXJTdGF0dXNGYWNlKHRoaXMuYWNJbnRlcmZhY2Uuc3RhdHVzQ2hhbmdlLCB0aGlzLnNlbGVjdGlvblJvd3MsIGFwcExpc3QuaWRGaWVsZE5hbWUsIHN0YXR1c05hbWUsIGFwcExpc3QpO1xuICAgIH0sXG4gICAgbW92ZTogZnVuY3Rpb24gbW92ZSh0eXBlKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdNb3ZlRmFjZSh0aGlzLmFjSW50ZXJmYWNlLm1vdmUsIHRoaXMuc2VsZWN0aW9uUm93cywgdGhpcy5pZEZpZWxkTmFtZSwgdHlwZSwgdGhpcyk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJtb2R1bGUtbGlzdC13cmFwXCI+XFxcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVwibGlzdC1idXR0b24td3JhcFwiIGNsYXNzPVwibGlzdC1idXR0b24tb3V0ZXItd3JhcFwiPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2R1bGUtbGlzdC1uYW1lXCI+PEljb24gdHlwZT1cImlvcy1hcnJvdy1kcm9wcmlnaHQtY2lyY2xlXCIgLz4mbmJzcDvmqKHlnZfjgJB7e2dldE1vZHVsZU5hbWUoKX1944CRPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxpc3QtYnV0dG9uLWlubmVyLXdyYXBcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbkdyb3VwPlxcXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uICB0eXBlPVwic3VjY2Vzc1wiIEBjbGljaz1cImFkZCgpXCIgaWNvbj1cIm1kLWFkZFwiPuaWsOWinjwvaS1idXR0b24+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uR3JvdXA+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJmbG9hdDogcmlnaHQ7d2lkdGg6IDIwMHB4O21hcmdpbi1yaWdodDogMTBweDtcIj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2VhcmNoIGNsYXNzPVwiaW5wdXRfYm9yZGVyX2JvdHRvbVwiIHYtbW9kZWw9XCJzZWFyY2hUZXh0XCI+XFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiY2xlYXI6IGJvdGhcIj48L2Rpdj5cXFxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXHJcbiAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgOmhlaWdodD1cImxpc3RIZWlnaHRcIiBzdHJpcGUgYm9yZGVyIDpjb2x1bW5zPVwiY29sdW1uc0NvbmZpZ1wiIDpkYXRhPVwidGFibGVEYXRhXCJcXFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiaXYtbGlzdC10YWJsZVwiIDpoaWdobGlnaHQtcm93PVwidHJ1ZVwiXFxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAb24tc2VsZWN0aW9uLWNoYW5nZT1cInNlbGVjdGlvbkNoYW5nZVwiPjwvaS10YWJsZT5cXFxyXG4gICAgICAgICAgICAgICAgPC9kaXY+J1xufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJzZWxlY3QtZGJsaW5rLXNpbmdsZS1jb21wXCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgZ2V0REJMaW5rRGF0YVVybDogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RCTGluay9HZXRGdWxsREJMaW5rXCIsXG4gICAgICAgIGdldFNpbmdsZURCTGlua0RhdGFVcmw6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EQkxpbmsvR2V0RGV0YWlsRGF0YVwiXG4gICAgICB9LFxuICAgICAganNFZGl0b3JJbnN0YW5jZTogbnVsbCxcbiAgICAgIGRiTGlua1RyZWU6IHtcbiAgICAgICAgdHJlZU9iajogbnVsbCxcbiAgICAgICAgdHJlZVNldHRpbmc6IHtcbiAgICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBkYmxDbGlja0V4cGFuZDogZmFsc2UsXG4gICAgICAgICAgICBzaG93TGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDc3M6IHtcbiAgICAgICAgICAgICAgJ2NvbG9yJzogJ2JsYWNrJyxcbiAgICAgICAgICAgICAgJ2ZvbnQtd2VpZ2h0JzogJ25vcm1hbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoZWNrOiB7XG4gICAgICAgICAgICBlbmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgbm9jaGVja0luaGVyaXQ6IGZhbHNlLFxuICAgICAgICAgICAgY2hrU3R5bGU6IFwicmFkaW9cIixcbiAgICAgICAgICAgIHJhZGlvVHlwZTogXCJhbGxcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiZGJMaW5rTmFtZVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2ltcGxlRGF0YToge1xuICAgICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICAgIGlkS2V5OiBcImRiSWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcImRiT3JkZXJOdW1cIixcbiAgICAgICAgICAgICAgcm9vdFBJZDogXCItMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjYWxsYmFjazoge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgICB2YXIgX3NlbGYgPSB0aGlzLmdldFpUcmVlT2JqKHRyZWVJZCkuX2hvc3Q7XG5cbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWREQkxpbmsodHJlZU5vZGUpO1xuXG4gICAgICAgICAgICAgIF9zZWxmLmhhbmRsZUNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB0cmVlRGF0YTogbnVsbCxcbiAgICAgICAgY2xpY2tOb2RlOiBudWxsXG4gICAgICB9LFxuICAgICAgc2VsZWN0ZWREQkxpbmtEYXRhOiBudWxsXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5DbG9zZURpYWxvZ0VsZW0odGhpcy4kcmVmcy5zZWxlY3REQkxpbmtNb2RlbERpYWxvZ1dyYXApO1xuICAgIH0sXG4gICAgYmVnaW5TZWxlY3REQkxpbms6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0REJMaW5rKCkge1xuICAgICAgdmFyIGVsZW0gPSB0aGlzLiRyZWZzLnNlbGVjdERCTGlua01vZGVsRGlhbG9nV3JhcDtcbiAgICAgIHRoaXMuZ2V0REJMaW5rRGF0YUluaXRUcmVlKCk7XG4gICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgd2lkdGg6IDQ3MCxcbiAgICAgICAgaGVpZ2h0OiA1MDAsXG4gICAgICAgIHRpdGxlOiBcIumAieaLqeaVsOaNruW6k+i/nuaOpVwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldERCTGlua0RhdGFJbml0VHJlZTogZnVuY3Rpb24gZ2V0REJMaW5rRGF0YUluaXRUcmVlKCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldERCTGlua0RhdGFVcmwsIHt9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIF9zZWxmLmRiTGlua1RyZWUudHJlZURhdGEgPSByZXN1bHQuZGF0YTtcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3NlbGYuZGJMaW5rVHJlZS50cmVlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgX3NlbGYuZGJMaW5rVHJlZS50cmVlRGF0YVtpXS5pY29uID0gXCIuLi8uLi8uLi8uLi9UaGVtZXMvUG5nMTZYMTYvZGF0YWJhc2VfY29ubmVjdC5wbmdcIjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfc2VsZi4kcmVmcy5kYkxpbmtaVHJlZVVMLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic2VsZWN0LWRiTGluay1zaW5nbGUtY29tcC1cIiArIFN0cmluZ1V0aWxpdHkuR3VpZCgpKTtcblxuICAgICAgICAgIF9zZWxmLmRiTGlua1RyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKF9zZWxmLiRyZWZzLmRiTGlua1pUcmVlVUwpLCBfc2VsZi5kYkxpbmtUcmVlLnRyZWVTZXR0aW5nLCBfc2VsZi5kYkxpbmtUcmVlLnRyZWVEYXRhKTtcblxuICAgICAgICAgIF9zZWxmLmRiTGlua1RyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG5cbiAgICAgICAgICBfc2VsZi5kYkxpbmtUcmVlLnRyZWVPYmouX2hvc3QgPSBfc2VsZjtcbiAgICAgICAgICBmdXp6eVNlYXJjaFRyZWVPYmooX3NlbGYuZGJMaW5rVHJlZS50cmVlT2JqLCBfc2VsZi4kcmVmcy50eHRfZGJMaW5rX3NlYXJjaF90ZXh0LiRyZWZzLmlucHV0LCBudWxsLCB0cnVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIHNlbGVjdGVkREJMaW5rOiBmdW5jdGlvbiBzZWxlY3RlZERCTGluayhkYkxpbmtEYXRhKSB7XG4gICAgICB0aGlzLnNlbGVjdGVkREJMaW5rRGF0YSA9IGRiTGlua0RhdGE7XG4gICAgICB0aGlzLiRlbWl0KCdvbi1zZWxlY3RlZC1kYmxpbmsnLCBkYkxpbmtEYXRhKTtcbiAgICB9LFxuICAgIGdldFNlbGVjdGVkREJMaW5rTmFtZTogZnVuY3Rpb24gZ2V0U2VsZWN0ZWREQkxpbmtOYW1lKCkge1xuICAgICAgaWYgKHRoaXMuc2VsZWN0ZWREQkxpbmtEYXRhID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIFwi6K+36YCJ5oup5pWw5o2u5bqT6L+e5o6lXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZERCTGlua0RhdGEuZGJMaW5rTmFtZTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNldE9sZFNlbGVjdGVkREJMaW5rOiBmdW5jdGlvbiBzZXRPbGRTZWxlY3RlZERCTGluayhkYkxpbmtJZCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFNpbmdsZURCTGlua0RhdGFVcmwsIHtcbiAgICAgICAgXCJyZWNvcmRJZFwiOiBkYkxpbmtJZFxuICAgICAgfSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBfc2VsZi5zZWxlY3RlZERCTGlua0RhdGEgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjxkaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZWxlY3Qtdmlldy1kYmxpbmstd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwidGV4dFxcXCI+e3tnZXRTZWxlY3RlZERCTGlua05hbWUoKX19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwidmFsdWVcXFwiPjwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImlkXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b25cXFwiIEBjbGljaz1cXFwiYmVnaW5TZWxlY3REQkxpbmsoKVxcXCI+PEljb24gdHlwZT1cXFwiaW9zLWZ1bm5lbFxcXCIgLz4mbmJzcDtcXHU5MDA5XFx1NjJFOTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHJlZj1cXFwic2VsZWN0REJMaW5rTW9kZWxEaWFsb2dXcmFwXFxcIiBjbGFzcz1cXFwiYzEtc2VsZWN0LW1vZGVsLXdyYXAgZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC1zb3VyY2Utd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cXFwiaW5wdXRfYm9yZGVyX2JvdHRvbVxcXCIgcmVmPVxcXCJ0eHRfZGJMaW5rX3NlYXJjaF90ZXh0XFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1OEJGN1xcdThGOTNcXHU1MTY1XFx1NjU3MFxcdTYzNkVcXHU1RTkzXFx1OEZERVxcdTYzQTVcXHU1NDBEXFx1NzlGMFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiaW5uZXItd3JhcCBkaXYtY3VzdG9tLXNjcm9sbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgcmVmPVxcXCJkYkxpbmtaVHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiXX0=
