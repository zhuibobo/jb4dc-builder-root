"use strict";Vue.component("dataset-simple-select-comp",{data:function(){var a=this;return{acInterface:{getDataSetData:"/Rest/Builder/DataSet/DataSetMain/GetDataSetsForZTreeNodeList"},dataSetTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){"DataSet"==i.nodeTypeName&&a.selectedNode(i)}}},treeData:null,selectedTableName:"无"}}},mounted:function(){this.bindDataSetTree()},methods:{bindDataSetTree:function(){var i=this;AjaxUtility.Post(this.acInterface.getDataSetData,{},function(e){if(e.success){if(null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++)"DataSetGroup"==e.data[t].nodeTypeName?e.data[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/package.png":e.data[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/application_view_columns.png";i.dataSetTree.treeData=e.data,i.dataSetTree.treeObj=$.fn.zTree.init($("#dataSetZTreeUL"),i.dataSetTree.treeSetting,i.dataSetTree.treeData),i.dataSetTree.treeObj.expandAll(!0),fuzzySearchTreeObj(i.dataSetTree.treeObj,i.$refs.txt_search_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedNode:function(e){this.$emit("on-selected-dataset",e)}},template:'<div class="js-code-fragment-wrap">                    <i-input search class="input_border_bottom" ref="txt_search_text" placeholder="请输入表名或者标题"></i-input>                    <ul id="dataSetZTreeUL" class="ztree"></ul>                </div>'}),Vue.component("js-design-code-fragment",{data:function(){return{jsEditorInstance:null}},mounted:function(){},methods:{setJSEditorInstance:function(e){this.jsEditorInstance=e},getJsEditorInst:function(){return this.jsEditorInstance},insertJs:function(e){var t=this.getJsEditorInst().getDoc(),i=t.getCursor();t.replaceRange(e,i)},formatJS:function(){CodeMirror.commands.selectAll(this.getJsEditorInst());var e={from:this.getJsEditorInst().getCursor(!0),to:this.getJsEditorInst().getCursor(!1)};this.getJsEditorInst().autoFormatRange(e.from,e.to)},alertDesc:function(){},refScript:function(){this.insertJs('<script type="text/javascript" src="${contextPath}/UIComponent/TreeTable/Js/TreeTable.js"><\/script>')},callServiceMethod:function(){}},template:'<div class="js-code-fragment-wrap">            <div class="js-code-fragment-item" @click="formatJS">格式化</div>            <div class="js-code-fragment-item">说明</div>            <div class="js-code-fragment-item" @click="refScript">引入脚本</div>            <div class="js-code-fragment-item">获取URL参数</div>            <div class="js-code-fragment-item">调用服务方法</div>            <div class="js-code-fragment-item">加载数据字典</div>        </div>'}),Vue.component("sql-general-design-comp",{props:["sqlDesignerHeight","value","showField"],data:function(){return{sqlText:"",selectedItemValue:"说明",selfTableFields:[],parentTableFields:[]}},watch:{sqlText:function(e){this.$emit("input",e)},value:function(e){this.sqlText=e}},mounted:function(){this.sqlCodeMirror=CodeMirror.fromTextArea($("#TextAreaSQLEditor")[0],{mode:"text/x-sql",lineNumbers:!0,lineWrapping:!0,foldGutter:!0,theme:"monokai"}),console.log(this.sqlDesignerHeight),this.sqlCodeMirror.setSize("100%",this.sqlDesignerHeight);var t=this;this.sqlCodeMirror.on("change",function(e){console.log(e.getValue()),t.sqlText=e.getValue()})},methods:{getValue:function(){this.sqlCodeMirror.getValue()},setValue:function(e){this.sqlCodeMirror.setValue(e)},setAboutTableFields:function(e,t){this.selfTableFields=e,this.parentTableFields=t},insertEnvToEditor:function(e){this.insertCodeAtCursor(e)},insertFieldToEditor:function(e,t){var i=null;i="selfTableFields"==e?this.selfTableFields:this.parentTableFields;for(var a=0;a<i.length;a++)i[a].fieldName==t&&this.insertCodeAtCursor(i[a].tableName+"."+i[a].fieldName)},insertCodeAtCursor:function(e){var t=this.sqlCodeMirror.getDoc(),i=t.getCursor();t.replaceRange(e,i)}},template:'<div>                <textarea id="TextAreaSQLEditor"></textarea>                <div style="text-align: right;margin-top: 8px">                    <ButtonGroup size="small">                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户所在组织ID}\')">组织Id</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户所在组织名称}\')">组织名称</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户ID}\')">用户Id</Button>                        <Button @click="insertEnvToEditor(\'#{ApiVar.当前用户名称}\')">用户名称</Button>                        <Button @click="insertEnvToEditor(\'#{DateTime.年年年年-月月-日日}\')">yyyy-MM-dd</Button>                        <Button>说明</Button>                    </ButtonGroup>                </div>                <div style="margin-top: 8px" v-if="showField">                    <div style="float: left;margin: 4px 10px">本表字段</div>                    <div style="float: left">                        <i-select placeholder="默认使用Id字段" size="small" style="width:175px" @on-change="insertFieldToEditor(\'selfTableFields\',$event)">                            <i-option v-for="item in selfTableFields" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                        </i-select>                    </div>                    <div style="float: left;margin: 4px 10px">父表字段</div>                    <div style="float: left">                        <i-select placeholder="默认使用Id字段" size="small" style="width:177px" @on-change="insertFieldToEditor(\'parentTableFields\',$event)">                            <i-option v-for="item in parentTableFields" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>                        </i-select>                    </div>                </div>              </div>'}),Vue.component("table-relation-content-comp",{props:["relation"],data:function(){return{acInterface:{getTablesFieldsByTableIds:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesFieldsByTableIds",saveDiagram:"/Rest/Builder/DataStorage/TableRelation/TableRelation/SaveDiagram",getSingleDiagramData:"/Rest/Builder/DataStorage/TableRelation/TableRelation/GetDetailData",tableView:"/HTML/Builder/DataStorage/DataBase/TableEdit.html"},tableRelationDiagram:null,displayDesc:!0,formatJson:null,recordId:this.relation.relationId}},mounted:function(){$(this.$refs.relationContentOuterWrap).css("height",PageStyleUtility.GetPageHeight()-75),PageStyleUtility.GetPageWidth()<1e3&&(this.displayDesc=!1,$(".table-relation-op-buttons-outer-wrap").css("width","100%")),this.initDiagram(),this.loadRelationDetailData()},methods:{init:function(){window.goSamples&&goSamples();var e=go.GraphObject.make,t=e(go.Diagram,"tableRelationDiagramDiv",{allowDelete:!1,allowCopy:!1,layout:e(go.ForceDirectedLayout),"undoManager.isEnabled":!0}),i=e(go.Brush,"Linear",{0:"rgb(150, 150, 250)",.5:"rgb(86, 86, 186)",1:"rgb(86, 86, 186)"}),a=e(go.Brush,"Linear",{0:"rgb(158, 209, 159)",1:"rgb(67, 101, 56)"}),l=e(go.Brush,"Linear",{0:"rgb(206, 106, 100)",1:"rgb(180, 56, 50)"}),n=e(go.Brush,"Linear",{0:"rgb(254, 221, 50)",1:"rgb(254, 182, 50)"}),o=e(go.Brush,"Linear",{1:"#E6E6FA",0:"#FFFAF0"}),d=e(go.Panel,"Horizontal",e(go.Shape,{desiredSize:new go.Size(10,10)},new go.Binding("figure","figure"),new go.Binding("fill","color")),e(go.TextBlock,{stroke:"#333333",font:"bold 14px sans-serif"},new go.Binding("text","name")));t.nodeTemplate=e(go.Node,"Auto",{selectionAdorned:!0,resizable:!0,layoutConditions:go.Part.LayoutStandard&~go.Part.LayoutNodeSized,fromSpot:go.Spot.AllSides,toSpot:go.Spot.AllSides,isShadowed:!0,shadowColor:"#C5C1AA"},new go.Binding("location","location").makeTwoWay(),new go.Binding("desiredSize","visible",function(e){return new go.Size(NaN,NaN)}).ofObject("LIST"),e(go.Shape,"Rectangle",{fill:o,stroke:"#756875",strokeWidth:3}),e(go.Panel,"Table",{margin:8,stretch:go.GraphObject.Fill},e(go.RowColumnDefinition,{row:0,sizing:go.RowColumnDefinition.None}),e(go.TextBlock,{row:0,alignment:go.Spot.Center,margin:new go.Margin(0,14,0,2),font:"bold 16px sans-serif"},new go.Binding("text","key")),e("PanelExpanderButton","LIST",{row:0,alignment:go.Spot.TopRight}),e(go.Panel,"Vertical",{name:"LIST",row:1,padding:3,alignment:go.Spot.TopLeft,defaultAlignment:go.Spot.Left,stretch:go.GraphObject.Horizontal,itemTemplate:d},new go.Binding("itemArray","items")))),t.linkTemplate=e(go.Link,{selectionAdorned:!0,layerName:"Foreground",reshapable:!0,routing:go.Link.AvoidsNodes,corner:5,curve:go.Link.JumpOver},e(go.Shape,{stroke:"#303B45",strokeWidth:2.5}),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:0,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","text")),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:-1,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","toText")));var r=[{key:"Products",items:[{name:"ProductID",iskey:!0,figure:"Decision",color:n},{name:"ProductName",iskey:!1,figure:"Cube1",color:i},{name:"SupplierID",iskey:!1,figure:"Decision",color:"purple"},{name:"CategoryID",iskey:!1,figure:"Decision",color:"purple"}]},{key:"Suppliers",items:[{name:"SupplierID",iskey:!0,figure:"Decision",color:n},{name:"CompanyName",iskey:!1,figure:"Cube1",color:i},{name:"ContactName",iskey:!1,figure:"Cube1",color:i},{name:"Address",iskey:!1,figure:"Cube1",color:i}]},{key:"Categories",items:[{name:"CategoryID",iskey:!0,figure:"Decision",color:n},{name:"CategoryName",iskey:!1,figure:"Cube1",color:i},{name:"Description",iskey:!1,figure:"Cube1",color:i},{name:"Picture",iskey:!1,figure:"TriangleUp",color:l}]},{key:"Order Details",items:[{name:"OrderID",iskey:!0,figure:"Decision",color:n},{name:"ProductID",iskey:!0,figure:"Decision",color:n},{name:"UnitPrice",iskey:!1,figure:"MagneticData",color:a},{name:"Quantity",iskey:!1,figure:"MagneticData",color:a},{name:"Discount",iskey:!1,figure:"MagneticData",color:a}]}];t.model=e(go.GraphLinksModel,{copiesArrays:!0,copiesArrayObjects:!0,nodeDataArray:r,linkDataArray:[{from:"Products",to:"Suppliers",text:"0..N",toText:"1"},{from:"Products",to:"Categories",text:"0..N",toText:"1"},{from:"Order Details",to:"Products",text:"0..N",toText:"1"}]})},showSelectTableDialog:function(){this.$refs.selectSingleTableDialog.beginSelectTable()},showSelectFieldConnectDialog:function(){var t="",i="",a=0;this.tableRelationDiagram.selection.each(function(e){e instanceof go.Node&&(0==a?(t=e.data.tableId,a++):i=e.data.tableId)}),i||(i=t),""!=t&&""!=i?this.$refs.tableRelationConnectTwoTableDialog.beginSelectConnect(t,i):DialogUtility.AlertText("请先选中2个节点")},addTableToDiagram:function(e){var o=e.id,t=[o],d=this;this.tableIsExistInDiagram(o)?DialogUtility.AlertText("该画布中已经存在表:"+e.text):AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:t},function(e){if(e.success){for(var t=e.data,i=e.exKVData.Tables[0],a=[],l=0;l<t.length;l++)t[l].displayText=t[l].fieldName+"["+t[l].fieldCaption+"]",a.push(d.rendererFieldStyle(t[l]));var n={tableId:o,loc:"0 0",fields:a,tableData:i,tableName:i.tableName,tableCaption:i.tableCaption,tableDisplayText:i.tableName+"["+i.tableCaption+"]",key:i.tableId};d.tableRelationDiagram.model.startTransaction("flash"),d.tableRelationDiagram.model.addNodeData(n),d.tableRelationDiagram.model.commitTransaction("flash")}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},deleteSelection:function(){this.tableRelationDiagram.commandHandler.canDeleteSelection()&&this.tableRelationDiagram.commandHandler.deleteSelection()},connectSelectionNode:function(e){this.tableRelationDiagram.model.startTransaction("flash");var t={lineId:StringUtility.Guid(),from:e.from.tableId,to:e.to.tableId,fromText:e.from.text,toText:e.to.text};this.tableRelationDiagram.model.addLinkData(t),this.tableRelationDiagram.model.commitTransaction("flash")},saveModelToServer:function(){if(this.recordId){var e={recordId:this.recordId,relationContent:JsonUtility.JsonToString(this.getDataJson()),relationDiagramJson:this.getDiagramJson()};AjaxUtility.Post(this.acInterface.saveDiagram,e,function(e){DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)}},initDiagram:function(){var a=this;window.goSamples&&goSamples();var e=go.GraphObject.make;this.tableRelationDiagram=e(go.Diagram,"tableRelationDiagramDiv",{allowDelete:!0,allowCopy:!1,layout:e(go.ForceDirectedLayout,{isOngoing:!1}),"undoManager.isEnabled":!0});var t=this.tableRelationDiagram,i=e(go.Brush,"Linear",{1:"#E6E6FA",0:"#FFFAF0"}),l=e(go.Panel,"Horizontal",e(go.Shape,{desiredSize:new go.Size(10,10)},new go.Binding("figure","figure"),new go.Binding("fill","color")),e(go.TextBlock,{stroke:"#333333",font:"bold 14px sans-serif"},new go.Binding("text","displayText")));t.nodeTemplate=e(go.Node,"Auto",{selectionAdorned:!0,resizable:!0,layoutConditions:go.Part.LayoutStandard&~go.Part.LayoutNodeSized,fromSpot:go.Spot.AllSides,toSpot:go.Spot.AllSides,isShadowed:!0,shadowColor:"#C5C1AA",doubleClick:function(e,t){var i=BaseUtility.BuildView(a.acInterface.tableView,{op:"view",recordId:t.data.tableId});DialogUtility.Frame_OpenIframeWindow(window,DialogUtility.DialogId,i,{title:"表设计"},0)}},new go.Binding("location","loc",go.Point.parse),new go.Binding("desiredSize","visible",function(e){return new go.Size(NaN,NaN)}).ofObject("LIST"),e(go.Shape,"RoundedRectangle",{fill:i,stroke:"#756875",strokeWidth:1}),e(go.Panel,"Table",{margin:8,stretch:go.GraphObject.Fill},e(go.RowColumnDefinition,{row:0,sizing:go.RowColumnDefinition.None}),e(go.TextBlock,{row:0,alignment:go.Spot.Center,margin:new go.Margin(0,14,0,2),font:"bold 16px sans-serif"},new go.Binding("text","tableDisplayText")),e("PanelExpanderButton","LIST",{row:0,alignment:go.Spot.TopRight}),e(go.Panel,"Vertical",{name:"LIST",row:1,padding:3,alignment:go.Spot.TopLeft,defaultAlignment:go.Spot.Left,stretch:go.GraphObject.Horizontal,itemTemplate:l},new go.Binding("itemArray","fields")))),t.linkTemplate=e(go.Link,{selectionAdorned:!0,layerName:"Foreground",reshapable:!0,routing:go.Link.AvoidsNodes,corner:5,curve:go.Link.JumpOver},e(go.Shape,{stroke:"#303B45",strokeWidth:1.5}),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:0,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","fromText")),e(go.TextBlock,{textAlign:"center",font:"bold 14px sans-serif",stroke:"#1967B3",segmentIndex:-1,segmentOffset:new go.Point(NaN,NaN),segmentOrientation:go.Link.OrientUpright},new go.Binding("text","toText")))},loadRelationDetailData:function(){var i=this;AjaxUtility.Post(this.acInterface.getSingleDiagramData,{recordId:this.recordId,op:"Edit"},function(e){if(e.success){if(e.data.relationContent){var t=JsonUtility.StringToJson(e.data.relationContent);console.log(t),i.setDataJson(t),i.convertToFullJson(t,i.drawObjInDiagram)}}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},drawObjInDiagram:function(i){var e=go.GraphObject.make;e(go.Brush,"Linear",{0:"rgb(150, 150, 250)",.5:"rgb(86, 86, 186)",1:"rgb(86, 86, 186)"}),e(go.Brush,"Linear",{0:"rgb(158, 209, 159)",1:"rgb(67, 101, 56)"}),e(go.Brush,"Linear",{0:"rgb(206, 106, 100)",1:"rgb(180, 56, 50)"}),e(go.Brush,"Linear",{0:"rgb(254, 221, 50)",1:"rgb(254, 182, 50)"}),i.lineList;this.tableRelationDiagram.model=e(go.GraphLinksModel,{copiesArrays:!0,copiesArrayObjects:!0,nodeDataArray:i.tableList});var a=this;window.setTimeout(function(){a.tableRelationDiagram.model.startTransaction("flash");for(var e=0;e<i.lineList.length;e++){var t=i.lineList[e];a.tableRelationDiagram.model.addLinkData(t)}a.tableRelationDiagram.model.commitTransaction("flash")},500)},convertToFullJson:function(e,t){for(var o=JsonUtility.CloneSimple(e),i=new Array,a=0;a<e.tableList.length;a++)i.push(e.tableList[a].tableId);var d=this;AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:i},function(e){if(e.success){for(var t=e.data,i=e.exKVData.Tables,a=0;a<o.tableList.length;a++){var l=d.getSingleTableData(i,o.tableList[a].tableId);o.tableList[a].tableData=l,o.tableList[a].tableName=l.tableName,o.tableList[a].tableCaption=l.tableCaption,o.tableList[a].tableDisplayText=l.displayText;var n=d.getSingleTableFieldsData(t,o.tableList[a].tableId);o.tableList[a].fields=n,o.tableList[a].key=o.tableList[a].tableId}d.drawObjInDiagram(o)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},getSingleTableData:function(e,t){for(var i=0;i<e.length;i++)if(e[i].tableId==t)return e[i].displayText=e[i].tableName+"["+e[i].tableCaption+"]",e[i];return null},getSingleTableFieldsData:function(e,t){for(var i=[],a=0;a<e.length;a++)e[a].fieldTableId==t&&(e[a].displayText=e[a].fieldName+"["+e[a].fieldCaption+"]",i.push(this.rendererFieldStyle(e[a])));return i},rendererFieldStyle:function(e){return"是"==e.fieldIsPk?(e.color=this.getKeyFieldBrush(),e.figure="Decision"):(e.color=this.getNorFieldBrush(),e.figure="Cube1"),e},getKeyFieldBrush:function(){return go.GraphObject.make(go.Brush,"Linear",{0:"rgb(254, 221, 50)",1:"rgb(254, 182, 50)"})},getNorFieldBrush:function(){return go.GraphObject.make(go.Brush,"Linear",{0:"rgb(150, 150, 250)",.5:"rgb(86, 86, 186)",1:"rgb(86, 86, 186)"})},getDataJson:function(){var t={tableList:[],lineList:[]};return this.tableRelationDiagram.nodes.each(function(e){e instanceof go.Node?t.tableList.push({tableId:e.data.tableId,loc:e.location.x+" "+e.location.y}):e instanceof go.Link&&alert("line")}),this.tableRelationDiagram.links.each(function(e){e instanceof go.Link&&t.lineList.push({lineId:e.data.lineId,from:e.data.from,to:e.data.to,fromText:e.data.fromText,toText:e.data.toText})}),t},setDataJson:function(e){this.formatJson=e},getDiagramJson:function(){return this.tableRelationDiagram.model.toJson()},alertDataJson:function(){var e=this.getDataJson();DialogUtility.AlertJsonCode(e)},alertDiagramJson:function(){var e=this.getDiagramJson();DialogUtility.AlertJsonCode(e)},tableIsExistInDiagram:function(t){var i=!1;return this.tableRelationDiagram.nodes.each(function(e){e instanceof go.Node&&e.data.tableId==t&&(i=!0)}),i},downLoadModelPNG:function(){this.tableRelationDiagram.makeImageData({background:"white",returnType:"blob",scale:1,callback:function(e){var t=window.URL.createObjectURL(e),i="myBlobFile1.png",a=document.createElement("a");a.style="display: none",a.href=t,a.download=i,void 0===window.navigator.msSaveBlob?(document.body.appendChild(a),requestAnimationFrame(function(){a.click(),window.URL.revokeObjectURL(t),document.body.removeChild(a)})):window.navigator.msSaveBlob(e,i)}})}},template:'<div ref="relationContentOuterWrap" class="table-relation-content-outer-wrap">\n                    <div class="table-relation-content-header-wrap">\n                        <div class="table-relation-desc-outer-wrap" v-if="displayDesc">\n                            <div class="table-relation-desc">\n                                备注：{{relation.relationDesc}}\n                            </div>\n                        </div>\n                        <div class="table-relation-op-buttons-outer-wrap">\n                            <div class="table-relation-op-buttons-inner-wrap">\n                                <button-group shape="circle">\n                                    <i-button @click="showSelectTableDialog" type="success" icon="md-add"></i-button>\n                                    <i-button @click="showSelectFieldConnectDialog" type="primary" icon="logo-steam">连接</i-button>\n                                    <i-button disabled type="primary" icon="md-return-left">引入</i-button>\n                                    <i-button disabled type="primary" icon="md-qr-scanner">全屏</i-button>\n                                    <i-button disabled type="primary" icon="md-git-compare">历史</i-button>\n                                    <i-button @click="alertDataJson" type="primary" icon="md-code">数据Json</i-button>\n                                    <i-button @click="alertDiagramJson" type="primary" icon="md-code-working">图形Json</i-button>\n                                    <i-button @click="downLoadModelPNG" type="primary" icon="md-cloud-download">下载</i-button>\n                                    <i-button @click="saveModelToServer" type="primary" icon="logo-instagram">保存</i-button>\n                                    <i-button @click="deleteSelection" type="primary" icon="md-close"></i-button>\n                                </button-group>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="table-relation-content-wrap" id="tableRelationDiagramDiv"></div>\n                    <select-single-table-dialog ref="selectSingleTableDialog" @on-selected-table="addTableToDiagram"></select-single-table-dialog>\n                    <table-relation-connect-two-table-dialog ref="tableRelationConnectTwoTableDialog" @on-completed-connect="connectSelectionNode"></table-relation-connect-two-table-dialog>\n                </div>'}),Vue.component("select-default-value-dialog",{data:function(){var i=this;return{acInterface:{getGroupTreeData:"/Rest/Builder/EnvVariableGroup/GetTreeData",reloadListData:"/Rest/Builder/EnvVariable/GetListData"},selectType:"Const",selectValue:"",selectText:"",constValue:"",listHeight:470,tree:{treeIdFieldName:"envGroupId",treeObj:null,treeSelectedNode:null,treeSetting:{async:{enable:!0,url:""},data:{key:{name:"envGroupText"},simpleData:{enable:!0,idKey:"envGroupId",pIdKey:"envGroupParentId",rootId:0}},callback:{onClick:function(e,t,i){this.getZTreeObj(t)._host.treeNodeSelected(e,t,i)},onAsyncSuccess:function(e,t,i,a){appList.treeObj.expandAll(!0)}}}},tableData:[],columnsConfig:[{title:"变量名称",key:"envVarText",align:"center"},{title:"变量值",key:"envVarValue",align:"center"},{title:"操作",key:"envVarId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.SelectedButton(e,t,"envVarId",i)])}}],searchCondition:{envVarGroupId:{value:"",type:SearchUtility.SearchFieldType.StringType}},pageTotal:0,pageSize:100,pageNum:1}},mounted:function(){this.loadData()},methods:{beginSelect:function(e){console.log(e);var t=this.$refs.selectDefaultValueDialogWrap;DialogUtility.DialogElemObj(t,{modal:!0,height:680,width:980,title:"设置默认值"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),null==e&&(this.selectValue="",this.selectText="",this.constValue="")},loadData:function(){AjaxUtility.Post(this.acInterface.getGroupTreeData,{},function(e){if(console.log(e),e.success){if(null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++);this.tree.treeObj=$.fn.zTree.init($("#zTreeUL"),this.tree.treeSetting,e.data),this.tree.treeObj.expandAll(!0),this.tree.treeObj._host=this}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,function(){})},this)},getSelectInstanceName:function(){return BaseUtility.GetUrlParaValue("instanceName")},selectComplete:function(){var e={};if("Const"==this.selectType){if(""==this.constValue)return void DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请设置常量默认值！",null);e.Type="Const",e.Value=this.constValue,e.Text=this.constValue}else e.Type="EnvVar",e.Value=this.selectValue,e.Text=this.selectText;this.$emit("on-selected-default-value",e),this.handleClose()},clearComplete:function(){this.$emit("on-selected-default-value",null),this.handleClose()},handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectDefaultValueDialogWrap)},selectionChange:function(){},clearSearchCondition:function(){for(var e in this.searchCondition)this.searchCondition[e].value=""},treeNodeSelected:function(e,t,i){this.pageNum=1,this.clearSearchCondition(),this.searchCondition.envVarGroupId.value=i[this.tree.treeIdFieldName],this.reloadData()},reloadData:function(){ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadListData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:"envVarId",autoSelectedOldRows:!0,successFunc:null,loadDict:!1,custParas:{}})},selected:function(e,t){console.log(t),this.selectValue=t.row.envVarValue,this.selectText=t.row.envVarText}},template:'<div  ref="selectDefaultValueDialogWrap" class="general-edit-page-wrap" style="display: none;margin-top: 0px">\n                    <tabs :value="selectType" v-model="selectType">\n                        <tab-pane label="常量" name="Const" >\n                            <i-form :label-width="80" style="width: 80%;margin: 50px auto auto;">\n                                <form-item label="常量：">\n                                    <i-input v-model="constValue"></i-input>\n                                </form-item>\n                            </i-form>\n                        </tab-pane>\n                        <tab-pane label="环境变量" name="EnvVar">\n                            <div style="height: 45px;border-bottom: dotted 1px #8a8a8a;margin-bottom: 10px;">\n                                <div style="float: right;padding: 8px;border-radius: 8px;color:orangered;border: solid 1px #adbed8;">已经选择：{{selectText}}</div>\n                            </div>\n                            <div>\n                                <div style="width: 30%;float: left;height: 514px">\n                                    <div class="inner-wrap">\n                                        <div>\n                                            <ul id="zTreeUL" class="ztree"></ul>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style="width: 68%;float: left;height: 514px" class="iv-list-page-wrap">\n                                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"\n                                             class="iv-list-table" :highlight-row="true"\n                                             @on-selection-change="selectionChange"></i-table>\n                                </div>\n                            </div>\n                        </tab-pane>\n                    </tabs>\n                    <div class="button-outer-wrap">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="selectComplete()"> 确 认 </i-button>\n                                <i-button type="primary" @click="clearComplete()"> 清 空 </i-button>\n                                <i-button @click="handleClose()">关 闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'});var DefaultValueUtility={formatText:function(e,t){return"Const"==e?"静态值:【"+t+"】":"EnvVar"==e?"环境变量:【"+t+"】":""==e?"【无】":"未知类型"+t}};Vue.component("select-single-table-dialog",{data:function(){return{acInterface:{getTableDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList"},jsEditorInstance:null,tableTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;"Table"==i.nodeTypeName?a.selectedTable(e,t,i):a.selectedTable(e,t,null)}}},treeData:null,clickNode:null},selectedTableData:null}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectTableModelDialogWrap)},beginSelectTable:function(){var e=this.$refs.selectTableModelDialogWrap;this.getTableDataInitTree();var t=450;550<PageStyleUtility.GetPageHeight()&&(t=600),DialogUtility.DialogElemObj(e,{modal:!0,width:570,height:t,title:"选择表"})},getTableDataInitTree:function(){var t=this;AjaxUtility.Post(this.acInterface.getTableDataUrl,{},function(e){e.success?(t.tableTree.treeData=e.data,t.$refs.tableZTreeUL.setAttribute("id","select-table-single-comp-"+StringUtility.Guid()),t.tableTree.treeObj=$.fn.zTree.init($(t.$refs.tableZTreeUL),t.tableTree.treeSetting,t.tableTree.treeData),t.tableTree.treeObj.expandAll(!0),t.tableTree.treeObj._host=t,fuzzySearchTreeObj(t.tableTree.treeObj,t.$refs.txt_table_search_text.$refs.input,null,!0)):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedTable:function(e,t,i){this.selectedTableData=i},completed:function(){this.selectedTableData?(this.$emit("on-selected-table",this.selectedTableData),this.handleClose()):DialogUtility.AlertText("请选择表!")}},template:'<div ref="selectTableModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                    <div class="c1-select-model-source-wrap c1-select-model-source-has-buttons-wrap">\n                        <i-input search class="input_border_bottom" ref="txt_table_search_text" placeholder="请输入表名或者标题">\n                        </i-input>\n                        <div class="inner-wrap div-custom-scroll">\n                            <ul ref="tableZTreeUL" class="ztree"></ul>\n                        </div>\n                    </div>\n                    <div class="button-outer-wrap" style="bottom: 12px;right: 12px">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="completed()" icon="md-checkmark">确认</i-button>\n                                <i-button @click="handleClose()" icon="md-close">关闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n               </div>'}),Vue.component("select-single-webform-dialog",{data:function(){return{acInterface:{getTableDataUrl:"/Rest/Builder/Form/GetWebFormForZTreeNodeList"},jsEditorInstance:null,tree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;"WebForm"==i.nodeTypeName&&a.selectedForm(e,t,i)}}},treeData:null},selectedFormData:null,oldSelectedFormId:""}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectModelDialogWrap)},beginSelectForm:function(e){var t=this.$refs.selectModelDialogWrap;this.getFormDataInitTree(),this.oldSelectedFormId=e;DialogUtility.DialogElemObj(t,{modal:!0,width:570,height:500,title:"选择窗体"})},getFormDataInitTree:function(){var a=this;AjaxUtility.Post(this.acInterface.getTableDataUrl,{},function(e){if(e.success){a.tree.treeData=e.data;for(var t=0;t<a.tree.treeData.length;t++)"WebForm"==a.tree.treeData[t].nodeTypeName?a.tree.treeData[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/table.png":"Module"==a.tree.treeData[t].nodeTypeName&&(a.tree.treeData[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/folder-table.png");if(a.$refs.formZTreeUL.setAttribute("id","select-form-single-comp-"+StringUtility.Guid()),a.tree.treeObj=$.fn.zTree.init($(a.$refs.formZTreeUL),a.tree.treeSetting,a.tree.treeData),a.tree.treeObj.expandAll(!0),a.tree.treeObj._host=a,fuzzySearchTreeObj(a.tree.treeObj,a.$refs.txt_form_search_text.$refs.input,null,!0),null!=a.oldSelectedFormId&&""!=a.oldSelectedFormId){var i=a.tree.treeObj.getNodeByParam("id",a.oldSelectedFormId);a.tree.treeObj.selectNode(i)}}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedForm:function(e,t,i){this.selectedFormData=i},completed:function(){if(this.selectedFormData){var e={formModuleId:this.selectedFormData.attr4,formModuleName:this.selectedFormData.attr3,formId:this.selectedFormData.id,formName:this.selectedFormData.attr1,formCode:this.selectedFormData.attr2};this.$emit("on-selected-form",e),this.handleClose()}else DialogUtility.AlertText("请选择窗体!")}},template:'<div ref="selectModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none;">\n                    <div class="c1-select-model-source-wrap c1-select-model-source-has-buttons-wrap">\n                        <i-input search class="input_border_bottom" ref="txt_form_search_text" placeholder="请输入表单名称">\n                        </i-input>\n                        <div class="inner-wrap div-custom-scroll">\n                            <ul ref="formZTreeUL" class="ztree"></ul>\n                        </div>\n                    </div>\n                    <div class="button-outer-wrap" style="bottom: 12px;right: 12px">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="completed()" icon="md-checkmark">确认</i-button>\n                                <i-button @click="handleClose()" icon="md-close">关闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n               </div>'}),Vue.component("select-validate-rule-dialog",{data:function(){var i=this;return{selectValidateType:"NoEmpty",ruleParas:{msg:"字段",numLength:4,decimalLength:0,jsMethodName:"",regularText:"",regularMsg:""},addedValidateRule:[],validateColumnsConfig:[{title:"类型",key:"validateType",width:150,align:"center"},{title:"参数",key:"validateParas",align:"center"},{title:"删除",key:"validateId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[e("div",{class:"list-row-button del",on:{click:function(){i.delValidate(t.row.validateId)}}})])}}]}},mounted:function(){},methods:{beginSelect:function(e){var t=this.$refs.selectValidateRuleDialogWrap;DialogUtility.DialogElemObj(t,{modal:!0,height:680,width:980,title:"设置验证规则"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.ruleParas.msg="字段",this.ruleParas.numLength=4,this.ruleParas.decimalLength=0,this.ruleParas.jsMethodName="",this.ruleParas.regularText="",this.ruleParas.regularMsg="",this.addedValidateRule=[],this.bindOldSelectedValue(e)},bindOldSelectedValue:function(e){var t=e;0<t.rules.length&&(this.addedValidateRule=t.rules,this.msg=t.msg)},getSelectInstanceName:function(){return BaseUtility.GetUrlParaValue("instanceName")},selectComplete:function(){var e=this.addedValidateRule;if(0<this.addedValidateRule.length){e={msg:this.ruleParas.msg,rules:this.addedValidateRule};this.$emit("on-selected-validate-rule",JsonUtility.CloneSimple(e)),this.handleClose()}else this.clearComplete()},clearComplete:function(){this.$emit("on-clear-validate-rule"),this.handleClose()},handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectValidateRuleDialogWrap)},addValidateRule:function(){var e="";"Number"==this.selectValidateType?e=JsonUtility.JsonToString({numLength:this.ruleParas.numLength,decimalLength:this.ruleParas.decimalLength}):"Regular"==this.selectValidateType?e=JsonUtility.JsonToString({regularText:this.ruleParas.regularText,regularMsg:this.ruleParas.regularMsg}):"JsMethod"==this.selectValidateType&&(e=JsonUtility.JsonToString({jsMethodName:this.ruleParas.jsMethodName}));var t={validateId:StringUtility.Timestamp(),validateType:this.selectValidateType,validateParas:e};this.addedValidateRule.push(t)},delValidate:function(e){for(var t=0;t<this.addedValidateRule.length;t++)this.addedValidateRule[t].validateId==e&&this.addedValidateRule.splice(t,1)}},template:'<div ref="selectValidateRuleDialogWrap" v-cloak class="general-edit-page-wrap" style="display: none">\n                    <card style="margin-top: 10px" >\n                        <p slot="title">设置验证规则</p>\n                        <div>\n                            <radio-group type="button" style="margin: auto" v-model="selectValidateType">\n                                <radio label="NoEmpty">不为空</radio>\n                                <radio label="Number">数字</radio>\n                                <radio label="Mobile">手机</radio>\n                                <radio label="Date">日期</radio>\n                                <radio label="Time">时间</radio>\n                                <radio label="DateTime">日期时间</radio>\n                                <radio label="EMail">邮件</radio>\n                                <radio label="IDCard">身份证</radio>\n                                <radio label="URL">URL</radio>\n                                <radio label="ENCode">英文</radio>\n                                <radio label="SimpleCode">特殊字符</radio>\n                                <radio label="Regular">正则表达式</radio>\n                                <radio label="JsMethod">JS方法</radio>\n                            </radio-group>\n                            <i-button type="success" shape="circle" icon="md-add" style="margin-left: 15px;cursor: pointer" @click="addValidateRule"></i-button>\n                        </div>\n                        <div>\n                            <divider orientation="left" :dashed="true" style="font-size: 12px">参数设置</divider>\n                            \x3c!--数字类型参数设置--\x3e\n                            <div v-if="selectValidateType==\'Number\'">\n                                <i-form :label-width="80">\n                                    <form-item label="长度：">\n                                        <row>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <input-number :max="10" :min="1" v-model="ruleParas.numLength" size="small" style="width: 80%"></input-number>\n                                                </form-item>\n                                            </i-col>\n                                            <i-col span="4" style="text-align: center">小数位数：</i-col>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <input-number :max="10" :min="0" v-model="ruleParas.decimalLength" size="small" style="width: 80%"></input-number>\n                                                </form-item>\n                                            </i-col>\n                                        </row>\n                                    </form-item>\n                                </i-form>\n                            </div>\n                            \x3c!--正则表达式类型参数设置--\x3e\n                            <div v-if="selectValidateType==\'Regular\'">\n                                <i-form :label-width="80">\n                                    <form-item label="表达式：">\n                                        <row>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <i-input size="small" placeholder="Enter something..." v-model="ruleParas.regularText" style="width: 80%"></i-input>\n                                                </form-item>\n                                            </i-col>\n                                            <i-col span="4" style="text-align: center">提示信息：</i-col>\n                                            <i-col span="10">\n                                                <form-item>\n                                                    <i-input size="small" placeholder="Enter something..." v-model="ruleParas.regularMsg" style="width: 80%"></i-input>\n                                                </form-item>\n                                            </i-col>\n                                        </row>\n                                    </form-item>\n                                </i-form>\n                            </div>\n                            \x3c!--JS方法类型参数设置--\x3e\n                            <div v-if="selectValidateType==\'JsMethod\'">\n                                <i-form :label-width="80">\n                                    <form-item label="方法名：">\n                                        <i-input size="small" placeholder="Enter something..." v-model="ruleParas.jsMethodName" style="width: 90%"></i-input>\n                                    </form-item>\n                                </i-form>\n                            </div>\n                        </div>\n                    </card>\n                    <card style="margin-top: 10px">\n                        <p slot="title">已添加规则</p>\n                        <div>\n                            <divider orientation="left" :dashed="true" style="font-size: 12px;margin-top: 0px;margin-bottom: 6px">提示信息</divider>\n                            <i-form :label-width="0">\n                                <form-item label="">\n                                    <i-input  placeholder="请输入提示信息..."  v-model="ruleParas.msg"></i-input>\n                                </form-item>\n                            </i-form>\n                        </div>\n                        <div style="margin-bottom: 10px;overflow: auto" class="iv-list-page-wrap">\n                            <divider orientation="left" :dashed="true" style="font-size: 12px;margin-top: 0px;margin-bottom: 6px">验证规则</divider>\n                            <i-table border :columns="validateColumnsConfig" :data="addedValidateRule"\n                                     class="iv-list-table" size="small" no-data-text="请添加验证规则" :height="130"></i-table>\n                        </div>\n                    </card>\n                    <div class="button-outer-wrap">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="selectComplete()"> 确 认 </i-button>\n                                <i-button type="primary" @click="clearComplete()"> 清 空 </i-button>\n                                <i-button @click="handleClose()">关 闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("table-relation-connect-two-table-dialog",{data:function(){return{acInterface:{getTablesFieldsByTableIds:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesFieldsByTableIds"},fromTableField:{fieldData:[],columnsConfig:[{title:"字段名称",key:"fieldName",align:"center"},{title:"标题",key:"fieldCaption",align:"center"}]},toTableField:{fieldData:[],columnsConfig:[{title:"字段名称",key:"fieldName",align:"center"},{title:"标题",key:"fieldCaption",align:"center"}]},dialogHeight:0,resultData:{from:{tableId:"",text:""},to:{tableId:"",text:""}}}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.connectTableFieldModelDialogWrap)},completed:function(){""!=this.resultData.from.text&&""!=this.resultData.to.text?(this.$emit("on-completed-connect",this.resultData),this.handleClose()):DialogUtility.AlertText("请设置关联字段")},getFieldsAndBind:function(l,n){var e=[l,n],o=this;AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:e},function(e){if(e.success){var t=e.data,i=(e.exKVData.Tables,o.getSingleTableFieldsData(t,l)),a=o.getSingleTableFieldsData(t,n);o.fromTableField.fieldData=i,o.toTableField.fieldData=a}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},beginSelectConnect:function(e,t){var i=this.$refs.connectTableFieldModelDialogWrap;this.resultData.from.tableId=e,this.resultData.to.tableId=t,this.resultData.from.text="",this.resultData.to.text="",this.getFieldsAndBind(e,t);var a=450;550<PageStyleUtility.GetPageHeight()&&(a=600),this.dialogHeight=a,DialogUtility.DialogElemObj(i,{modal:!0,width:870,height:a,title:"设置关联"})},getSingleTableFieldsData:function(e,t){for(var i=[],a=0;a<e.length;a++)e[a].fieldTableId==t&&i.push(e[a]);return i},selectedFromField:function(e,t){this.resultData.from.text=e.fieldName+"[1]"},selectedToField:function(e,t){this.resultData.to.text=e.fieldName+"[0..N]"}},template:'<div ref="connectTableFieldModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                    <div class="c1-select-model-source-wrap c1-select-model-source-has-buttons-wrap" style="padding: 10px">\n                        <div style="float: left;width: 49%;height: 100%;">\n                            <i-input v-model="resultData.from.text" suffix="md-done-all" placeholder="开始关联字段" style="margin-bottom: 10px">\n                            </i-input>\n                            <i-table @on-row-click="selectedFromField" size="small" :height="dialogHeight-180" stripe border :columns="fromTableField.columnsConfig" :data="fromTableField.fieldData"\n                                         class="iv-list-table" :highlight-row="true"></i-table>\n                        </div>\n                        <div style="float:right;width: 49%;height: 100%;">\n                            <i-input v-model="resultData.to.text" suffix="md-done-all" placeholder="结束关联字段" style="margin-bottom: 10px">\n                            </i-input>\n                            <i-table @on-row-click="selectedToField" size="small" :height="dialogHeight-180" stripe border :columns="toTableField.columnsConfig" :data="toTableField.fieldData"\n                                         class="iv-list-table" :highlight-row="true"></i-table>\n                        </div>\n                    </div>\n                    <div class="button-outer-wrap" style="bottom: 12px;right: 12px">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="completed()" icon="md-checkmark">确认</i-button>\n                                <i-button @click="handleClose()" icon="md-close">关闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n               </div>'}),Vue.component("db-table-relation-comp",{data:function(){return{acInterface:{getTablesDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList",getTableFieldsUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTableFieldsByTableId"},relationTableTree:{treeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){window._dbtablerelationcomp.selectedRelationTableNode(i)}}},tableTreeRootData:{id:"-1",text:"数据关联",parentId:"",nodeTypeName:"根节点",icon:"../../../Themes/Png16X16/coins_add.png",_nodeExType:"root",tableId:"-1"},currentSelectedNode:null},relationTableEditorView:{isShowTableEditDetail:!1,isSubEditTr:!1,isMainEditTr:!1,selPKData:[],selSelfKeyData:[],selForeignKeyData:[]},emptyEditorData:{id:"",parentId:"",singleName:"",pkFieldName:"",desc:"",selfKeyFieldName:"",outerKeyFieldName:"",relationType:"1ToN",isSave:"true",condition:"",tableId:"",tableName:"",tableCaption:""},currentEditorData:{id:"",parentId:"",singleName:"",pkFieldName:"",desc:"",selfKeyFieldName:"",outerKeyFieldName:"",relationType:"1ToN",isSave:"true",condition:"",tableId:"",tableName:"",tableCaption:""},selectTableTree:{oldSelectedDBLinkId:"JBuild4dLocationDBLink",disabledDBLink:!1,dbLinkEntities:[],tableTreeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!0,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){if("Table"==i.nodeTypeName){var a=window._dbtablerelationcomp;$("#divSelectTable").dialog("close"),a.addTableToRelationTableTree(i)}}}},tableTreeData:null,allTableTreeData:null,selectedTableName:"无"},tempDataStore:{},resultData:[],treeNodeSetting:{MainTableNodeImg:"../../../Themes/Png16X16/page_key.png",SubTableNodeImg:"../../../Themes/Png16X16/page_refresh.png"}}},mounted:function(){this.getTablesAndBindOldSelected(),this.relationTableTree.treeObj=$.fn.zTree.init($("#dataRelationZTreeUL"),this.relationTableTree.tableTreeSetting,this.relationTableTree.tableTreeRootData),this.relationTableTree.treeObj.expandAll(!0),this.relationTableTree.currentSelectedNode=this.relationTableTree.treeObj.getNodeByParam("id","-1"),window._dbtablerelationcomp=this},watch:{currentEditorData:{handler:function(e,t){for(var i=0;i<this.resultData.length;i++)this.resultData[i].id==e.id&&this.resultItemCopyEditEnableValue(this.resultData[i],e)},deep:!0}},methods:{resultItemCopyEditEnableValue:function(e,t){e.singleName=t.singleName,e.pkFieldName=t.pkFieldName,e.desc=t.desc,e.selfKeyFieldName=t.selfKeyFieldName,e.outerKeyFieldName=t.outerKeyFieldName,e.relationType=t.relationType,e.isSave=t.isSave,e.condition=t.condition},getTableFieldsByTableId:function(t){if("-1"==t)return null;if(this.tempDataStore["tableField_"+t])return this.tempDataStore["tableField_"+t];var i=this;return AjaxUtility.PostSync(this.acInterface.getTableFieldsUrl,{tableId:t},function(e){e.success?i.tempDataStore["tableField_"+t]=e.data:DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this),this.tempDataStore["tableField_"+t]?this.tempDataStore["tableField_"+t]:null},getEmptyResultItem:function(){return JsonUtility.CloneSimple(this.emptyEditorData)},getExistResultItem:function(e){for(var t=0;t<this.resultData.length;t++)if(this.resultData[t].id==e)return this.resultData[t];return null},getTablesAndBindOldSelected:function(){var t=this;AjaxUtility.Post(this.acInterface.getTablesDataUrl,{},function(e){e.success?(t.selectTableTree.dbLinkEntities=e.exKVData.dbLinkEntityList,t.selectTableTree.allTableTreeData=e.data,t.bindSelectTableTree(!0),fuzzySearchTreeObj(t.selectTableTree.tableTreeObj,t.$refs.txt_table_search_text.$refs.input,null,!0)):DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},bindSelectTableTree:function(e){var t=CookieUtility.GetCookie("DBTRCDBLINKID");t&&e?this.selectTableTree.oldSelectedDBLinkId=t:t=this.selectTableTree.oldSelectedDBLinkId;for(var i=[],a=0;a<this.selectTableTree.allTableTreeData.length;a++)t==this.selectTableTree.allTableTreeData[a].outerId&&i.push(this.selectTableTree.allTableTreeData[a]);this.selectTableTree.tableTreeData=i,this.selectTableTree.tableTreeObj=$.fn.zTree.init($("#selectTableZTreeUL"),this.selectTableTree.tableTreeSetting,this.selectTableTree.tableTreeData),this.selectTableTree.tableTreeObj.expandAll(!0)},changeDBLink:function(e){CookieUtility.SetCookie1Month("DBTRCDBLINKID",e),this.bindSelectTableTree(!0)},getMainTableDBLinkId:function(){for(var e=0;e<this.selectTableTree.allTableTreeData.length;e++)if(this.selectTableTree.allTableTreeData[e].id==this.getMainTableId())return this.selectTableTree.allTableTreeData[e].outerId;return""},deleteSelectedRelationTreeNode:function(){if(this.relationTableTree.currentSelectedNode)if(this.isSelectedRootRelationTableNode())DialogUtility.AlertText("不能删除根节点!");else if(this.relationTableTree.currentSelectedNode.isParent)DialogUtility.AlertText("不能删除父节点!");else{for(var e=0;e<this.resultData.length;e++)if(this.resultData[e].id==this.relationTableTree.currentSelectedNode.id){this.resultData.splice(e,1);break}this.resultItemCopyEditEnableValue(this.currentEditorData,this.emptyEditorData),this.currentEditorData.id="",this.currentEditorData.parentId="",this.$refs.sqlGeneralDesignComp.setValue(""),this.relationTableEditorView.selPKData=[],this.relationTableEditorView.selSelfKeyData=[],this.relationTableEditorView.selForeignKeyData=[],this.relationTableEditorView.isShowTableEditDetail=!1,this.relationTableTree.treeObj.removeNode(this.relationTableTree.currentSelectedNode,!1),this.relationTableTree.currentSelectedNode=null}else DialogUtility.AlertText("请选择要删除的节点!")},beginSelectTableToRelationTable:function(){if(this.relationTableTree.currentSelectedNode){$("#divSelectTable").dialog({modal:!0,height:600,width:700});var e=this.getMainTableDBLinkId();this.selectTableTree.disabledDBLink=!!e&&(this.selectTableTree.oldSelectedDBLinkId=e,this.bindSelectTableTree(!1),!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"选择一个父节点!",null)},appendMainTableNodeProp:function(e){e._nodeExType="MainNode",e.icon=this.treeNodeSetting.MainTableNodeImg},appendSubTableNodeProp:function(e){e._nodeExType="SubNode",e.icon=this.treeNodeSetting.SubTableNodeImg},buildRelationTableNode:function(e,t){return"root"==this.relationTableTree.currentSelectedNode._nodeExType?this.appendMainTableNodeProp(e):this.appendSubTableNodeProp(e),e.tableId=e.id,e.id=t||StringUtility.Guid(),e},getMainRelationTableNode:function(){var e=this.relationTableTree.treeObj.getNodeByParam("_nodeExType","MainNode");return e||null},getMainTableId:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().tableId:""},getMainTableName:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().value:""},getMainTableCaption:function(){return this.getMainRelationTableNode()?this.getMainRelationTableNode().attr1:""},isSelectedRootRelationTableNode:function(){return"-1"==this.relationTableTree.currentSelectedNode.id},isSelectedMainRelationTableNode:function(){return"MainNode"==this.relationTableTree.currentSelectedNode._nodeExType},addTableToRelationTableTree:function(e){if(e=this.buildRelationTableNode(e),null!=this.getMainRelationTableNode()&&this.isSelectedRootRelationTableNode())DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"只允许存在一个主记录!",null);else{this.relationTableTree.treeObj.addNodes(this.relationTableTree.currentSelectedNode,-1,e,!1);var t=this.getEmptyResultItem();t.id=e.id,t.parentId=this.relationTableTree.currentSelectedNode.id,t.tableId=e.tableId,t.tableName=e.value,t.tableCaption=e.attr1,t.tableCode=e.code,this.resultData.push(t)}},selectedRelationTableNode:function(e){if(this.relationTableTree.currentSelectedNode=e,this.relationTableEditorView.isShowTableEditDetail=!this.isSelectedRootRelationTableNode(),this.relationTableEditorView.isMainEditTr=this.isSelectedMainRelationTableNode(),this.relationTableEditorView.isSubEditTr=!this.isSelectedMainRelationTableNode(),!this.isSelectedRootRelationTableNode()){this.relationTableEditorView.selPKData=null!=this.getTableFieldsByTableId(e.tableId)?this.getTableFieldsByTableId(e.tableId):[],this.relationTableEditorView.selSelfKeyData=null!=this.getTableFieldsByTableId(e.tableId)?this.getTableFieldsByTableId(e.tableId):[];var t=e.getParentNode();this.relationTableEditorView.selForeignKeyData=null!=this.getTableFieldsByTableId(t.tableId)?this.getTableFieldsByTableId(t.tableId):[],this.currentEditorData.id=this.relationTableTree.currentSelectedNode.id,this.currentEditorData.parentId=t.id;var i=this.getExistResultItem(e.id);if(null!=i){this.resultItemCopyEditEnableValue(this.currentEditorData,i);var a=this;window.setTimeout(function(){a.$refs.sqlGeneralDesignComp.setValue(a.currentEditorData.condition),a.$refs.sqlGeneralDesignComp.setAboutTableFields(a.relationTableEditorView.selSelfKeyData,a.relationTableEditorView.selForeignKeyData)},300)}else alert("通过getExistResultItem获取不到数据!")}},getResultData:function(){return this.resultData},serializeRelation:function(e){alert("serializeRelation已经停用")},deserializeRelation:function(e){alert("deserializeRelation已经停用")},getValue:function(){return{mainTableId:this.getMainTableId(),mainTableName:this.getMainTableName(),mainTableCaption:this.getMainTableCaption(),relationData:this.resultData}},setValue:function(e){var t=JsonUtility.StringToJson(e);this.resultData=t;for(var i=new Array,a=0;a<t.length;a++){var l={value:t[a].tableName,attr1:t[a].tableCaption,text:"【"+t[a].tableCode+"】"+t[a].tableCaption+"【"+t[a].tableName+"】",id:t[a].id,parentId:t[a].parentId,tableId:t[a].tableId,tableName:t[a].tableName,tableCaption:t[a].tableCaption,tableCode:t[a].tableCode};"-1"==t[a].parentId?this.appendMainTableNodeProp(l):this.appendSubTableNodeProp(l),i.push(l)}i.push(this.relationTableTree.tableTreeRootData),this.relationTableTree.treeObj=$.fn.zTree.init($("#dataRelationZTreeUL"),this.relationTableTree.tableTreeSetting,i),this.relationTableTree.treeObj.expandAll(!0)},alertSerializeRelation:function(){DialogUtility.AlertJsonCode(this.resultData)},inputDeserializeRelation:function(){DialogUtility.Prompt(window,{width:900,height:600},DialogUtility.DialogPromptId,"请贴入数据关联Json设置字符串",function(e){try{window._dbtablerelationcomp.setValue(e)}catch(e){alert("反序列化失败:"+e)}})}},template:'<div class="db-table-relation-comp">\n                <divider orientation="left" :dashed="true" style="font-size: 12px;margin-top: 0px;margin-bottom: 10px">数据关系关联设置</divider>\n                <div style="float: left;width: 350px;height: 330px;border: #ddddf1 1px solid;border-radius: 4px;padding: 10px 10px 10px 10px;">\n                    <button-group shape="circle" style="margin: auto">\n                        <i-button type="success" @click="beginSelectTableToRelationTable">&nbsp;添加&nbsp;</i-button>\n                        <i-button @click="deleteSelectedRelationTreeNode">&nbsp;删除&nbsp;</i-button>\n                        <i-button @click="alertSerializeRelation">序列化</i-button>\n                        <i-button @click="inputDeserializeRelation">反序列化</i-button>\n                        <i-button>说明</i-button>\n                    </button-group>\n                    <ul id="dataRelationZTreeUL" class="ztree" style="overflow-x: hidden"></ul>\n                </div>\n                <div style="float: right;width: 630px;height: 330px;border: #ddddf1 1px solid;border-radius: 4px;padding: 10px 10px 10px 10px;">\n                    <table class="light-gray-table" cellpadding="0" cellspacing="0" border="0" v-if="relationTableEditorView.isShowTableEditDetail">\n                        <colgroup>\n                            <col style="width: 17%" />\n                            <col style="width: 33%" />\n                            <col style="width: 15%" />\n                            <col style="width: 35%" />\n                        </colgroup>\n                        <tbody>\n                            <tr>\n                                <td class="label">SingleName：</td>\n                                <td>\n                                    <i-input v-model="currentEditorData.singleName" size="small" placeholder="本关联中的唯一名称,可以为空" />\n                                </td>\n                                <td class="label">PKKey：</td>\n                                <td>\n                                    <i-select placeholder="默认使用Id字段" v-model="currentEditorData.pkFieldName" size="small" style="width:199px">\n                                        <i-option v-for="item in relationTableEditorView.selPKData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>\n                                    </i-select>\n                                </td>\n                            </tr>\n                            <tr v-if="relationTableEditorView.isSubEditTr">\n                                <td class="label">数据关系：</td>\n                                <td>\n                                    <radio-group v-model="currentEditorData.relationType" type="button" size="small">\n                                        <radio label="1To1">1:1</radio>\n                                        <radio label="1ToN">1:N</radio>\n                                    </radio-group>\n                                </td>\n                                <td class="label">是否保存：</td>\n                                <td>\n                                    <radio-group v-model="currentEditorData.isSave" type="button" size="small">\n                                        <radio label="true">是</radio>\n                                        <radio label="false">否</radio>\n                                    </radio-group>\n                                </td>\n                            </tr>\n                            <tr v-if="relationTableEditorView.isSubEditTr">\n                                <td class="label">本身关联字段：</td>\n                                <td>\n                                     <i-select placeholder="默认使用Id字段" v-model="currentEditorData.selfKeyFieldName" size="small" style="width:199px">\n                                        <i-option v-for="item in relationTableEditorView.selSelfKeyData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>\n                                    </i-select>\n                                </td>\n                                <td class="label">外联字段：</td>\n                                <td>\n                                     <i-select placeholder="默认使用Id字段" v-model="currentEditorData.outerKeyFieldName" size="small" style="width:199px">\n                                        <i-option v-for="item in relationTableEditorView.selForeignKeyData" :value="item.fieldName" :key="item.fieldName">{{item.fieldCaption}}</i-option>\n                                    </i-select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class="label">Desc：</td>\n                                <td colspan="3">\n                                    <i-input v-model="currentEditorData.desc" size="small" placeholder="说明" />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td class="label">加载条件：</td>\n                                <td colspan="3">\n                                    <sql-general-design-comp ref="sqlGeneralDesignComp" :sqlDesignerHeight="74" v-model="currentEditorData.condition" :showField="true"></sql-general-design-comp>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div id="divSelectTable" title="请选择表" style="display: none">\n                    <i-input search class="input_border_bottom" ref="txt_table_search_text" placeholder="请输入表名或者标题">\n                        <i-select v-model="selectTableTree.oldSelectedDBLinkId" slot="prepend" style="width: 280px" @on-change="changeDBLink" :disabled="selectTableTree.disabledDBLink">\n                            <i-option :value="item.dbId" v-for="item in selectTableTree.dbLinkEntities">{{item.dbLinkName}}</i-option>\n                        </i-select>\n                    </i-input>\n                    <ul id="selectTableZTreeUL" class="ztree div-custom-scroll" style="height: 500px;overflow-y:scroll;overflow-x:hidden"></ul>\n                </div>\n              </div>'}),Vue.component("design-html-elem-list",{data:function(){return{}},mounted:function(){},methods:{},template:'<div class="design-html-elem-list-wrap">            <div class="design-html-elem-list-item">格式化</div>            <div class="design-html-elem-list-item">说明</div>        </div>'}),Vue.component("fd-control-base-info",{props:["value"],data:function(){return{baseInfo:{id:"",serialize:"",name:"",className:"",placeholder:"",custReadonly:"",custDisabled:"",style:"",desc:"",status:""}}},watch:{baseInfo:function(e){this.$emit("input",e)},value:function(e){this.baseInfo=e}},mounted:function(){this.baseInfo=this.value,this.baseInfo.status||(this.baseInfo.status="enable")},methods:{},template:'<table class="html-design-plugin-dialog-table-wraper" cellpadding="0" cellspacing="0" border="0">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 240px" />\n                        <col style="width: 90px" />\n                        <col style="width: 120px" />\n                        <col style="width: 90px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>ID：</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.id" />\n                            </td>\n                            <td>Serialize：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.serialize">\n                                    <radio label="true">是</radio>\n                                    <radio label="false">否</radio>\n                                </radio-group>\n                            </td>\n                            <td>启用：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.status">\n                                    <radio label="enable">是</radio>\n                                    <radio label="disable">否</radio>\n                                </radio-group>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Name：</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.name" />\n                            </td>\n                            <td>ClassName：</td>\n                            <td colspan="3">\n                                <input type="text" v-model="baseInfo.className" />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Placeholder</td>\n                            <td>\n                                <input type="text" v-model="baseInfo.placeholder" />\n                            </td>\n                            <td>Readonly：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.custReadonly">\n                                    <radio label="readonly">是</radio>\n                                    <radio label="noreadonly">否</radio>\n                                </radio-group>\n                            </td>\n                            <td>Disabled：</td>\n                            <td style="text-align: center">\n                                <radio-group type="button" style="margin: auto" v-model="baseInfo.custDisabled">\n                                    <radio label="disabled">是</radio>\n                                    <radio label="nodisabled">否</radio>\n                                </radio-group>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>样式：</td>\n                            <td colspan="5">\n                                <textarea rows="7" v-model="baseInfo.style"></textarea>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>备注：</td>\n                            <td colspan="5">\n                                <textarea rows="8" v-model="baseInfo.desc"></textarea>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("fd-control-bind-to",{props:["bindToFieldProp","defaultValueProp","validateRulesProp"],data:function(){return{bindToField:{tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},validateRules:{msg:"",rules:[]},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tempData:{defaultDisplayText:""}}},watch:{bindToProp:function(e){console.log(e)},bindToFieldProp:function(e){this.bindToField=e},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))},validateRulesProp:function(e){this.validateRules=e}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{setCompleted:function(){this.$emit("on-set-completed",this.bindToField,this.defaultValue,this.validateRules)},selectBindFieldView:function(){window._SelectBindObj=this,window.parent.appForm.selectBindToSingleFieldDialogBegin(window,this.getSelectFieldResultValue())},setSelectFieldResultValue:function(e){this.bindToField={},this.bindToField.fieldLength=null!=e?(this.bindToField.fieldName=e.fieldName,this.bindToField.tableId=e.tableId,this.bindToField.tableName=e.tableName,this.bindToField.tableCaption=e.tableCaption,this.bindToField.fieldCaption=e.fieldCaption,this.bindToField.fieldDataType=e.fieldDataType,e.fieldLength):(this.bindToField.fieldName="",this.bindToField.tableId="",this.bindToField.tableName="",this.bindToField.tableCaption="",this.bindToField.fieldCaption="",this.bindToField.fieldDataType=""),this.setCompleted()},getSelectFieldResultValue:function(){return JsonUtility.CloneSimple(this.bindToField)},selectDefaultValueView:function(){window._SelectBindObj=this,window.parent.appForm.selectDefaultValueDialogBegin(window,null)},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText=""),this.setCompleted()},selectValidateRuleView:function(){window._SelectBindObj=this,window.parent.appForm.selectValidateRuleDialogBegin(window,this.getSelectValidateRuleResultValue())},setSelectValidateRuleResultValue:function(e){null!=e?(this.validateRules=e,this.setCompleted()):(this.validateRules.msg="",this.validateRules.rules=[])},getSelectValidateRuleResultValue:function(){return this.validateRules}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col style="width: 100px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td colspan="4">\n                                绑定到表<button class="btn-select fright" v-on:click="selectBindFieldView">...</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>表编号：</td>\n                            <td colspan="3">{{bindToField.tableId}}</td>\n                        </tr>\n                        <tr>\n                            <td>表名：</td>\n                            <td>{{bindToField.tableName}}</td>\n                            <td>表标题：</td>\n                            <td>{{bindToField.tableCaption}}</td>\n                        </tr>\n                        <tr>\n                            <td>字段名：</td>\n                            <td>{{bindToField.fieldName}}</td>\n                            <td>字段标题：</td>\n                            <td>{{bindToField.fieldCaption}}</td>\n                        </tr>\n                        <tr>\n                            <td>类型：</td>\n                            <td>{{bindToField.fieldDataType}}</td>\n                            <td>长度：</td>\n                            <td>{{bindToField.fieldLength}}</td>\n                        </tr>\n                        <tr>\n                            <td colspan="4">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td>\n                        </tr>\n                        <tr style="height: 35px">\n                            <td colspan="4" style="background-color: #ffffff;">\n                            {{tempData.defaultDisplayText}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="4">\n                                校验规则<button class="btn-select fright" v-on:click="selectValidateRuleView">...</button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="4" style="background-color: #ffffff">\n                                <table class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 100px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td style="text-align: center;">提示消息：</td>\n                                            <td>{{validateRules.msg}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td style="text-align: center;">验证类型</td>\n                                            <td style="background: #e8eaec;text-align: center;">参数</td>\n                                        </tr>\n                                        <tr v-for="ruleItem in validateRules.rules">\n                                            <td style="background: #ffffff;text-align: center;color: #ad9361">{{ruleItem.validateType}}</td>\n                                            <td style="background: #ffffff;text-align: center;"><p v-if="ruleItem.validateParas === \'\'">无参数</p><p v-else>{{ruleItem.validateParas}}</p></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("fd-control-datasource",{data:function(){return{normalDataSource:{defaultIsNull:"true",sqlDataSource:"",dictionaryIdDataSource:"",restDataSource:"",staticDataSource:""}}},watch:{},mounted:function(){},methods:{getValue:function(){return this.normalDataSource.sqlDataSource=encodeURIComponent(this.normalDataSource.sqlDataSource),this.normalDataSource},setValue:function(e){this.normalDataSource=e,this.normalDataSource.sqlDataSource=decodeURIComponent(e.sqlDataSource),this.$refs.sqlGeneralDesignComp.setValue(this.normalDataSource.sqlDataSource)}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col style="width: 100px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>\n                                默认空：\n                            </td>\n                            <td>\n                                <radio-group type="button" style="margin: auto" v-model="normalDataSource.defaultIsNull">\n                                    <radio label="true">是</radio>\n                                    <radio label="false">否</radio>\n                                </radio-group>\n                            </td>\n                            <td colspan="2">\n                                获取数据源优先级别->Rest接口->本地接口->sql->静态值\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                静态值：\n                            </td>\n                            <td colspan="3">\n\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                数据字典：\n                            </td>\n                            <td colspan="3">\n\n                            </td>\n                        </tr>\n                        <tr>\n                            <td rowspan="2">\n                                SQL数据源：\n                            </td>\n                            <td colspan="3">\n                                <span style="color: red">[ITEXT与IVALUE请使用大写]</span>示例:【SELECT \'1\' ITEXT,\'2\' IVALUE】\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="3" style="background-color: #FFFFFF">\n                                <sql-general-design-comp ref="sqlGeneralDesignComp" :sql-designer-height="74"  v-model="normalDataSource.sqlDataSource"></sql-general-design-comp>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                REST数据源：\n                            </td>\n                            <td colspan="3">\n                                \n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("fd-control-select-bind-to-single-field-dialog",{data:function(){var a=this;return{acInterface:{getTablesDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesForZTreeNodeList",getTableFieldsDataUrl:"/Rest/Builder/DataStorage/DataBase/Table/GetTableFieldsByTableId",getTablesFieldsByTableIds:"/Rest/Builder/DataStorage/DataBase/Table/GetTablesFieldsByTableIds"},selectedData:{tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},tableTree:{tableTreeObj:null,tableTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"displayText"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.selectedData.tableId=i.tableId,a.selectedData.tableName=i.tableName,a.selectedData.tableCaption=i.tableCaption,a.selectedData.fieldName="",a.selectedData.fieldCaption="",a.selectedData.fieldDataType="",a.selectedData.fieldLength="",a.fieldTable.fieldData=[],a.filterAllFieldsToTable(a.selectedData.tableId)},onDblClick:function(e,t,i){},onAsyncSuccess:function(e,t,i,a){}}},tableTreeData:null,selectedTableName:"无"},fieldTable:{fieldData:[],tableHeight:470,columnsConfig:[{title:" ",width:60,key:"isSelectedToBind",render:function(e,t){return"1"==t.row.isSelectedToBind?e("div",{class:"list-row-button-wrap"},[e("div",{class:"list-row-button selected"})]):e("div",{class:""},"")}},{title:"名称",key:"fieldName",align:"center"},{title:"标题",key:"fieldCaption",align:"center"}]},oldRelationDataString:"",relationData:null,allFields:null,oldBindFieldData:null}},mounted:function(){},methods:{beginSelect:function(e,t){if(console.log("关联表数据："),console.log(e),console.log("已经绑定了的数据："),console.log(t),null==e||""==e||0==e.length)return DialogUtility.AlertText("请先设置表单的数据关联！"),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),void $(window.document).find(".ui-dialog").css("zIndex",10101);var i=this.$refs.fdControlSelectBindToSingleFieldDialogWrap;if(DialogUtility.DialogElemObj(i,{modal:!0,height:680,width:980,title:"选择绑定字段"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.oldBindFieldData=t,this.selectedData=JsonUtility.CloneSimple(t),JsonUtility.JsonToString(e)!=this.oldRelationDataString){for(var a=0;a<e.length;a++)e[a].displayText=e[a].tableName+"["+e[a].tableCaption+"]("+e[a].relationType+")","-1"==e[a].parentId&&(e[a].displayText=e[a].tableName+"["+e[a].tableCaption+"]"),e[a].icon="../../../Themes/Png16X16/table.png";this.tableTree.tableTreeObj=$.fn.zTree.init($("#tableZTreeUL"),this.tableTree.tableTreeSetting,e),this.tableTree.tableTreeObj.expandAll(!0),this.oldRelationDataString=JsonUtility.JsonToString(e),this.relationData=e,this.getAllTablesFields(e)}else this.resetFieldToSelectedStatus(this.allFields);if(t&&t.tableId&&""!=t.tableId){var l=this.tableTree.tableTreeObj.getNodeByParam("tableId",t.tableId);this.tableTree.tableTreeObj.selectNode(l,!1,!0)}},resetFieldToSelectedStatus:function(e){for(var t=0;t<this.fieldTable.fieldData.length;t++)this.fieldTable.fieldData[t].isSelectedToBind="0";if(e){for(t=0;t<e.length;t++)e[t].isSelectedToBind="0",e[t].fieldTableId==this.oldBindFieldData.tableId&&e[t].fieldName==this.oldBindFieldData.fieldName&&(e[t].isSelectedToBind="1");this.allFields=e}this.filterAllFieldsToTable(this.oldBindFieldData.tableId)},getAllTablesFields:function(e){for(var t=[],i=0;i<e.length;i++)t.push(e[i].tableId);var a=this;AjaxUtility.Post(this.acInterface.getTablesFieldsByTableIds,{tableIds:t},function(e){if(e.success){var t=e.data;e.exKVData.Tables[0];console.log("重新获取数据"),console.log(t),a.resetFieldToSelectedStatus(t)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},filterAllFieldsToTable:function(e){if(e){for(var t=[],i=0;i<this.allFields.length;i++)this.allFields[i].fieldTableId==e&&t.push(this.allFields[i]);this.fieldTable.fieldData=t,console.log(this.fieldTable.fieldData)}},selectedField:function(e,t){this.selectedData.fieldName=e.fieldName,this.selectedData.fieldCaption=e.fieldCaption,this.selectedData.fieldDataType=e.fieldDataType,this.selectedData.fieldLength=e.fieldDataLength;var i=this.tableTree.tableTreeObj.getNodeByParam("tableId",e.fieldTableId);this.selectedData.tableId=i.tableId,this.selectedData.tableName=i.tableName,this.selectedData.tableCaption=i.tableCaption},selectComplete:function(){var e=this.selectedData;StringUtility.IsNullOrEmpty(e.tableId)||StringUtility.IsNullOrEmpty(e.fieldName)?DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择需要绑定的字段!",null):(this.$emit("on-selected-bind-to-single-field",e),this.handleClose())},clearComplete:function(){window.OpenerWindowObj[this.getSelectInstanceName()].setSelectFieldResultValue(null),this.handleClose()},handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.fdControlSelectBindToSingleFieldDialogWrap)}},template:'<div ref="fdControlSelectBindToSingleFieldDialogWrap" class="general-edit-page-wrap design-dialog-wraper-single-dialog" style="display: none">\n                    <div class="select-table-wraper">\n                        <divider orientation="left" :dashed="true" style="font-size: 12px">选择表</divider>\n                        \x3c!--<input type="text" id="txtSearchTableTree" style="width: 100%;height: 32px;margin-top: 2px" />--\x3e\n                        <ul id="tableZTreeUL" class="ztree"></ul>\n                    </div>\n                    <div class="select-field-wraper iv-list-page-wrap">\n                        <divider orientation="left" :dashed="true" style="font-size: 12px">选择字段</divider>\n                        <i-table border :columns="fieldTable.columnsConfig" :data="fieldTable.fieldData"\n                                 class="iv-list-table" :highlight-row="true"\n                                 @on-row-click="selectedField" :height="fieldTable.tableHeight" size="small" no-data-text="请选择表"></i-table>\n                    </div>\n                    <div class="button-outer-wrap">\n                        <div class="button-inner-wrap">\n                            <button-group>\n                                <i-button type="primary" @click="selectComplete()"> 确 认 </i-button>\n                                <i-button type="primary" @click="clearComplete()"> 清 空 </i-button>\n                                <i-button @click="handleClose()">关 闭</i-button>\n                            </button-group>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("inner-form-button-list-comp",{props:["formId"],data:function(){var a=this;return{columnsConfig:[{title:"标题",key:"caption",align:"center"},{title:"类型",key:"buttonType",align:"center"},{title:"操作",key:"id",width:200,align:"center",render:function(e,t){var i=[];return"保存按钮"==t.row.buttonType&&i.push(ListPageUtility.IViewTableInnerButton.EditButton(e,t,"id",a)),i.push(ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,"id",a)),i.push(ListPageUtility.IViewTableInnerButton.MoveUpButton(e,t,"id",a)),i.push(ListPageUtility.IViewTableInnerButton.MoveDownButton(e,t,"id",a)),e("div",{class:"list-row-button-wrap"},i)}}],tableData:[],innerSaveButtonEditData:{caption:"",saveAndClose:"true",apis:[],fields:[],id:"",buttonType:"保存按钮",custServerResolveMethod:"",custServerResolveMethodPara:"",custClientRendererMethod:"",custClientRendererMethodPara:"",custClientRendererAfterMethod:"",custClientRendererAfterMethodPara:"",custClientClickBeforeMethod:"",custClientClickBeforeMethodPara:""},api:{acInterface:{getAPIData:"/Rest/Builder/ApiItem/GetAPISForZTreeNodeList"},apiTreeObj:null,apiTreeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.api.apiSelectData=i}}},apiData:null,apiSelectData:null,editTableObject:null,editTableConfig:{Status:"Edit",AddAfterRowEvent:null,DataField:"fieldName",Templates:[{Title:"API名称",BindName:"Value",Renderer:"EditTable_Label",TitleCellClassName:"TitleCell",Formater:function(e){return a.getAPIText(e)}},{Title:"调用顺序",BindName:"RunTime",Renderer:"EditTable_Select",ClientDataSource:[{Text:"之前",Value:"之前"},{Text:"之后",Value:"之后"}],Width:100}],RowIdCreater:function(){},TableClass:"edit-table",RendererTo:"apiContainer",TableId:"apiContainerTable",TableAttrs:{cellpadding:"1",cellspacing:"1",border:"1"}}},field:{acInterface:{getFormMainTableFields:"/Rest/Builder/Form/GetFormMainTableFields"},editTableObject:null,editTableConfig:{Status:"Edit",AddAfterRowEvent:null,DataField:"fieldName",Templates:[{Title:"表名标题",BindName:"TableName",Renderer:"EditTable_Label"},{Title:"字段标题",BindName:"FieldName",Renderer:"EditTable_Select"},{Title:"默认值",BindName:"DefaultValue",Renderer:"EditTable_SelectDefaultValue",Hidden:!1}],RowIdCreater:function(){},TableClass:"edit-table",RendererTo:"fieldContainer",TableId:"fieldContainerTable",TableAttrs:{cellpadding:"1",cellspacing:"1",border:"1"}}},oldFormId:""}},mounted:function(){},methods:{ready:function(e){null!=e&&""!=e&&(this.tableData=JsonUtility.StringToJson(e)),this.bindAPITreeAndInitEditTable(null)},getJson:function(){return JsonUtility.JsonToString(this.tableData)},handleClose:function(e){DialogUtility.CloseDialogElem(this.$refs[e])},edit:function(e,t){"保存按钮"==t.row.buttonType&&this.editInnerFormSaveButton(t)},del:function(e,t){for(var i=0;i<this.tableData.length;i++)this.tableData[i].id==e&&ArrayUtility.Delete(this.tableData,i)},moveUp:function(e,t){for(var i=0;i<this.tableData.length;i++)if(this.tableData[i].id==e)return void ArrayUtility.MoveUp(this.tableData,i)},moveDown:function(e,t){for(var i=0;i<this.tableData.length;i++)if(this.tableData[i].id==e)return void ArrayUtility.MoveDown(this.tableData,i)},addInnerFormSaveButton:function(){if(null!=this.formId&&""!=this.formId){this.editSaveButtonStatuc="add",this.resetInnerSaveButtonData();var e=this.$refs.innerFormButtonEdit;DialogUtility.DialogElemObj(e,{modal:!0,height:520,width:720,title:"窗体内按钮"}),$(window.document).find(".ui-widget-overlay").css("zIndex",10100),$(window.document).find(".ui-dialog").css("zIndex",10101),this.innerSaveButtonEditData.id="inner_form_button_"+StringUtility.Timestamp(),this.bindTableFields(null)}else DialogUtility.AlertText("请先设置绑定的窗体!")},editInnerFormSaveButton:function(e){this.addInnerFormSaveButton(),this.innerSaveButtonEditData=JsonUtility.CloneStringify(e.row),this.editSaveButtonStatuc="edit",this.bindAPITreeAndInitEditTable(this.innerSaveButtonEditData.apis),this.bindTableFields(this.innerSaveButtonEditData.fields)},resetInnerSaveButtonData:function(){this.innerSaveButtonEditData={caption:"",saveAndClose:"true",apis:[],fields:[],id:"",buttonType:"保存按钮",custServerResolveMethod:"",custServerResolveMethodPara:"",custClientRendererMethod:"",custClientRendererMethodPara:"",custClientRendererAfterMethod:"",custClientRendererAfterMethodPara:"",custClientClickBeforeMethod:"",custClientClickBeforeMethodPara:""}},saveInnerSaveButtonToList:function(){var e=JsonUtility.CloneSimple(this.innerSaveButtonEditData);if(this.api.editTableObject.CompletedEditingRow(),e.apis=this.api.editTableObject.GetSerializeJson(),this.field.editTableObject.CompletedEditingRow(),e.fields=this.field.editTableObject.GetSerializeJson(),"add"==this.editSaveButtonStatuc)this.tableData.push(e);else for(var t=0;t<this.tableData.length;t++)this.tableData[t].id==e.id&&Vue.set(this.tableData,t,e);this.handleClose("innerFormButtonEdit")},bindTableFields:function(a){this.oldFormId!=this.formId&&AjaxUtility.Post(this.field.acInterface.getFormMainTableFields,{formId:this.formId},function(e){for(var t=[],i=0;i<e.data.length;i++)t.push({Value:e.data[i].fieldName,Text:e.data[i].fieldCaption});this.field.editTableConfig.Templates[0].DefaultValue={Type:"Const",Value:e.data[0].tableName},this.field.editTableConfig.Templates[1].ClientDataSource=t,this.field.editTableObject||(this.field.editTableObject=Object.create(EditTable),this.field.editTableObject.Initialization(this.field.editTableConfig)),this.oldFormId=this.formId,a&&this.field.editTableObject.LoadJsonData(a)},this),this.field.editTableObject&&this.field.editTableObject.RemoveAllRow(),a&&this.field.editTableObject&&this.field.editTableObject.LoadJsonData(a)},addField:function(){this.field.editTableObject.AddEditingRowByTemplate()},removeField:function(){this.field.editTableObject.AddEditingRowByTemplate()},addInnerFormCloseButton:function(){var e={caption:"关闭",id:"inner_close_button_"+StringUtility.Timestamp(),buttonType:"关闭按钮"};this.tableData.push(e)},bindAPITreeAndInitEditTable:function(e){this.api.apiData||(AjaxUtility.Post(this.api.acInterface.getAPIData,{},function(e){if(e.success){if(this.api.apiData=e.data,null!=e.data&&0<e.data.length)for(var t=0;t<e.data.length;t++)"Group"==e.data[t].nodeTypeName?e.data[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/package.png":e.data[t].icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/application_view_columns.png";this.api.apiTreeObj=$.fn.zTree.init($("#apiZTreeUL"),this.api.apiTreeSetting,e.data),this.api.apiTreeObj.expandAll(!0),fuzzySearchTreeObj(this.api.apiTreeObj,this.$refs.txt_search_api_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this),this.api.editTableObject=Object.create(EditTable),this.api.editTableObject.Initialization(this.api.editTableConfig)),this.api.editTableObject.RemoveAllRow(),e&&this.api.editTableObject.LoadJsonData(e)},getApiConfigAndBindToTable:function(){},addAPI:function(){"API"==this.api.apiSelectData.nodeTypeName?this.api.editTableObject.AddEditingRowByTemplate([],{Value:this.api.apiSelectData.value,RunTime:"之后"}):DialogUtility.AlertText("请选择需要添加的API!")},removeAPI:function(){this.api.editTableObject.RemoveRow()},getAPIText:function(e){for(var t=0;t<this.api.apiData.length;t++)if("API"==this.api.apiData[t].nodeTypeName&&this.api.apiData[t].value==e)return this.api.apiData[t].text;return""}},template:'<div style="height: 210px" class="iv-list-page-wrap">\n                    <div ref="innerFormButtonEdit" class="html-design-plugin-dialog-wraper general-edit-page-wrap" style="display: none;margin-top: 0px">\n                        <tabs size="small">\n                            <tab-pane label="绑定信息">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 60px" />\n                                        <col style="width: 220px" />\n                                        <col style="width: 100px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td>标题：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.caption" />\n                                            </td>\n                                            <td>保存并关闭：</td>\n                                            <td>\n                                                <radio-group type="button" style="margin: auto" v-model="innerSaveButtonEditData.saveAndClose">\n                                                    <radio label="true">是</radio>\n                                                    <radio label="false">否</radio>\n                                                </radio-group>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>字段：</td>\n                                            <td colspan="3">\n                                                <div style="height: 140px">\n                                                    <div style="float: left;width: 94%">\n                                                        <div id="fieldContainer" class="edit-table-wrap" style="height: 320px;overflow: auto;width: 98%;margin: auto"></div>\n                                                    </div>\n                                                    <div style="float: right;width: 5%">\n                                                        <button-group vertical>\n                                                            <i-button size="small" type="success" icon="md-add" @click="addField"></i-button>\n                                                            <i-button size="small" type="primary" icon="md-close" @click="removeField"></i-button>\n                                                        </button-group>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                            <tab-pane label="API设置">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 320px" />\n                                        <col style="width: 60px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td style="background: #ffffff">\n                                                <i-input search class="input_border_bottom" ref="txt_search_api_text" placeholder="请输入API名称"></i-input>\n                                                <ul id="apiZTreeUL" class="ztree" style="height: 320px;overflow: auto"></ul>\n                                            </td>\n                                            <td style="text-align: center;background-color: #f8f8f8">\n                                                <button-group vertical>\n                                                    <i-button size="small" type="success" icon="md-add" @click="addAPI"></i-button>\n                                                    <i-button size="small" type="primary" icon="md-close" @click="removeAPI"></i-button>\n                                                </button-group>\n                                            </td>\n                                            <td style="background: #ffffff;" valign="top">\n                                                <div id="apiContainer" class="edit-table-wrap" style="height: 340px;overflow: auto;width: 98%;margin: auto"></div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                            <tab-pane label="开发扩展">\n                                <table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                                    <colgroup>\n                                        <col style="width: 150px" />\n                                        <col />\n                                    </colgroup>\n                                    <tbody>\n                                        <tr>\n                                            <td>ID：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.id" size="small" placeholder="" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>服务端解析类：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custServerResolveMethod" size="small" placeholder="按钮进行服务端解析时,类全称,将调用该类,需要实现接口IFormButtonCustResolve" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custServerResolveMethodPara" size="small" placeholder="服务端解析类的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端渲染方法：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererMethod" size="small" placeholder="客户端渲染方法,按钮将经由该方法渲染,最终形成页面元素,需要返回最终元素的HTML对象" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererMethodPara" size="small" placeholder="客户端渲染方法的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端渲染后方法：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererAfterMethod" size="small" placeholder="客户端渲染后调用方法,经过默认的渲染,无返回值" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientRendererAfterMethodPara" size="small" placeholder="客户端渲染后方法的参数" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>客户端点击前方法：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientClickBeforeMethod" size="small" placeholder="客户端点击该按钮时的前置方法,如果返回false将阻止默认调用" />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>参数：</td>\n                                            <td>\n                                                <i-input v-model="innerSaveButtonEditData.custClientClickBeforeMethodPara" size="small" placeholder="客户端点击前方法的参数" />\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </tab-pane>\n                        </tabs>\n                        <div class="button-outer-wrap">\n                            <div class="button-inner-wrap">\n                                <button-group>\n                                    <i-button type="primary" @click="saveInnerSaveButtonToList()"> 保 存</i-button>\n                                    <i-button @click="handleClose(\'innerFormButtonEdit\')">关 闭</i-button>\n                                </button-group>\n                            </div>\n                        </div>\n                    </div>\n                    <div style="height: 210px;width: 100%">\n                        <div style="float: left;width: 84%">\n                            <i-table :height="210" width="100%" stripe border :columns="columnsConfig" :data="tableData"\n                                                     class="iv-list-table" :highlight-row="true"\n                                                     size="small"></i-table>\n                        </div>\n                        <div style="float: right;width: 15%">\n                            <ButtonGroup vertical>\n                                <i-button type="success" @click="addInnerFormSaveButton()" icon="md-add">保存按钮</i-button>\n                                <i-button icon="md-add" disabled>意见按钮</i-button>\n                                <i-button type="primary" @click="addInnerFormCloseButton()" icon="md-add">关闭按钮</i-button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </div>'}),Vue.component("list-search-control-bind-to-comp",{props:["bindToSearchFieldProp","dataSetId"],data:function(){var a=this;return{bindToSearchField:{columnTitle:"",columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",columnOperator:"匹配"},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"pid",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.selectColumn(i)},onDblClick:function(e,t,i){},onAsyncSuccess:function(e,t,i,a){}}},treeData:null},tempData:{defaultDisplayText:""}}},watch:{bindToSearchFieldProp:function(e){console.log(e)},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{init:function(e){console.log(e);var t=[],i={pid:"-1",text:e.dsName,id:e.dsId,nodeType:"DataSet"};t.push(i);for(var a=0;a<e.relatedTableVoList.length;a++){t.push({pid:e.dsId,text:e.relatedTableVoList[a].rtTableCaption,id:e.relatedTableVoList[a].rtTableId,nodeType:"Table"});for(var l=0;l<e.relatedTableVoList[a].tableFieldPOList.length;l++){var n=e.relatedTableVoList[a].tableFieldPOList[l];n.pid=e.relatedTableVoList[a].rtTableId,n.text=n.fieldCaption+"["+n.fieldName+"]",n.nodeType="TableField",n.id=n.fieldId,n.icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/page.png",t.push(n)}}this.tree.treeObj=$.fn.zTree.init($(this.$refs.zTreeUL),this.tree.treeSetting,t),this.tree.treeObj.expandAll(!0),fuzzySearchTreeObj(this.tree.treeObj,this.$refs.txt_search_text.$refs.input,null,!0)},selectColumn:function(e){"TableField"==e.nodeType&&(this.bindToSearchField.columnTableName=e.tableName,this.bindToSearchField.columnName=e.fieldName,this.bindToSearchField.columnCaption=e.fieldCaption,this.bindToSearchField.columnDataTypeName=e.fieldDataType)},getData:function(){return console.log(this.bindToSearchField),{bindToSearchField:this.bindToSearchField,defaultValue:this.defaultValue}},setData:function(e,t){console.log(e),this.bindToSearchField=e,this.defaultValue=t,this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)},selectDefaultValueView:function(){window._SelectBindObj=this,window.parent.listDesign.selectDefaultValueDialogBegin(window,null)},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText="")}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>\n                                标题：\n                            </td>\n                            <td>\n                                <input type="text" v-model="bindToSearchField.columnTitle" />\n                            </td>\n                            <td rowspan="9" valign="top">\n                                <i-input search class="input_border_bottom" ref="txt_search_text" placeholder="请输入列名或者标题"></i-input>                                <ul ref="zTreeUL" class="ztree div-custom-scroll" style="height: 430px;overflow-x:hidden;overflow-y: scroll"></ul>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                所属表：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnTableName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                绑定字段：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnCaption}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段名称：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段类型：\n                            </td>\n                            <td>\n                                {{bindToSearchField.columnDataTypeName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                运算符：\n                            </td>\n                            <td>\n                                <i-select v-model="bindToSearchField.columnOperator" style="width:260px">\n                                    <i-option value="eq">等于</i-option>\n                                    <i-option value="like">匹配</i-option>\n                                    <i-option value="not_eq">不等于</i-option>\n                                    <i-option value="gt">大于</i-option>\n                                    <i-option value="gt_eq">大于等于</i-option>\n                                    <i-option value="lt">小于</i-option>\n                                    <i-option value="lt_eq">小于等于</i-option>\n                                    <i-option value="left_like">左匹配</i-option>\n                                    <i-option value="right_like">右匹配</i-option>\n                                    <i-option value="include">包含[暂时不支持]</i-option>\n                                </i-select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="2">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td>\n                        </tr>\n                        <tr style="height: 35px">\n                            <td colspan="2" style="background-color: #ffffff;">\n                                {{tempData.defaultDisplayText}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                备注：\n                            </td>\n                            <td>\n                                <textarea rows="8"></textarea>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("list-table-label-bind-to-comp",{props:["bindPropProp","dataSetId"],data:function(){var a=this;return{bindProp:{columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",targetButtonId:"",columnAlign:"居中对齐"},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},tree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"text"},simpleData:{enable:!0,idKey:"id",pIdKey:"pid",rootPId:"-1"}},callback:{onClick:function(e,t,i){a.selectColumn(i)},onDblClick:function(e,t,i){},onAsyncSuccess:function(e,t,i,a){}}},treeData:null},tempData:{defaultDisplayText:""},buttons:[]}},watch:{bindPropProp:function(e){console.log(e)},defaultValueProp:function(e){this.defaultValue=e,StringUtility.IsNullOrEmpty(this.defaultValue.defaultType)||(this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText))}},mounted:function(){this.bindToField=this.bindToFieldProp},methods:{init:function(e,t){console.log(e);for(var i=[],a=e.columnVoList,l=0;l<a.length;l++){var n=a[l];n.pid=e.dsId,n.text=n.columnCaption+"["+n.columnName+"]",n.nodeType="DataSetColumn",n.id=n.columnId,n.icon=BaseUtility.GetRootPath()+"/Themes/Png16X16/page.png",i.push(n)}var o={pid:"-1",text:e.dsName,id:e.dsId,nodeType:"DataSet"};i.push(o),this.tree.treeObj=$.fn.zTree.init($(this.$refs.zTreeUL),this.tree.treeSetting,i),this.tree.treeObj.expandAll(!0),this.buttons=t},selectColumn:function(e){this.bindProp.columnTableName=e.columnTableName,this.bindProp.columnName=e.columnName,this.bindProp.columnCaption=e.columnCaption,this.bindProp.columnDataTypeName=e.columnDataTypeName},getData:function(){return console.log(this.bindProp),this.bindProp.targetButtonId||(this.bindProp.targetButtonId=""),{bindProp:this.bindProp,defaultValue:this.defaultValue}},setData:function(e,t){console.log(e),this.bindProp=e,this.defaultValue=t,this.tempData.defaultDisplayText=DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)},selectDefaultValueView:function(){window._SelectBindObj=this,window.parent.listDesign.selectDefaultValueDialogBegin(window,null)},setSelectEnvVariableResultValue:function(e){this.tempData.defaultDisplayText=null!=e?(this.defaultValue.defaultType=e.Type,this.defaultValue.defaultValue=e.Value,this.defaultValue.defaultText=e.Text,DefaultValueUtility.formatText(this.defaultValue.defaultType,this.defaultValue.defaultText)):(this.defaultValue.defaultType="",this.defaultValue.defaultValue="",this.defaultValue.defaultText="")}},template:'<table cellpadding="0" cellspacing="0" border="0" class="html-design-plugin-dialog-table-wraper">\n                    <colgroup>\n                        <col style="width: 100px" />\n                        <col style="width: 280px" />\n                        <col />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <td>\n                                对齐方式：\n                            </td>\n                            <td>\n                                <i-select v-model="bindProp.columnAlign" style="width:260px">\n                                    <i-option value="左对齐">左对齐</i-option>\n                                    <i-option value="居中对齐">居中对齐</i-option>\n                                    <i-option value="右对齐">右对齐</i-option>\n                                </i-select>\n                            </td>\n                            <td rowspan="9" valign="top">\n                                <ul ref="zTreeUL" class="ztree"></ul>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                所属表：\n                            </td>\n                            <td>\n                                {{bindProp.columnTableName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                绑定字段：\n                            </td>\n                            <td>\n                                {{bindProp.columnCaption}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段名称：\n                            </td>\n                            <td>\n                                {{bindProp.columnName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                字段类型： \n                            </td>\n                            <td>\n                                {{bindProp.columnDataTypeName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                触发按钮：\n                            </td>\n                            <td>\n                                <i-select v-model="bindProp.targetButtonId" style="width:260px" :clearable="true">\n                                    <i-option :value="item.buttonId" v-for="item in buttons">{{item.buttonCaption}}</i-option>\n                                </i-select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan="2">默认值<button class="btn-select fright" v-on:click="selectDefaultValueView">...</button></td>\n                        </tr>\n                        <tr style="height: 35px">\n                            <td colspan="2" style="background-color: #ffffff;">\n                                {{tempData.defaultDisplayText}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                备注：\n                            </td>\n                            <td>\n                                <textarea rows="8"></textarea>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>'}),Vue.component("module-list-webform-comp",{props:["listHeight","moduleData","activeTabName"],data:function(){var i=this;return{acInterface:{editView:"/HTML/Builder/Form/FormDesign.html",reloadData:"/Rest/Builder/Form/GetListData",delete:"/Rest/Builder/Form/Delete",move:"/Rest/Builder/Form/Move"},idFieldName:"formId",searchCondition:{formModuleId:{value:"",type:SearchUtility.SearchFieldType.StringType}},columnsConfig:[{type:"selection",width:60,align:"center"},{title:"编号",key:"formCode",align:"center",width:80},{title:"表单名称",key:"formName",align:"center"},{title:"唯一名",key:"formSingleName",align:"center"},{title:"备注",key:"formDesc",align:"center"},{title:"编辑时间",key:"formUpdateTime",width:100,align:"center",render:function(e,t){return ListPageUtility.IViewTableRenderer.ToDateYYYY_MM_DD(e,t.row.formUpdateTime)}},{title:"操作",key:"formId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.EditButton(e,t,i.idFieldName,i),ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,i.idFieldName,i)])}}],tableData:[],tableDataOriginal:[],selectionRows:null,pageTotal:0,pageSize:500,pageNum:1,searchText:""}},mounted:function(){window._modulelistwebformcomp=this},watch:{moduleData:function(e){this.reloadData()},activeTabName:function(e){this.reloadData()},searchText:function(e){if(e){for(var t=[],i=0;i<this.tableData.length;i++){var a=this.tableData[i];0<=a.formCode.indexOf(e)?t.push(a):0<=a.formName.indexOf(e)&&t.push(a)}this.tableData=t}else this.tableData=this.tableDataOriginal}},methods:{getModuleName:function(){return null==this.moduleData?"请选中模块":this.moduleData.moduleText},selectionChange:function(e){this.selectionRows=e},reloadData:function(){null!=this.moduleData&&"list-webform"==this.activeTabName&&(this.searchCondition.formModuleId.value=this.moduleData.moduleId,ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:this.idFieldName,autoSelectedOldRows:!0,successFunc:function(e,t){t.tableDataOriginal=e.data.list},loadDict:!1,custParas:{}}))},add:function(){if(null!=this.moduleData){var e=BaseUtility.BuildView(this.acInterface.editView,{op:"add",moduleId:this.moduleData.moduleId});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,e,{width:0,height:0},2)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择模块!",null)},edit:function(e){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"update",recordId:e});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,t,{width:0,height:0},2)},del:function(e){ListPageUtility.IViewTableDeleteRow(this.acInterface.delete,e,this)},statusEnable:function(e){ListPageUtility.IViewChangeServerStatusFace(this.acInterface.statusChange,this.selectionRows,appList.idFieldName,e,appList)},move:function(e){ListPageUtility.IViewMoveFace(this.acInterface.move,this.selectionRows,this.idFieldName,e,this)}},template:'<div class="module-list-wrap">\n                    <div id="list-button-wrap" class="list-button-outer-wrap">\n                        <div class="module-list-name"><Icon type="ios-arrow-dropright-circle" />&nbsp;模块【{{getModuleName()}}】</div>\n                        <div class="list-button-inner-wrap">\n                            <ButtonGroup>\n                                <i-button  type="success" @click="add()" icon="md-add">新增</i-button>\n                                <i-button type="primary" disabled icon="md-add">引入URL </i-button>\n                                <i-button type="primary" disabled icon="md-albums">复制</i-button>\n                                <i-button type="primary" disabled icon="md-pricetag">预览</i-button>\n                                <i-button type="primary" disabled icon="md-bookmarks">历史版本</i-button>\n                                <i-button type="primary" disabled icon="md-brush">复制ID</i-button>\n                                <i-button type="primary" @click="move(\'up\')" icon="md-arrow-up">上移</i-button>\n                                <i-button type="primary" @click="move(\'down\')" icon="md-arrow-down">下移</i-button>\n                            </ButtonGroup>\n                        </div>\n                         <div style="float: right;width: 200px;margin-right: 10px;">\n                            <i-input search class="input_border_bottom" v-model="searchText">\n                            </i-input>\n                        </div>                        <div style="clear: both"></div>\n                    </div>\n                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"\n                             class="iv-list-table" :highlight-row="true"\n                             @on-selection-change="selectionChange"></i-table>\n                </div>'}),Vue.component("module-list-weblist-comp",{props:["listHeight","moduleData","activeTabName"],data:function(){var i=this;return{acInterface:{editView:"/HTML/Builder/List/ListDesign.html",reloadData:"/Rest/Builder/List/GetListData",delete:"/Rest/Builder/List/Delete",move:"/Rest/Builder/List/Move"},idFieldName:"listId",searchCondition:{listModuleId:{value:"",type:SearchUtility.SearchFieldType.StringType}},columnsConfig:[{type:"selection",width:60,align:"center"},{title:"编号",key:"listCode",align:"center",width:80},{title:"列表名称",key:"listName",align:"center"},{title:"唯一名",key:"listSingleName",align:"center"},{title:"备注",key:"listDesc",align:"center"},{title:"编辑时间",key:"listUpdateTime",width:100,align:"center",render:function(e,t){return ListPageUtility.IViewTableRenderer.ToDateYYYY_MM_DD(e,t.row.listUpdateTime)}},{title:"操作",key:"listId",width:120,align:"center",render:function(e,t){return e("div",{class:"list-row-button-wrap"},[ListPageUtility.IViewTableInnerButton.EditButton(e,t,i.idFieldName,i),ListPageUtility.IViewTableInnerButton.DeleteButton(e,t,i.idFieldName,i)])}}],tableData:[],tableDataOriginal:[],selectionRows:null,pageTotal:0,pageSize:500,pageNum:1,searchText:""}},mounted:function(){window._modulelistweblistcomp=this},watch:{moduleData:function(e){this.reloadData()},activeTabName:function(e){this.reloadData()},searchText:function(e){if(e){for(var t=[],i=0;i<this.tableData.length;i++){var a=this.tableData[i];0<=a.formCode.indexOf(e)?t.push(a):0<=a.formName.indexOf(e)&&t.push(a)}this.tableData=t}else this.tableData=this.tableDataOriginal}},methods:{getModuleName:function(){return null==this.moduleData?"请选中模块":this.moduleData.moduleText},selectionChange:function(e){this.selectionRows=e},reloadData:function(){null!=this.moduleData&&"list-weblist"==this.activeTabName&&(this.searchCondition.listModuleId.value=this.moduleData.moduleId,ListPageUtility.IViewTableBindDataBySearch({url:this.acInterface.reloadData,pageNum:this.pageNum,pageSize:this.pageSize,searchCondition:this.searchCondition,pageAppObj:this,tableList:this,idField:this.idFieldName,autoSelectedOldRows:!0,successFunc:function(e,t){t.tableDataOriginal=e.data.list},loadDict:!1,custParas:{}}))},add:function(){if(null!=this.moduleData){var e=BaseUtility.BuildView(this.acInterface.editView,{op:"add",moduleId:this.moduleData.moduleId});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,e,{width:0,height:0},2)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"请选择模块!",null)},edit:function(e){var t=BaseUtility.BuildView(this.acInterface.editView,{op:"update",recordId:e});DialogUtility.OpenNewWindow(window,DialogUtility.DialogId,t,{width:0,height:0},2)},del:function(e){ListPageUtility.IViewTableDeleteRow(this.acInterface.delete,e,this)},statusEnable:function(e){ListPageUtility.IViewChangeServerStatusFace(this.acInterface.statusChange,this.selectionRows,appList.idFieldName,e,appList)},move:function(e){ListPageUtility.IViewMoveFace(this.acInterface.move,this.selectionRows,this.idFieldName,e,this)}},template:'<div class="module-list-wrap">                    <div id="list-button-wrap" class="list-button-outer-wrap">                        <div class="module-list-name"><Icon type="ios-arrow-dropright-circle" />&nbsp;模块【{{getModuleName()}}】</div>                        <div class="list-button-inner-wrap">                            <ButtonGroup>                                <i-button  type="success" @click="add()" icon="md-add">新增</i-button>                                <i-button type="error" icon="md-albums">复制</i-button>                                <i-button type="error" icon="md-pricetag">预览</i-button>                                <i-button type="error" icon="md-bookmarks">历史版本</i-button>                                <i-button type="error" icon="md-brush">复制ID</i-button>                                <i-button type="primary" @click="move(\'up\')" icon="md-arrow-up">上移</i-button>                                <i-button type="primary" @click="move(\'down\')" icon="md-arrow-down">下移</i-button>                            </ButtonGroup>                        </div>                         <div style="float: right;width: 200px;margin-right: 10px;">                            <i-input search class="input_border_bottom" v-model="searchText">                            </i-input>                        </div>                        <div style="clear: both"></div>                    </div>                    <i-table :height="listHeight" stripe border :columns="columnsConfig" :data="tableData"                             class="iv-list-table" :highlight-row="true"                             @on-selection-change="selectionChange"></i-table>                </div>'}),Vue.component("select-dblink-single-comp",{data:function(){return{acInterface:{getDBLinkDataUrl:"/Rest/Builder/DataStorage/DBLink/GetFullDBLink",getSingleDBLinkDataUrl:"/Rest/Builder/DataStorage/DBLink/GetDetailData"},jsEditorInstance:null,dbLinkTree:{treeObj:null,treeSetting:{view:{dblClickExpand:!1,showLine:!0,fontCss:{color:"black","font-weight":"normal"}},check:{enable:!1,nocheckInherit:!1,chkStyle:"radio",radioType:"all"},data:{key:{name:"dbLinkName"},simpleData:{enable:!0,idKey:"dbId",pIdKey:"dbOrderNum",rootPId:"-1"}},callback:{onClick:function(e,t,i){var a=this.getZTreeObj(t)._host;a.selectedDBLink(i),a.handleClose()}}},treeData:null,clickNode:null},selectedDBLinkData:null}},mounted:function(){},methods:{handleClose:function(){DialogUtility.CloseDialogElem(this.$refs.selectDBLinkModelDialogWrap)},beginSelectDBLink:function(){var e=this.$refs.selectDBLinkModelDialogWrap;this.getDBLinkDataInitTree(),DialogUtility.DialogElemObj(e,{modal:!0,width:470,height:500,title:"选择数据库连接"})},getDBLinkDataInitTree:function(){var i=this;AjaxUtility.Post(this.acInterface.getDBLinkDataUrl,{},function(e){if(e.success){i.dbLinkTree.treeData=e.data;for(var t=0;t<i.dbLinkTree.treeData.length;t++)i.dbLinkTree.treeData[t].icon="../../../../Themes/Png16X16/database_connect.png";i.$refs.dbLinkZTreeUL.setAttribute("id","select-dbLink-single-comp-"+StringUtility.Guid()),i.dbLinkTree.treeObj=$.fn.zTree.init($(i.$refs.dbLinkZTreeUL),i.dbLinkTree.treeSetting,i.dbLinkTree.treeData),i.dbLinkTree.treeObj.expandAll(!0),i.dbLinkTree.treeObj._host=i,fuzzySearchTreeObj(i.dbLinkTree.treeObj,i.$refs.txt_dbLink_search_text.$refs.input,null,!0)}else DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)},selectedDBLink:function(e){this.selectedDBLinkData=e,this.$emit("on-selected-dblink",e)},getSelectedDBLinkName:function(){return null==this.selectedDBLinkData?"请选择数据库连接":this.selectedDBLinkData.dbLinkName},setOldSelectedDBLink:function(e){var t=this;AjaxUtility.Post(this.acInterface.getSingleDBLinkDataUrl,{recordId:e},function(e){e.success?t.selectedDBLinkData=e.data:DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},e.message,null)},this)}},template:'<div>\n                    <div class="select-view-dblink-wrap">\n                        <div class="text">{{getSelectedDBLinkName()}}</div>\n                        <div class="value"></div>\n                        <div class="id"></div>\n                        <div class="button" @click="beginSelectDBLink()"><Icon type="ios-funnel" />&nbsp;选择</div>\n                    </div>\n                    <div ref="selectDBLinkModelDialogWrap" class="c1-select-model-wrap general-edit-page-wrap" style="display: none">\n                        <div class="c1-select-model-source-wrap">\n                            <i-input search class="input_border_bottom" ref="txt_dbLink_search_text" placeholder="请输入数据库连接名称">\n                            </i-input>\n                            <div class="inner-wrap div-custom-scroll">\n                                <ul ref="dbLinkZTreeUL" class="ztree"></ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>'});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbXAvZGF0YXNldC1zaW1wbGUtc2VsZWN0LWNvbXAuanMiLCJDb21wL2pzLWRlc2lnbi1jb2RlLWZyYWdtZW50LmpzIiwiQ29tcC9zcWwtZ2VuZXJhbC1kZXNpZ24tY29tcC5qcyIsIkNvbXAvdGFibGUtcmVsYXRpb24tY29udGVudC1jb21wLmpzIiwiRGlhbG9nL3NlbGVjdC1kZWZhdWx0LXZhbHVlLWRpYWxvZy5qcyIsIkRpYWxvZy9zZWxlY3Qtc2luZ2xlLXRhYmxlLWRpYWxvZy5qcyIsIkRpYWxvZy9zZWxlY3Qtc2luZ2xlLXdlYmZvcm0tZGlhbG9nLmpzIiwiRGlhbG9nL3NlbGVjdC12YWxpZGF0ZS1ydWxlLWRpYWxvZy5qcyIsIkRpYWxvZy90YWJsZS1yZWxhdGlvbi1jb25uZWN0LXR3by10YWJsZS1kaWFsb2cuanMiLCJIVE1MRGVzaWduL2RiLXRhYmxlLXJlbGF0aW9uLWNvbXAuanMiLCJIVE1MRGVzaWduL2Rlc2lnbi1odG1sLWVsZW0tbGlzdC5qcyIsIkhUTUxEZXNpZ24vZmQtY29udHJvbC1iYXNlLWluZm8uanMiLCJIVE1MRGVzaWduL2ZkLWNvbnRyb2wtYmluZC10by5qcyIsIkhUTUxEZXNpZ24vZmQtY29udHJvbC1kYXRhc291cmNlLmpzIiwiSFRNTERlc2lnbi9mZC1jb250cm9sLXNlbGVjdC1iaW5kLXRvLXNpbmdsZS1maWVsZC1kaWFsb2cuanMiLCJIVE1MRGVzaWduL2lubmVyLWZvcm0tYnV0dG9uLWxpc3QtY29tcC5qcyIsIkhUTUxEZXNpZ24vbGlzdC1zZWFyY2gtY29udHJvbC1iaW5kLXRvLWNvbXAuanMiLCJIVE1MRGVzaWduL2xpc3QtdGFibGUtbGFiZWwtYmluZC10by1jb21wLmpzIiwiTW9kdWxlL21vZHVsZS1saXN0LXdlYmZvcm0tY29tcC5qcyIsIk1vZHVsZS9tb2R1bGUtbGlzdC13ZWJsaXN0LWNvbXAuanMiLCJTZWxlY3RCdXR0b24vc2VsZWN0LWRibGluay1zaW5nbGUtY29tcC5qcyJdLCJuYW1lcyI6WyJWdWUiLCJjb21wb25lbnQiLCJkYXRhIiwiX3NlbGYiLCJ0aGlzIiwiYWNJbnRlcmZhY2UiLCJnZXREYXRhU2V0RGF0YSIsImRhdGFTZXRUcmVlIiwidHJlZU9iaiIsInRyZWVTZXR0aW5nIiwidmlldyIsImRibENsaWNrRXhwYW5kIiwic2hvd0xpbmUiLCJmb250Q3NzIiwiY29sb3IiLCJmb250LXdlaWdodCIsImNoZWNrIiwiZW5hYmxlIiwibm9jaGVja0luaGVyaXQiLCJjaGtTdHlsZSIsInJhZGlvVHlwZSIsImtleSIsIm5hbWUiLCJzaW1wbGVEYXRhIiwiaWRLZXkiLCJwSWRLZXkiLCJyb290UElkIiwiY2FsbGJhY2siLCJvbkNsaWNrIiwiZXZlbnQiLCJ0cmVlSWQiLCJ0cmVlTm9kZSIsIm5vZGVUeXBlTmFtZSIsInNlbGVjdGVkTm9kZSIsInRyZWVEYXRhIiwic2VsZWN0ZWRUYWJsZU5hbWUiLCJtb3VudGVkIiwiYmluZERhdGFTZXRUcmVlIiwibWV0aG9kcyIsIkFqYXhVdGlsaXR5IiwiUG9zdCIsInJlc3VsdCIsInN1Y2Nlc3MiLCJsZW5ndGgiLCJpIiwiaWNvbiIsIkJhc2VVdGlsaXR5IiwiR2V0Um9vdFBhdGgiLCIkIiwiZm4iLCJ6VHJlZSIsImluaXQiLCJleHBhbmRBbGwiLCJmdXp6eVNlYXJjaFRyZWVPYmoiLCIkcmVmcyIsInR4dF9zZWFyY2hfdGV4dCIsImlucHV0IiwiRGlhbG9nVXRpbGl0eSIsIkFsZXJ0Iiwid2luZG93IiwiRGlhbG9nQWxlcnRJZCIsIm1lc3NhZ2UiLCIkZW1pdCIsInRlbXBsYXRlIiwianNFZGl0b3JJbnN0YW5jZSIsInNldEpTRWRpdG9ySW5zdGFuY2UiLCJvYmoiLCJnZXRKc0VkaXRvckluc3QiLCJpbnNlcnRKcyIsImpzIiwiZG9jIiwiZ2V0RG9jIiwiY3Vyc29yIiwiZ2V0Q3Vyc29yIiwicmVwbGFjZVJhbmdlIiwiZm9ybWF0SlMiLCJDb2RlTWlycm9yIiwiY29tbWFuZHMiLCJyYW5nZSIsImZyb20iLCJ0byIsImF1dG9Gb3JtYXRSYW5nZSIsImFsZXJ0RGVzYyIsInJlZlNjcmlwdCIsImNhbGxTZXJ2aWNlTWV0aG9kIiwicHJvcHMiLCJzcWxUZXh0Iiwic2VsZWN0ZWRJdGVtVmFsdWUiLCJzZWxmVGFibGVGaWVsZHMiLCJwYXJlbnRUYWJsZUZpZWxkcyIsIndhdGNoIiwibmV3VmFsIiwidmFsdWUiLCJzcWxDb2RlTWlycm9yIiwiZnJvbVRleHRBcmVhIiwibW9kZSIsImxpbmVOdW1iZXJzIiwibGluZVdyYXBwaW5nIiwiZm9sZEd1dHRlciIsInRoZW1lIiwiY29uc29sZSIsImxvZyIsInNxbERlc2lnbmVySGVpZ2h0Iiwic2V0U2l6ZSIsIm9uIiwiY01pcnJvciIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzZXRBYm91dFRhYmxlRmllbGRzIiwiaW5zZXJ0RW52VG9FZGl0b3IiLCJjb2RlIiwiaW5zZXJ0Q29kZUF0Q3Vyc29yIiwiaW5zZXJ0RmllbGRUb0VkaXRvciIsInNvdXJjZVR5cGUiLCJzb3VyY2VGaWVsZHMiLCJmaWVsZE5hbWUiLCJ0YWJsZU5hbWUiLCJnZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzIiwic2F2ZURpYWdyYW0iLCJnZXRTaW5nbGVEaWFncmFtRGF0YSIsInRhYmxlVmlldyIsInRhYmxlUmVsYXRpb25EaWFncmFtIiwiZGlzcGxheURlc2MiLCJmb3JtYXRKc29uIiwicmVjb3JkSWQiLCJyZWxhdGlvbiIsInJlbGF0aW9uSWQiLCJyZWxhdGlvbkNvbnRlbnRPdXRlcldyYXAiLCJjc3MiLCJQYWdlU3R5bGVVdGlsaXR5IiwiR2V0UGFnZUhlaWdodCIsIkdldFBhZ2VXaWR0aCIsImluaXREaWFncmFtIiwibG9hZFJlbGF0aW9uRGV0YWlsRGF0YSIsImdvU2FtcGxlcyIsImdvIiwiR3JhcGhPYmplY3QiLCJtYWtlIiwibXlEaWFncmFtIiwiRGlhZ3JhbSIsImFsbG93RGVsZXRlIiwiYWxsb3dDb3B5IiwibGF5b3V0IiwiRm9yY2VEaXJlY3RlZExheW91dCIsInVuZG9NYW5hZ2VyLmlzRW5hYmxlZCIsImJsdWVncmFkIiwiQnJ1c2giLCIwIiwiMC41IiwiMSIsImdyZWVuZ3JhZCIsInJlZGdyYWQiLCJ5ZWxsb3dncmFkIiwibGlnaHRncmFkIiwiaXRlbVRlbXBsIiwiUGFuZWwiLCJTaGFwZSIsImRlc2lyZWRTaXplIiwiU2l6ZSIsIkJpbmRpbmciLCJUZXh0QmxvY2siLCJzdHJva2UiLCJmb250Iiwibm9kZVRlbXBsYXRlIiwiTm9kZSIsInNlbGVjdGlvbkFkb3JuZWQiLCJyZXNpemFibGUiLCJsYXlvdXRDb25kaXRpb25zIiwiUGFydCIsIkxheW91dFN0YW5kYXJkIiwiTGF5b3V0Tm9kZVNpemVkIiwiZnJvbVNwb3QiLCJTcG90IiwiQWxsU2lkZXMiLCJ0b1Nwb3QiLCJpc1NoYWRvd2VkIiwic2hhZG93Q29sb3IiLCJtYWtlVHdvV2F5IiwidiIsIk5hTiIsIm9mT2JqZWN0IiwiZmlsbCIsInN0cm9rZVdpZHRoIiwibWFyZ2luIiwic3RyZXRjaCIsIkZpbGwiLCJSb3dDb2x1bW5EZWZpbml0aW9uIiwicm93Iiwic2l6aW5nIiwiTm9uZSIsImFsaWdubWVudCIsIkNlbnRlciIsIk1hcmdpbiIsIlRvcFJpZ2h0IiwicGFkZGluZyIsIlRvcExlZnQiLCJkZWZhdWx0QWxpZ25tZW50IiwiTGVmdCIsIkhvcml6b250YWwiLCJpdGVtVGVtcGxhdGUiLCJsaW5rVGVtcGxhdGUiLCJMaW5rIiwibGF5ZXJOYW1lIiwicmVzaGFwYWJsZSIsInJvdXRpbmciLCJBdm9pZHNOb2RlcyIsImNvcm5lciIsImN1cnZlIiwiSnVtcE92ZXIiLCJ0ZXh0QWxpZ24iLCJzZWdtZW50SW5kZXgiLCJzZWdtZW50T2Zmc2V0IiwiUG9pbnQiLCJzZWdtZW50T3JpZW50YXRpb24iLCJPcmllbnRVcHJpZ2h0Iiwibm9kZURhdGFBcnJheSIsIml0ZW1zIiwiaXNrZXkiLCJmaWd1cmUiLCJtb2RlbCIsIkdyYXBoTGlua3NNb2RlbCIsImNvcGllc0FycmF5cyIsImNvcGllc0FycmF5T2JqZWN0cyIsImxpbmtEYXRhQXJyYXkiLCJ0ZXh0IiwidG9UZXh0Iiwic2hvd1NlbGVjdFRhYmxlRGlhbG9nIiwic2VsZWN0U2luZ2xlVGFibGVEaWFsb2ciLCJiZWdpblNlbGVjdFRhYmxlIiwic2hvd1NlbGVjdEZpZWxkQ29ubmVjdERpYWxvZyIsImZyb21UYWJsZUlkIiwidG9UYWJsZUlkIiwic2VsZWN0aW9uIiwiZWFjaCIsInBhcnQiLCJ0YWJsZUlkIiwidGFibGVSZWxhdGlvbkNvbm5lY3RUd29UYWJsZURpYWxvZyIsImJlZ2luU2VsZWN0Q29ubmVjdCIsIkFsZXJ0VGV4dCIsImFkZFRhYmxlVG9EaWFncmFtIiwidGFibGVEYXRhIiwiaWQiLCJ0YWJsZUlkcyIsInRhYmxlSXNFeGlzdEluRGlhZ3JhbSIsImFsbEZpZWxkcyIsInNpbmdsZVRhYmxlIiwiZXhLVkRhdGEiLCJUYWJsZXMiLCJhbGxGaWVsZHNTdHlsZSIsImRpc3BsYXlUZXh0IiwiZmllbGRDYXB0aW9uIiwicHVzaCIsInJlbmRlcmVyRmllbGRTdHlsZSIsIm1vZGVsTm9kZURhdGEiLCJsb2MiLCJmaWVsZHMiLCJ0YWJsZUNhcHRpb24iLCJ0YWJsZURpc3BsYXlUZXh0Iiwic3RhcnRUcmFuc2FjdGlvbiIsImFkZE5vZGVEYXRhIiwiY29tbWl0VHJhbnNhY3Rpb24iLCJkZWxldGVTZWxlY3Rpb24iLCJjb21tYW5kSGFuZGxlciIsImNhbkRlbGV0ZVNlbGVjdGlvbiIsImNvbm5lY3RTZWxlY3Rpb25Ob2RlIiwiY29ubmVjdERhdGEiLCJsaW5lRGF0YSIsImxpbmVJZCIsIlN0cmluZ1V0aWxpdHkiLCJHdWlkIiwiZnJvbVRleHQiLCJhZGRMaW5rRGF0YSIsInNhdmVNb2RlbFRvU2VydmVyIiwic2VuZERhdGEiLCJyZWxhdGlvbkNvbnRlbnQiLCJKc29uVXRpbGl0eSIsIkpzb25Ub1N0cmluZyIsImdldERhdGFKc29uIiwicmVsYXRpb25EaWFncmFtSnNvbiIsImdldERpYWdyYW1Kc29uIiwiaXNPbmdvaW5nIiwiZG91YmxlQ2xpY2siLCJlIiwibm9kZSIsInVybCIsIkJ1aWxkVmlldyIsIm9wIiwiRnJhbWVfT3BlbklmcmFtZVdpbmRvdyIsIkRpYWxvZ0lkIiwidGl0bGUiLCJwYXJzZSIsImRhdGFKc29uIiwiU3RyaW5nVG9Kc29uIiwic2V0RGF0YUpzb24iLCJjb252ZXJ0VG9GdWxsSnNvbiIsImRyYXdPYmpJbkRpYWdyYW0iLCJmdWxsSnNvbiIsImxpbmVMaXN0IiwidGFibGVMaXN0Iiwic2V0VGltZW91dCIsInNpbXBsZUpzb24iLCJmdW5jIiwiQ2xvbmVTaW1wbGUiLCJBcnJheSIsImFsbFRhYmxlcyIsInNpbmdsZVRhYmxlRGF0YSIsImdldFNpbmdsZVRhYmxlRGF0YSIsInNpbmdsZVRhYmxlRmllbGRzRGF0YSIsImdldFNpbmdsZVRhYmxlRmllbGRzRGF0YSIsImZpZWxkVGFibGVJZCIsImZpZWxkIiwiZmllbGRJc1BrIiwiZ2V0S2V5RmllbGRCcnVzaCIsImdldE5vckZpZWxkQnJ1c2giLCJub2RlcyIsImxvY2F0aW9uIiwieCIsInkiLCJhbGVydCIsImxpbmtzIiwianNvbiIsInRvSnNvbiIsImFsZXJ0RGF0YUpzb24iLCJBbGVydEpzb25Db2RlIiwiYWxlcnREaWFncmFtSnNvbiIsImRpYWdyYW1Kc29uIiwiZG93bkxvYWRNb2RlbFBORyIsIm1ha2VJbWFnZURhdGEiLCJiYWNrZ3JvdW5kIiwicmV0dXJuVHlwZSIsInNjYWxlIiwiYmxvYiIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImZpbGVuYW1lIiwiYSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwiaHJlZiIsImRvd25sb2FkIiwidW5kZWZpbmVkIiwibmF2aWdhdG9yIiwibXNTYXZlQmxvYiIsImJvZHkiLCJhcHBlbmRDaGlsZCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNsaWNrIiwicmV2b2tlT2JqZWN0VVJMIiwicmVtb3ZlQ2hpbGQiLCJnZXRHcm91cFRyZWVEYXRhIiwicmVsb2FkTGlzdERhdGEiLCJzZWxlY3RUeXBlIiwic2VsZWN0VmFsdWUiLCJzZWxlY3RUZXh0IiwiY29uc3RWYWx1ZSIsImxpc3RIZWlnaHQiLCJ0cmVlIiwidHJlZUlkRmllbGROYW1lIiwidHJlZVNlbGVjdGVkTm9kZSIsImFzeW5jIiwicm9vdElkIiwiZ2V0WlRyZWVPYmoiLCJfaG9zdCIsInRyZWVOb2RlU2VsZWN0ZWQiLCJvbkFzeW5jU3VjY2VzcyIsIm1zZyIsImFwcExpc3QiLCJjb2x1bW5zQ29uZmlnIiwiYWxpZ24iLCJ3aWR0aCIsInJlbmRlciIsImgiLCJwYXJhbXMiLCJjbGFzcyIsIkxpc3RQYWdlVXRpbGl0eSIsIklWaWV3VGFibGVJbm5lckJ1dHRvbiIsIlNlbGVjdGVkQnV0dG9uIiwic2VhcmNoQ29uZGl0aW9uIiwiZW52VmFyR3JvdXBJZCIsInR5cGUiLCJTZWFyY2hVdGlsaXR5IiwiU2VhcmNoRmllbGRUeXBlIiwiU3RyaW5nVHlwZSIsInBhZ2VUb3RhbCIsInBhZ2VTaXplIiwicGFnZU51bSIsImxvYWREYXRhIiwiYmVnaW5TZWxlY3QiLCJvbGREYXRhIiwiZWxlbSIsInNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ1dyYXAiLCJEaWFsb2dFbGVtT2JqIiwibW9kYWwiLCJoZWlnaHQiLCJmaW5kIiwiZ2V0U2VsZWN0SW5zdGFuY2VOYW1lIiwiR2V0VXJsUGFyYVZhbHVlIiwic2VsZWN0Q29tcGxldGUiLCJUeXBlIiwiVmFsdWUiLCJUZXh0IiwiaGFuZGxlQ2xvc2UiLCJjbGVhckNvbXBsZXRlIiwiQ2xvc2VEaWFsb2dFbGVtIiwic2VsZWN0aW9uQ2hhbmdlIiwiY2xlYXJTZWFyY2hDb25kaXRpb24iLCJyZWxvYWREYXRhIiwiSVZpZXdUYWJsZUJpbmREYXRhQnlTZWFyY2giLCJwYWdlQXBwT2JqIiwiaWRGaWVsZCIsImF1dG9TZWxlY3RlZE9sZFJvd3MiLCJzdWNjZXNzRnVuYyIsImxvYWREaWN0IiwiY3VzdFBhcmFzIiwic2VsZWN0ZWQiLCJlbnZWYXJWYWx1ZSIsImVudlZhclRleHQiLCJEZWZhdWx0VmFsdWVVdGlsaXR5IiwiZm9ybWF0VGV4dCIsImdldFRhYmxlRGF0YVVybCIsInRhYmxlVHJlZSIsInNlbGVjdGVkVGFibGUiLCJjbGlja05vZGUiLCJzZWxlY3RlZFRhYmxlRGF0YSIsInNlbGVjdFRhYmxlTW9kZWxEaWFsb2dXcmFwIiwiZ2V0VGFibGVEYXRhSW5pdFRyZWUiLCJ0YWJsZVpUcmVlVUwiLCJzZXRBdHRyaWJ1dGUiLCJ0eHRfdGFibGVfc2VhcmNoX3RleHQiLCJjb21wbGV0ZWQiLCJzZWxlY3RlZEZvcm0iLCJzZWxlY3RlZEZvcm1EYXRhIiwib2xkU2VsZWN0ZWRGb3JtSWQiLCJzZWxlY3RNb2RlbERpYWxvZ1dyYXAiLCJiZWdpblNlbGVjdEZvcm0iLCJmb3JtSWQiLCJnZXRGb3JtRGF0YUluaXRUcmVlIiwiZm9ybVpUcmVlVUwiLCJ0eHRfZm9ybV9zZWFyY2hfdGV4dCIsImdldE5vZGVCeVBhcmFtIiwic2VsZWN0Tm9kZSIsImZvcm1EYXRhIiwiZm9ybU1vZHVsZUlkIiwiYXR0cjQiLCJmb3JtTW9kdWxlTmFtZSIsImF0dHIzIiwiZm9ybU5hbWUiLCJhdHRyMSIsImZvcm1Db2RlIiwiYXR0cjIiLCJzZWxlY3RWYWxpZGF0ZVR5cGUiLCJydWxlUGFyYXMiLCJudW1MZW5ndGgiLCJkZWNpbWFsTGVuZ3RoIiwianNNZXRob2ROYW1lIiwicmVndWxhclRleHQiLCJyZWd1bGFyTXNnIiwiYWRkZWRWYWxpZGF0ZVJ1bGUiLCJ2YWxpZGF0ZUNvbHVtbnNDb25maWciLCJkZWxWYWxpZGF0ZSIsInNlbGVjdFZhbGlkYXRlUnVsZURpYWxvZ1dyYXAiLCJiaW5kT2xkU2VsZWN0ZWRWYWx1ZSIsIm9sZFNlbGVjdGVkVmFsdWUiLCJydWxlcyIsImFkZFZhbGlkYXRlUnVsZSIsInZhbGlkYXRlUGFyYXMiLCJuZXdWYWxpZGF0ZVJ1bGUiLCJ2YWxpZGF0ZUlkIiwiVGltZXN0YW1wIiwidmFsaWRhdGVUeXBlIiwic3BsaWNlIiwiZnJvbVRhYmxlRmllbGQiLCJmaWVsZERhdGEiLCJ0b1RhYmxlRmllbGQiLCJkaWFsb2dIZWlnaHQiLCJyZXN1bHREYXRhIiwiY29ubmVjdFRhYmxlRmllbGRNb2RlbERpYWxvZ1dyYXAiLCJnZXRGaWVsZHNBbmRCaW5kIiwiZnJvbVRhYmxlRmllbGRzIiwidG9UYWJsZUZpZWxkcyIsInNlbGVjdGVkRnJvbUZpZWxkIiwiaW5kZXgiLCJzZWxlY3RlZFRvRmllbGQiLCJnZXRUYWJsZXNEYXRhVXJsIiwiZ2V0VGFibGVGaWVsZHNVcmwiLCJyZWxhdGlvblRhYmxlVHJlZSIsInRhYmxlVHJlZVNldHRpbmciLCJfZGJ0YWJsZXJlbGF0aW9uY29tcCIsInNlbGVjdGVkUmVsYXRpb25UYWJsZU5vZGUiLCJ0YWJsZVRyZWVSb290RGF0YSIsInBhcmVudElkIiwiX25vZGVFeFR5cGUiLCJjdXJyZW50U2VsZWN0ZWROb2RlIiwicmVsYXRpb25UYWJsZUVkaXRvclZpZXciLCJpc1Nob3dUYWJsZUVkaXREZXRhaWwiLCJpc1N1YkVkaXRUciIsImlzTWFpbkVkaXRUciIsInNlbFBLRGF0YSIsInNlbFNlbGZLZXlEYXRhIiwic2VsRm9yZWlnbktleURhdGEiLCJlbXB0eUVkaXRvckRhdGEiLCJzaW5nbGVOYW1lIiwicGtGaWVsZE5hbWUiLCJkZXNjIiwic2VsZktleUZpZWxkTmFtZSIsIm91dGVyS2V5RmllbGROYW1lIiwicmVsYXRpb25UeXBlIiwiaXNTYXZlIiwiY29uZGl0aW9uIiwiY3VycmVudEVkaXRvckRhdGEiLCJzZWxlY3RUYWJsZVRyZWUiLCJvbGRTZWxlY3RlZERCTGlua0lkIiwiZGlzYWJsZWREQkxpbmsiLCJkYkxpbmtFbnRpdGllcyIsInRhYmxlVHJlZU9iaiIsImRpYWxvZyIsImFkZFRhYmxlVG9SZWxhdGlvblRhYmxlVHJlZSIsInRhYmxlVHJlZURhdGEiLCJhbGxUYWJsZVRyZWVEYXRhIiwidGVtcERhdGFTdG9yZSIsInRyZWVOb2RlU2V0dGluZyIsIk1haW5UYWJsZU5vZGVJbWciLCJTdWJUYWJsZU5vZGVJbWciLCJnZXRUYWJsZXNBbmRCaW5kT2xkU2VsZWN0ZWQiLCJoYW5kbGVyIiwidmFsIiwib2xkVmFsIiwicmVzdWx0SXRlbUNvcHlFZGl0RW5hYmxlVmFsdWUiLCJkZWVwIiwidG9PYmoiLCJmcm9tT2JqIiwiZ2V0VGFibGVGaWVsZHNCeVRhYmxlSWQiLCJQb3N0U3luYyIsImdldEVtcHR5UmVzdWx0SXRlbSIsImdldEV4aXN0UmVzdWx0SXRlbSIsImRiTGlua0VudGl0eUxpc3QiLCJiaW5kU2VsZWN0VGFibGVUcmVlIiwiaXNHZXRDb29raWVPbGRTZWxlY3RlZCIsIkNvb2tpZVV0aWxpdHkiLCJHZXRDb29raWUiLCJiaW5kVG9UcmVlRGF0YSIsIm91dGVySWQiLCJjaGFuZ2VEQkxpbmsiLCJkYkxpbmtJZCIsIlNldENvb2tpZTFNb250aCIsImdldE1haW5UYWJsZURCTGlua0lkIiwiZ2V0TWFpblRhYmxlSWQiLCJkZWxldGVTZWxlY3RlZFJlbGF0aW9uVHJlZU5vZGUiLCJpc1NlbGVjdGVkUm9vdFJlbGF0aW9uVGFibGVOb2RlIiwiaXNQYXJlbnQiLCJzcWxHZW5lcmFsRGVzaWduQ29tcCIsInJlbW92ZU5vZGUiLCJiZWdpblNlbGVjdFRhYmxlVG9SZWxhdGlvblRhYmxlIiwibWFpblRhYmxlREJMaW5rSWQiLCJhcHBlbmRNYWluVGFibGVOb2RlUHJvcCIsImFwcGVuZFN1YlRhYmxlTm9kZVByb3AiLCJidWlsZFJlbGF0aW9uVGFibGVOb2RlIiwic291cmNlTm9kZSIsInRyZWVOb2RlSWQiLCJnZXRNYWluUmVsYXRpb25UYWJsZU5vZGUiLCJnZXRNYWluVGFibGVOYW1lIiwiZ2V0TWFpblRhYmxlQ2FwdGlvbiIsImlzU2VsZWN0ZWRNYWluUmVsYXRpb25UYWJsZU5vZGUiLCJuZXdOb2RlIiwiYWRkTm9kZXMiLCJuZXdSZXN1bHRJdGVtIiwidGFibGVDb2RlIiwicGFyZW50Tm9kZSIsImdldFBhcmVudE5vZGUiLCJleGlzdFJlc3VsdEl0ZW0iLCJnZXRSZXN1bHREYXRhIiwic2VyaWFsaXplUmVsYXRpb24iLCJpc0Zvcm1hdCIsImRlc2VyaWFsaXplUmVsYXRpb24iLCJqc29uU3RyaW5nIiwibWFpblRhYmxlSWQiLCJtYWluVGFibGVOYW1lIiwibWFpblRhYmxlQ2FwdGlvbiIsInJlbGF0aW9uRGF0YSIsInRlbXBEYXRhIiwidHJlZU5vZGVEYXRhIiwiYWxlcnRTZXJpYWxpemVSZWxhdGlvbiIsImlucHV0RGVzZXJpYWxpemVSZWxhdGlvbiIsIlByb21wdCIsIkRpYWxvZ1Byb21wdElkIiwiYmFzZUluZm8iLCJzZXJpYWxpemUiLCJjbGFzc05hbWUiLCJwbGFjZWhvbGRlciIsImN1c3RSZWFkb25seSIsImN1c3REaXNhYmxlZCIsInN0YXR1cyIsImJpbmRUb0ZpZWxkIiwiZmllbGREYXRhVHlwZSIsImZpZWxkTGVuZ3RoIiwidmFsaWRhdGVSdWxlcyIsImRlZmF1bHRWYWx1ZSIsImRlZmF1bHRUeXBlIiwiZGVmYXVsdFRleHQiLCJkZWZhdWx0RGlzcGxheVRleHQiLCJiaW5kVG9Qcm9wIiwibmV3VmFsdWUiLCJiaW5kVG9GaWVsZFByb3AiLCJkZWZhdWx0VmFsdWVQcm9wIiwiSXNOdWxsT3JFbXB0eSIsInZhbGlkYXRlUnVsZXNQcm9wIiwic2V0Q29tcGxldGVkIiwic2VsZWN0QmluZEZpZWxkVmlldyIsIl9TZWxlY3RCaW5kT2JqIiwicGFyZW50IiwiYXBwRm9ybSIsInNlbGVjdEJpbmRUb1NpbmdsZUZpZWxkRGlhbG9nQmVnaW4iLCJnZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlIiwic2V0U2VsZWN0RmllbGRSZXN1bHRWYWx1ZSIsInNlbGVjdERlZmF1bHRWYWx1ZVZpZXciLCJzZWxlY3REZWZhdWx0VmFsdWVEaWFsb2dCZWdpbiIsInNldFNlbGVjdEVudlZhcmlhYmxlUmVzdWx0VmFsdWUiLCJzZWxlY3RWYWxpZGF0ZVJ1bGVWaWV3Iiwic2VsZWN0VmFsaWRhdGVSdWxlRGlhbG9nQmVnaW4iLCJnZXRTZWxlY3RWYWxpZGF0ZVJ1bGVSZXN1bHRWYWx1ZSIsInNldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlIiwibm9ybWFsRGF0YVNvdXJjZSIsImRlZmF1bHRJc051bGwiLCJzcWxEYXRhU291cmNlIiwiZGljdGlvbmFyeUlkRGF0YVNvdXJjZSIsInJlc3REYXRhU291cmNlIiwic3RhdGljRGF0YVNvdXJjZSIsImVuY29kZVVSSUNvbXBvbmVudCIsImRlY29kZVVSSUNvbXBvbmVudCIsImdldFRhYmxlRmllbGRzRGF0YVVybCIsInNlbGVjdGVkRGF0YSIsImZpZWxkVGFibGUiLCJmaWx0ZXJBbGxGaWVsZHNUb1RhYmxlIiwib25EYmxDbGljayIsInRhYmxlSGVpZ2h0IiwiaXNTZWxlY3RlZFRvQmluZCIsIm9sZFJlbGF0aW9uRGF0YVN0cmluZyIsIm9sZEJpbmRGaWVsZERhdGEiLCJmZENvbnRyb2xTZWxlY3RCaW5kVG9TaW5nbGVGaWVsZERpYWxvZ1dyYXAiLCJnZXRBbGxUYWJsZXNGaWVsZHMiLCJyZXNldEZpZWxkVG9TZWxlY3RlZFN0YXR1cyIsIl9hbGxGaWVsZHMiLCJzZWxlY3RlZEZpZWxkIiwiZmllbGREYXRhTGVuZ3RoIiwiT3BlbmVyV2luZG93T2JqIiwiYnV0dG9ucyIsImJ1dHRvblR5cGUiLCJFZGl0QnV0dG9uIiwiRGVsZXRlQnV0dG9uIiwiTW92ZVVwQnV0dG9uIiwiTW92ZURvd25CdXR0b24iLCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YSIsImNhcHRpb24iLCJzYXZlQW5kQ2xvc2UiLCJhcGlzIiwiY3VzdFNlcnZlclJlc29sdmVNZXRob2QiLCJjdXN0U2VydmVyUmVzb2x2ZU1ldGhvZFBhcmEiLCJjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2QiLCJjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2RQYXJhIiwiY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2QiLCJjdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZFBhcmEiLCJjdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2QiLCJjdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2RQYXJhIiwiYXBpIiwiZ2V0QVBJRGF0YSIsImFwaVRyZWVPYmoiLCJhcGlUcmVlU2V0dGluZyIsImFwaVNlbGVjdERhdGEiLCJhcGlEYXRhIiwiZWRpdFRhYmxlT2JqZWN0IiwiZWRpdFRhYmxlQ29uZmlnIiwiU3RhdHVzIiwiQWRkQWZ0ZXJSb3dFdmVudCIsIkRhdGFGaWVsZCIsIlRlbXBsYXRlcyIsIlRpdGxlIiwiQmluZE5hbWUiLCJSZW5kZXJlciIsIlRpdGxlQ2VsbENsYXNzTmFtZSIsIkZvcm1hdGVyIiwiZ2V0QVBJVGV4dCIsIkNsaWVudERhdGFTb3VyY2UiLCJXaWR0aCIsIlJvd0lkQ3JlYXRlciIsIlRhYmxlQ2xhc3MiLCJSZW5kZXJlclRvIiwiVGFibGVJZCIsIlRhYmxlQXR0cnMiLCJjZWxscGFkZGluZyIsImNlbGxzcGFjaW5nIiwiYm9yZGVyIiwiZ2V0Rm9ybU1haW5UYWJsZUZpZWxkcyIsIkhpZGRlbiIsIm9sZEZvcm1JZCIsInJlYWR5IiwidGFibGVEYXRhSnNvbiIsImJpbmRBUElUcmVlQW5kSW5pdEVkaXRUYWJsZSIsImdldEpzb24iLCJkaWFsb2dFbGVtIiwiZWRpdCIsImVkaXRJbm5lckZvcm1TYXZlQnV0dG9uIiwiZGVsIiwiQXJyYXlVdGlsaXR5IiwiRGVsZXRlIiwibW92ZVVwIiwiTW92ZVVwIiwibW92ZURvd24iLCJNb3ZlRG93biIsImFkZElubmVyRm9ybVNhdmVCdXR0b24iLCJlZGl0U2F2ZUJ1dHRvblN0YXR1YyIsInJlc2V0SW5uZXJTYXZlQnV0dG9uRGF0YSIsImlubmVyRm9ybUJ1dHRvbkVkaXQiLCJiaW5kVGFibGVGaWVsZHMiLCJDbG9uZVN0cmluZ2lmeSIsInNhdmVJbm5lclNhdmVCdXR0b25Ub0xpc3QiLCJzaW5nbGVJbm5lckZvcm1CdXR0b25EYXRhIiwiQ29tcGxldGVkRWRpdGluZ1JvdyIsIkdldFNlcmlhbGl6ZUpzb24iLCJzZXQiLCJmaWVsZHNEYXRhIiwiRGVmYXVsdFZhbHVlIiwiT2JqZWN0IiwiY3JlYXRlIiwiRWRpdFRhYmxlIiwiSW5pdGlhbGl6YXRpb24iLCJMb2FkSnNvbkRhdGEiLCJSZW1vdmVBbGxSb3ciLCJhZGRGaWVsZCIsIkFkZEVkaXRpbmdSb3dCeVRlbXBsYXRlIiwicmVtb3ZlRmllbGQiLCJhZGRJbm5lckZvcm1DbG9zZUJ1dHRvbiIsImNsb3NlQnV0dG9uRGF0YSIsInR4dF9zZWFyY2hfYXBpX3RleHQiLCJnZXRBcGlDb25maWdBbmRCaW5kVG9UYWJsZSIsImFkZEFQSSIsIlJ1blRpbWUiLCJyZW1vdmVBUEkiLCJSZW1vdmVSb3ciLCJiaW5kVG9TZWFyY2hGaWVsZCIsImNvbHVtblRpdGxlIiwiY29sdW1uVGFibGVOYW1lIiwiY29sdW1uTmFtZSIsImNvbHVtbkNhcHRpb24iLCJjb2x1bW5EYXRhVHlwZU5hbWUiLCJjb2x1bW5PcGVyYXRvciIsInNlbGVjdENvbHVtbiIsImJpbmRUb1NlYXJjaEZpZWxkUHJvcCIsImRhdGFTZXRQTyIsInRyZWVOb2RlQXJyYXkiLCJyb290Tm9kZSIsInBpZCIsImRzTmFtZSIsImRzSWQiLCJub2RlVHlwZSIsInJlbGF0ZWRUYWJsZVZvTGlzdCIsInJ0VGFibGVDYXB0aW9uIiwicnRUYWJsZUlkIiwiaiIsInRhYmxlRmllbGRQT0xpc3QiLCJzaW5nbGVOb2RlIiwiZmllbGRJZCIsInpUcmVlVUwiLCJmaWVsZFBPIiwiZ2V0RGF0YSIsInNldERhdGEiLCJsaXN0RGVzaWduIiwiYmluZFByb3AiLCJ0YXJnZXRCdXR0b25JZCIsImNvbHVtbkFsaWduIiwiYmluZFByb3BQcm9wIiwiZGF0YVNldFZvIiwiY29sdW1uVm9MaXN0IiwiY29sdW1uSWQiLCJjb2x1bW5WbyIsImVkaXRWaWV3IiwiZGVsZXRlIiwibW92ZSIsImlkRmllbGROYW1lIiwiSVZpZXdUYWJsZVJlbmRlcmVyIiwiVG9EYXRlWVlZWV9NTV9ERCIsImZvcm1VcGRhdGVUaW1lIiwidGFibGVEYXRhT3JpZ2luYWwiLCJzZWxlY3Rpb25Sb3dzIiwic2VhcmNoVGV4dCIsIl9tb2R1bGVsaXN0d2ViZm9ybWNvbXAiLCJtb2R1bGVEYXRhIiwiYWN0aXZlVGFiTmFtZSIsImZpbHRlclRhYmxlRGF0YSIsImluZGV4T2YiLCJnZXRNb2R1bGVOYW1lIiwibW9kdWxlVGV4dCIsIm1vZHVsZUlkIiwibGlzdCIsImFkZCIsIk9wZW5OZXdXaW5kb3ciLCJJVmlld1RhYmxlRGVsZXRlUm93Iiwic3RhdHVzRW5hYmxlIiwic3RhdHVzTmFtZSIsIklWaWV3Q2hhbmdlU2VydmVyU3RhdHVzRmFjZSIsInN0YXR1c0NoYW5nZSIsIklWaWV3TW92ZUZhY2UiLCJsaXN0TW9kdWxlSWQiLCJsaXN0VXBkYXRlVGltZSIsIl9tb2R1bGVsaXN0d2VibGlzdGNvbXAiLCJnZXREQkxpbmtEYXRhVXJsIiwiZ2V0U2luZ2xlREJMaW5rRGF0YVVybCIsImRiTGlua1RyZWUiLCJzZWxlY3RlZERCTGluayIsInNlbGVjdGVkREJMaW5rRGF0YSIsInNlbGVjdERCTGlua01vZGVsRGlhbG9nV3JhcCIsImJlZ2luU2VsZWN0REJMaW5rIiwiZ2V0REJMaW5rRGF0YUluaXRUcmVlIiwiZGJMaW5rWlRyZWVVTCIsInR4dF9kYkxpbmtfc2VhcmNoX3RleHQiLCJkYkxpbmtEYXRhIiwiZ2V0U2VsZWN0ZWREQkxpbmtOYW1lIiwiZGJMaW5rTmFtZSIsInNldE9sZFNlbGVjdGVkREJMaW5rIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBQSxJQUFBQyxVQUFBLDZCQUFBLENBQ0FDLEtBQUEsV0FDQSxJQUFBQyxFQUFBQyxLQUVBLE1BQUEsQ0FDQUMsWUFBQSxDQUNBQyxlQUFBLGlFQUVBQyxZQUFBLENBQ0FDLFFBQUEsS0FDQUMsWUFBQSxDQUNBQyxLQUFBLENBQ0FDLGdCQUFBLEVBQ0FDLFVBQUEsRUFDQUMsUUFBQSxDQUNBQyxNQUFBLFFBQ0FDLGNBQUEsV0FHQUMsTUFBQSxDQUNBQyxRQUFBLEVBQ0FDLGdCQUFBLEVBQ0FDLFNBQUEsUUFDQUMsVUFBQSxPQUVBbEIsS0FBQSxDQUNBbUIsSUFBQSxDQUNBQyxLQUFBLFFBRUFDLFdBQUEsQ0FDQU4sUUFBQSxFQUNBTyxNQUFBLEtBQ0FDLE9BQUEsV0FDQUMsUUFBQSxPQUdBQyxTQUFBLENBQ0FDLFFBQUEsU0FBQUMsRUFBQUMsRUFBQUMsR0FDQSxXQUFBQSxFQUFBQyxjQUNBN0IsRUFBQThCLGFBQUFGLE1BS0FHLFNBQUEsS0FDQUMsa0JBQUEsT0FJQUMsUUFBQSxXQUNBaEMsS0FBQWlDLG1CQUVBQyxRQUFB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QyxzQkFBQSxXQUNBLE9BQUEsTUFBQTV5QixLQUFBcXlCLG1CQUNBLFdBRUFyeUIsS0FBQXF5QixtQkFBQVEsWUFHQUMscUJBQUEsU0FBQWxSLEdBQ0EsSUFBQTdoQixFQUFBQyxLQUVBbUMsWUFBQUMsS0FBQXBDLEtBQUFDLFlBQUFpeUIsdUJBQUEsQ0FDQTFxQixTQUFBb2EsR0FDQSxTQUFBdmYsR0FDQUEsRUFBQUMsUUFDQXZDLEVBQUFzeUIsbUJBQUFod0IsRUFBQXZDLEtBRUF1RCxjQUFBQyxNQUFBQyxPQUFBRixjQUFBRyxjQUFBLEdBQUFuQixFQUFBb0IsUUFBQSxPQUVBekQsUUFHQTJELFNBQUEiLCJmaWxlIjoiQnVpbGRlclZ1ZUVYQ29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJkYXRhc2V0LXNpbXBsZS1zZWxlY3QtY29tcFwiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXREYXRhU2V0RGF0YTogXCIvUmVzdC9CdWlsZGVyL0RhdGFTZXQvRGF0YVNldE1haW4vR2V0RGF0YVNldHNGb3JaVHJlZU5vZGVMaXN0XCJcbiAgICAgIH0sXG4gICAgICBkYXRhU2V0VHJlZToge1xuICAgICAgICB0cmVlT2JqOiBudWxsLFxuICAgICAgICB0cmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICBjaGtTdHlsZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgcmFkaW9UeXBlOiBcImFsbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBrZXk6IHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0ZXh0XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaW1wbGVEYXRhOiB7XG4gICAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgaWRLZXk6IFwiaWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcInBhcmVudElkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgaWYgKHRyZWVOb2RlLm5vZGVUeXBlTmFtZSA9PSBcIkRhdGFTZXRcIikge1xuICAgICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkTm9kZSh0cmVlTm9kZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRyZWVEYXRhOiBudWxsLFxuICAgICAgICBzZWxlY3RlZFRhYmxlTmFtZTogXCLml6BcIlxuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5iaW5kRGF0YVNldFRyZWUoKTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGJpbmREYXRhU2V0VHJlZTogZnVuY3Rpb24gYmluZERhdGFTZXRUcmVlKCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldERhdGFTZXREYXRhLCB7fSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LmRhdGEgIT0gbnVsbCAmJiByZXN1bHQuZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YVtpXS5ub2RlVHlwZU5hbWUgPT0gXCJEYXRhU2V0R3JvdXBcIikge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5kYXRhW2ldLmljb24gPSBCYXNlVXRpbGl0eS5HZXRSb290UGF0aCgpICsgXCIvVGhlbWVzL1BuZzE2WDE2L3BhY2thZ2UucG5nXCI7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmRhdGFbaV0uaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvYXBwbGljYXRpb25fdmlld19jb2x1bW5zLnBuZ1wiO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3NlbGYuZGF0YVNldFRyZWUudHJlZURhdGEgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICBfc2VsZi5kYXRhU2V0VHJlZS50cmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoXCIjZGF0YVNldFpUcmVlVUxcIiksIF9zZWxmLmRhdGFTZXRUcmVlLnRyZWVTZXR0aW5nLCBfc2VsZi5kYXRhU2V0VHJlZS50cmVlRGF0YSk7XG5cbiAgICAgICAgICBfc2VsZi5kYXRhU2V0VHJlZS50cmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcblxuICAgICAgICAgIGZ1enp5U2VhcmNoVHJlZU9iaihfc2VsZi5kYXRhU2V0VHJlZS50cmVlT2JqLCBfc2VsZi4kcmVmcy50eHRfc2VhcmNoX3RleHQuJHJlZnMuaW5wdXQsIG51bGwsIHRydWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgc2VsZWN0ZWROb2RlOiBmdW5jdGlvbiBzZWxlY3RlZE5vZGUodHJlZU5vZGUpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLWRhdGFzZXQnLCB0cmVlTm9kZSk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJqcy1jb2RlLWZyYWdtZW50LXdyYXBcIj5cXFxuICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XCJpbnB1dF9ib3JkZXJfYm90dG9tXCIgcmVmPVwidHh0X3NlYXJjaF90ZXh0XCIgcGxhY2Vob2xkZXI9XCLor7fovpPlhaXooajlkI3miJbogIXmoIfpophcIj48L2ktaW5wdXQ+XFxcbiAgICAgICAgICAgICAgICAgICAgPHVsIGlkPVwiZGF0YVNldFpUcmVlVUxcIiBjbGFzcz1cInp0cmVlXCI+PC91bD5cXFxuICAgICAgICAgICAgICAgIDwvZGl2Pidcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwianMtZGVzaWduLWNvZGUtZnJhZ21lbnRcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBqc0VkaXRvckluc3RhbmNlOiBudWxsXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgc2V0SlNFZGl0b3JJbnN0YW5jZTogZnVuY3Rpb24gc2V0SlNFZGl0b3JJbnN0YW5jZShvYmopIHtcbiAgICAgIHRoaXMuanNFZGl0b3JJbnN0YW5jZSA9IG9iajtcbiAgICB9LFxuICAgIGdldEpzRWRpdG9ySW5zdDogZnVuY3Rpb24gZ2V0SnNFZGl0b3JJbnN0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuanNFZGl0b3JJbnN0YW5jZTtcbiAgICB9LFxuICAgIGluc2VydEpzOiBmdW5jdGlvbiBpbnNlcnRKcyhqcykge1xuICAgICAgdmFyIGRvYyA9IHRoaXMuZ2V0SnNFZGl0b3JJbnN0KCkuZ2V0RG9jKCk7XG4gICAgICB2YXIgY3Vyc29yID0gZG9jLmdldEN1cnNvcigpO1xuICAgICAgZG9jLnJlcGxhY2VSYW5nZShqcywgY3Vyc29yKTtcbiAgICB9LFxuICAgIGZvcm1hdEpTOiBmdW5jdGlvbiBmb3JtYXRKUygpIHtcbiAgICAgIENvZGVNaXJyb3IuY29tbWFuZHNbXCJzZWxlY3RBbGxcIl0odGhpcy5nZXRKc0VkaXRvckluc3QoKSk7XG4gICAgICB2YXIgcmFuZ2UgPSB7XG4gICAgICAgIGZyb206IHRoaXMuZ2V0SnNFZGl0b3JJbnN0KCkuZ2V0Q3Vyc29yKHRydWUpLFxuICAgICAgICB0bzogdGhpcy5nZXRKc0VkaXRvckluc3QoKS5nZXRDdXJzb3IoZmFsc2UpXG4gICAgICB9O1xuICAgICAgO1xuICAgICAgdGhpcy5nZXRKc0VkaXRvckluc3QoKS5hdXRvRm9ybWF0UmFuZ2UocmFuZ2UuZnJvbSwgcmFuZ2UudG8pO1xuICAgIH0sXG4gICAgYWxlcnREZXNjOiBmdW5jdGlvbiBhbGVydERlc2MoKSB7fSxcbiAgICByZWZTY3JpcHQ6IGZ1bmN0aW9uIHJlZlNjcmlwdCgpIHtcbiAgICAgIHZhciBqcyA9IFwiPHNjcmlwdCB0eXBlPVxcXCJ0ZXh0L2phdmFzY3JpcHRcXFwiIHNyYz1cXFwiJHtjb250ZXh0UGF0aH0vVUlDb21wb25lbnQvVHJlZVRhYmxlL0pzL1RyZWVUYWJsZS5qc1xcXCI+PC9zY3JpcHQ+XCI7XG4gICAgICB0aGlzLmluc2VydEpzKGpzKTtcbiAgICB9LFxuICAgIGNhbGxTZXJ2aWNlTWV0aG9kOiBmdW5jdGlvbiBjYWxsU2VydmljZU1ldGhvZCgpIHt9XG4gIH0sXG4gIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtd3JhcFwiPlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwianMtY29kZS1mcmFnbWVudC1pdGVtXCIgQGNsaWNrPVwiZm9ybWF0SlNcIj7moLzlvI/ljJY8L2Rpdj5cXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtaXRlbVwiPuivtOaYjjwvZGl2PlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwianMtY29kZS1mcmFnbWVudC1pdGVtXCIgQGNsaWNrPVwicmVmU2NyaXB0XCI+5byV5YWl6ISa5pysPC9kaXY+XFxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJqcy1jb2RlLWZyYWdtZW50LWl0ZW1cIj7ojrflj5ZVUkzlj4LmlbA8L2Rpdj5cXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImpzLWNvZGUtZnJhZ21lbnQtaXRlbVwiPuiwg+eUqOacjeWKoeaWueazlTwvZGl2PlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwianMtY29kZS1mcmFnbWVudC1pdGVtXCI+5Yqg6L295pWw5o2u5a2X5YW4PC9kaXY+XFxcbiAgICAgICAgPC9kaXY+J1xufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJzcWwtZ2VuZXJhbC1kZXNpZ24tY29tcFwiLCB7XG4gIHByb3BzOiBbXCJzcWxEZXNpZ25lckhlaWdodFwiLCBcInZhbHVlXCIsIFwic2hvd0ZpZWxkXCJdLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzcWxUZXh0OiBcIlwiLFxuICAgICAgc2VsZWN0ZWRJdGVtVmFsdWU6IFwi6K+05piOXCIsXG4gICAgICBzZWxmVGFibGVGaWVsZHM6IFtdLFxuICAgICAgcGFyZW50VGFibGVGaWVsZHM6IFtdXG4gICAgfTtcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICBzcWxUZXh0OiBmdW5jdGlvbiBzcWxUZXh0KG5ld1ZhbCkge1xuICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBuZXdWYWwpO1xuICAgIH0sXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKG5ld1ZhbCkge1xuICAgICAgdGhpcy5zcWxUZXh0ID0gbmV3VmFsO1xuICAgIH1cbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLnNxbENvZGVNaXJyb3IgPSBDb2RlTWlycm9yLmZyb21UZXh0QXJlYSgkKFwiI1RleHRBcmVhU1FMRWRpdG9yXCIpWzBdLCB7XG4gICAgICBtb2RlOiBcInRleHQveC1zcWxcIixcbiAgICAgIGxpbmVOdW1iZXJzOiB0cnVlLFxuICAgICAgbGluZVdyYXBwaW5nOiB0cnVlLFxuICAgICAgZm9sZEd1dHRlcjogdHJ1ZSxcbiAgICAgIHRoZW1lOiBcIm1vbm9rYWlcIlxuICAgIH0pO1xuICAgIGNvbnNvbGUubG9nKHRoaXMuc3FsRGVzaWduZXJIZWlnaHQpO1xuICAgIHRoaXMuc3FsQ29kZU1pcnJvci5zZXRTaXplKFwiMTAwJVwiLCB0aGlzLnNxbERlc2lnbmVySGVpZ2h0KTtcblxuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICB0aGlzLnNxbENvZGVNaXJyb3Iub24oXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKGNNaXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGNNaXJyb3IuZ2V0VmFsdWUoKSk7XG4gICAgICBfc2VsZi5zcWxUZXh0ID0gY01pcnJvci5nZXRWYWx1ZSgpO1xuICAgIH0pO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZ2V0VmFsdWU6IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgdGhpcy5zcWxDb2RlTWlycm9yLmdldFZhbHVlKCk7XG4gICAgfSxcbiAgICBzZXRWYWx1ZTogZnVuY3Rpb24gc2V0VmFsdWUodmFsdWUpIHtcbiAgICAgIHRoaXMuc3FsQ29kZU1pcnJvci5zZXRWYWx1ZSh2YWx1ZSk7XG4gICAgfSxcbiAgICBzZXRBYm91dFRhYmxlRmllbGRzOiBmdW5jdGlvbiBzZXRBYm91dFRhYmxlRmllbGRzKHNlbGZUYWJsZUZpZWxkcywgcGFyZW50VGFibGVGaWVsZHMpIHtcbiAgICAgIHRoaXMuc2VsZlRhYmxlRmllbGRzID0gc2VsZlRhYmxlRmllbGRzO1xuICAgICAgdGhpcy5wYXJlbnRUYWJsZUZpZWxkcyA9IHBhcmVudFRhYmxlRmllbGRzO1xuICAgIH0sXG4gICAgaW5zZXJ0RW52VG9FZGl0b3I6IGZ1bmN0aW9uIGluc2VydEVudlRvRWRpdG9yKGNvZGUpIHtcbiAgICAgIHRoaXMuaW5zZXJ0Q29kZUF0Q3Vyc29yKGNvZGUpO1xuICAgIH0sXG4gICAgaW5zZXJ0RmllbGRUb0VkaXRvcjogZnVuY3Rpb24gaW5zZXJ0RmllbGRUb0VkaXRvcihzb3VyY2VUeXBlLCBldmVudCkge1xuICAgICAgdmFyIHNvdXJjZUZpZWxkcyA9IG51bGw7XG5cbiAgICAgIGlmIChzb3VyY2VUeXBlID09IFwic2VsZlRhYmxlRmllbGRzXCIpIHtcbiAgICAgICAgc291cmNlRmllbGRzID0gdGhpcy5zZWxmVGFibGVGaWVsZHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzb3VyY2VGaWVsZHMgPSB0aGlzLnBhcmVudFRhYmxlRmllbGRzO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNvdXJjZUZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoc291cmNlRmllbGRzW2ldLmZpZWxkTmFtZSA9PSBldmVudCkge1xuICAgICAgICAgIHRoaXMuaW5zZXJ0Q29kZUF0Q3Vyc29yKHNvdXJjZUZpZWxkc1tpXS50YWJsZU5hbWUgKyBcIi5cIiArIHNvdXJjZUZpZWxkc1tpXS5maWVsZE5hbWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBpbnNlcnRDb2RlQXRDdXJzb3I6IGZ1bmN0aW9uIGluc2VydENvZGVBdEN1cnNvcihjb2RlKSB7XG4gICAgICB2YXIgZG9jID0gdGhpcy5zcWxDb2RlTWlycm9yLmdldERvYygpO1xuICAgICAgdmFyIGN1cnNvciA9IGRvYy5nZXRDdXJzb3IoKTtcbiAgICAgIGRvYy5yZXBsYWNlUmFuZ2UoY29kZSwgY3Vyc29yKTtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiAnPGRpdj5cXFxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD1cIlRleHRBcmVhU1FMRWRpdG9yXCI+PC90ZXh0YXJlYT5cXFxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJ0ZXh0LWFsaWduOiByaWdodDttYXJnaW4tdG9wOiA4cHhcIj5cXFxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uR3JvdXAgc2l6ZT1cInNtYWxsXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gQGNsaWNrPVwiaW5zZXJ0RW52VG9FZGl0b3IoXFwnI3tBcGlWYXIu5b2T5YmN55So5oi35omA5Zyo57uE57uHSUR9XFwnKVwiPue7hOe7h0lkPC9CdXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gQGNsaWNrPVwiaW5zZXJ0RW52VG9FZGl0b3IoXFwnI3tBcGlWYXIu5b2T5YmN55So5oi35omA5Zyo57uE57uH5ZCN56ewfVxcJylcIj7nu4Tnu4flkI3np7A8L0J1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBAY2xpY2s9XCJpbnNlcnRFbnZUb0VkaXRvcihcXCcje0FwaVZhci7lvZPliY3nlKjmiLdJRH1cXCcpXCI+55So5oi3SWQ8L0J1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBAY2xpY2s9XCJpbnNlcnRFbnZUb0VkaXRvcihcXCcje0FwaVZhci7lvZPliY3nlKjmiLflkI3np7B9XFwnKVwiPueUqOaIt+WQjeensDwvQnV0dG9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEBjbGljaz1cImluc2VydEVudlRvRWRpdG9yKFxcJyN7RGF0ZVRpbWUu5bm05bm05bm05bm0LeaciOaciC3ml6Xml6V9XFwnKVwiPnl5eXktTU0tZGQ8L0J1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbj7or7TmmI48L0J1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbkdyb3VwPlxcXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwibWFyZ2luLXRvcDogOHB4XCIgdi1pZj1cInNob3dGaWVsZFwiPlxcXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJmbG9hdDogbGVmdDttYXJnaW46IDRweCAxMHB4XCI+5pys6KGo5a2X5q61PC9kaXY+XFxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImZsb2F0OiBsZWZ0XCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLXNlbGVjdCBwbGFjZWhvbGRlcj1cIum7mOiupOS9v+eUqElk5a2X5q61XCIgc2l6ZT1cInNtYWxsXCIgc3R5bGU9XCJ3aWR0aDoxNzVweFwiIEBvbi1jaGFuZ2U9XCJpbnNlcnRGaWVsZFRvRWRpdG9yKFxcJ3NlbGZUYWJsZUZpZWxkc1xcJywkZXZlbnQpXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdi1mb3I9XCJpdGVtIGluIHNlbGZUYWJsZUZpZWxkc1wiIDp2YWx1ZT1cIml0ZW0uZmllbGROYW1lXCIgOmtleT1cIml0ZW0uZmllbGROYW1lXCI+e3tpdGVtLmZpZWxkQ2FwdGlvbn19PC9pLW9wdGlvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9pLXNlbGVjdD5cXFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiZmxvYXQ6IGxlZnQ7bWFyZ2luOiA0cHggMTBweFwiPueItuihqOWtl+autTwvZGl2PlxcXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJmbG9hdDogbGVmdFwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3QgcGxhY2Vob2xkZXI9XCLpu5jorqTkvb/nlKhJZOWtl+autVwiIHNpemU9XCJzbWFsbFwiIHN0eWxlPVwid2lkdGg6MTc3cHhcIiBAb24tY2hhbmdlPVwiaW5zZXJ0RmllbGRUb0VkaXRvcihcXCdwYXJlbnRUYWJsZUZpZWxkc1xcJywkZXZlbnQpXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdi1mb3I9XCJpdGVtIGluIHBhcmVudFRhYmxlRmllbGRzXCIgOnZhbHVlPVwiaXRlbS5maWVsZE5hbWVcIiA6a2V5PVwiaXRlbS5maWVsZE5hbWVcIj57e2l0ZW0uZmllbGRDYXB0aW9ufX08L2ktb3B0aW9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2ktc2VsZWN0PlxcXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxcbiAgICAgICAgICAgICAgPC9kaXY+J1xufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJ0YWJsZS1yZWxhdGlvbi1jb250ZW50LWNvbXBcIiwge1xuICBwcm9wczogW1wicmVsYXRpb25cIl0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHM6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EYXRhQmFzZS9UYWJsZS9HZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzXCIsXG4gICAgICAgIHNhdmVEaWFncmFtOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvVGFibGVSZWxhdGlvbi9UYWJsZVJlbGF0aW9uL1NhdmVEaWFncmFtXCIsXG4gICAgICAgIGdldFNpbmdsZURpYWdyYW1EYXRhOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvVGFibGVSZWxhdGlvbi9UYWJsZVJlbGF0aW9uL0dldERldGFpbERhdGFcIixcbiAgICAgICAgdGFibGVWaWV3OiBcIi9IVE1ML0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGVFZGl0Lmh0bWxcIlxuICAgICAgfSxcbiAgICAgIHRhYmxlUmVsYXRpb25EaWFncmFtOiBudWxsLFxuICAgICAgZGlzcGxheURlc2M6IHRydWUsXG4gICAgICBmb3JtYXRKc29uOiBudWxsLFxuICAgICAgcmVjb3JkSWQ6IHRoaXMucmVsYXRpb24ucmVsYXRpb25JZFxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgJCh0aGlzLiRyZWZzLnJlbGF0aW9uQ29udGVudE91dGVyV3JhcCkuY3NzKFwiaGVpZ2h0XCIsIFBhZ2VTdHlsZVV0aWxpdHkuR2V0UGFnZUhlaWdodCgpIC0gNzUpO1xuXG4gICAgaWYgKFBhZ2VTdHlsZVV0aWxpdHkuR2V0UGFnZVdpZHRoKCkgPCAxMDAwKSB7XG4gICAgICB0aGlzLmRpc3BsYXlEZXNjID0gZmFsc2U7XG4gICAgICAkKFwiLnRhYmxlLXJlbGF0aW9uLW9wLWJ1dHRvbnMtb3V0ZXItd3JhcFwiKS5jc3MoXCJ3aWR0aFwiLCBcIjEwMCVcIik7XG4gICAgfVxuXG4gICAgdGhpcy5pbml0RGlhZ3JhbSgpO1xuICAgIHRoaXMubG9hZFJlbGF0aW9uRGV0YWlsRGF0YSgpO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIGlmICh3aW5kb3cuZ29TYW1wbGVzKSBnb1NhbXBsZXMoKTtcbiAgICAgIHZhciAkID0gZ28uR3JhcGhPYmplY3QubWFrZTtcbiAgICAgIHZhciBteURpYWdyYW0gPSAkKGdvLkRpYWdyYW0sIFwidGFibGVSZWxhdGlvbkRpYWdyYW1EaXZcIiwge1xuICAgICAgICBhbGxvd0RlbGV0ZTogZmFsc2UsXG4gICAgICAgIGFsbG93Q29weTogZmFsc2UsXG4gICAgICAgIGxheW91dDogJChnby5Gb3JjZURpcmVjdGVkTGF5b3V0KSxcbiAgICAgICAgXCJ1bmRvTWFuYWdlci5pc0VuYWJsZWRcIjogdHJ1ZVxuICAgICAgfSk7XG4gICAgICB2YXIgYmx1ZWdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1MCwgMTUwLCAyNTApXCIsXG4gICAgICAgIDAuNTogXCJyZ2IoODYsIDg2LCAxODYpXCIsXG4gICAgICAgIDE6IFwicmdiKDg2LCA4NiwgMTg2KVwiXG4gICAgICB9KTtcbiAgICAgIHZhciBncmVlbmdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1OCwgMjA5LCAxNTkpXCIsXG4gICAgICAgIDE6IFwicmdiKDY3LCAxMDEsIDU2KVwiXG4gICAgICB9KTtcbiAgICAgIHZhciByZWRncmFkID0gJChnby5CcnVzaCwgXCJMaW5lYXJcIiwge1xuICAgICAgICAwOiBcInJnYigyMDYsIDEwNiwgMTAwKVwiLFxuICAgICAgICAxOiBcInJnYigxODAsIDU2LCA1MClcIlxuICAgICAgfSk7XG4gICAgICB2YXIgeWVsbG93Z3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMDogXCJyZ2IoMjU0LCAyMjEsIDUwKVwiLFxuICAgICAgICAxOiBcInJnYigyNTQsIDE4MiwgNTApXCJcbiAgICAgIH0pO1xuICAgICAgdmFyIGxpZ2h0Z3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMTogXCIjRTZFNkZBXCIsXG4gICAgICAgIDA6IFwiI0ZGRkFGMFwiXG4gICAgICB9KTtcbiAgICAgIHZhciBpdGVtVGVtcGwgPSAkKGdvLlBhbmVsLCBcIkhvcml6b250YWxcIiwgJChnby5TaGFwZSwge1xuICAgICAgICBkZXNpcmVkU2l6ZTogbmV3IGdvLlNpemUoMTAsIDEwKVxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJmaWd1cmVcIiwgXCJmaWd1cmVcIiksIG5ldyBnby5CaW5kaW5nKFwiZmlsbFwiLCBcImNvbG9yXCIpKSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgc3Ryb2tlOiBcIiMzMzMzMzNcIixcbiAgICAgICAgZm9udDogXCJib2xkIDE0cHggc2Fucy1zZXJpZlwiXG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIiwgXCJuYW1lXCIpKSk7XG4gICAgICBteURpYWdyYW0ubm9kZVRlbXBsYXRlID0gJChnby5Ob2RlLCBcIkF1dG9cIiwge1xuICAgICAgICBzZWxlY3Rpb25BZG9ybmVkOiB0cnVlLFxuICAgICAgICByZXNpemFibGU6IHRydWUsXG4gICAgICAgIGxheW91dENvbmRpdGlvbnM6IGdvLlBhcnQuTGF5b3V0U3RhbmRhcmQgJiB+Z28uUGFydC5MYXlvdXROb2RlU2l6ZWQsXG4gICAgICAgIGZyb21TcG90OiBnby5TcG90LkFsbFNpZGVzLFxuICAgICAgICB0b1Nwb3Q6IGdvLlNwb3QuQWxsU2lkZXMsXG4gICAgICAgIGlzU2hhZG93ZWQ6IHRydWUsXG4gICAgICAgIHNoYWRvd0NvbG9yOiBcIiNDNUMxQUFcIlxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJsb2NhdGlvblwiLCBcImxvY2F0aW9uXCIpLm1ha2VUd29XYXkoKSwgbmV3IGdvLkJpbmRpbmcoXCJkZXNpcmVkU2l6ZVwiLCBcInZpc2libGVcIiwgZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBnby5TaXplKE5hTiwgTmFOKTtcbiAgICAgIH0pLm9mT2JqZWN0KFwiTElTVFwiKSwgJChnby5TaGFwZSwgXCJSZWN0YW5nbGVcIiwge1xuICAgICAgICBmaWxsOiBsaWdodGdyYWQsXG4gICAgICAgIHN0cm9rZTogXCIjNzU2ODc1XCIsXG4gICAgICAgIHN0cm9rZVdpZHRoOiAzXG4gICAgICB9KSwgJChnby5QYW5lbCwgXCJUYWJsZVwiLCB7XG4gICAgICAgIG1hcmdpbjogOCxcbiAgICAgICAgc3RyZXRjaDogZ28uR3JhcGhPYmplY3QuRmlsbFxuICAgICAgfSwgJChnby5Sb3dDb2x1bW5EZWZpbml0aW9uLCB7XG4gICAgICAgIHJvdzogMCxcbiAgICAgICAgc2l6aW5nOiBnby5Sb3dDb2x1bW5EZWZpbml0aW9uLk5vbmVcbiAgICAgIH0pLCAkKGdvLlRleHRCbG9jaywge1xuICAgICAgICByb3c6IDAsXG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5DZW50ZXIsXG4gICAgICAgIG1hcmdpbjogbmV3IGdvLk1hcmdpbigwLCAxNCwgMCwgMiksXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNnB4IHNhbnMtc2VyaWZcIlxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwia2V5XCIpKSwgJChcIlBhbmVsRXhwYW5kZXJCdXR0b25cIiwgXCJMSVNUXCIsIHtcbiAgICAgICAgcm93OiAwLFxuICAgICAgICBhbGlnbm1lbnQ6IGdvLlNwb3QuVG9wUmlnaHRcbiAgICAgIH0pLCAkKGdvLlBhbmVsLCBcIlZlcnRpY2FsXCIsIHtcbiAgICAgICAgbmFtZTogXCJMSVNUXCIsXG4gICAgICAgIHJvdzogMSxcbiAgICAgICAgcGFkZGluZzogMyxcbiAgICAgICAgYWxpZ25tZW50OiBnby5TcG90LlRvcExlZnQsXG4gICAgICAgIGRlZmF1bHRBbGlnbm1lbnQ6IGdvLlNwb3QuTGVmdCxcbiAgICAgICAgc3RyZXRjaDogZ28uR3JhcGhPYmplY3QuSG9yaXpvbnRhbCxcbiAgICAgICAgaXRlbVRlbXBsYXRlOiBpdGVtVGVtcGxcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwiaXRlbUFycmF5XCIsIFwiaXRlbXNcIikpKSk7XG4gICAgICBteURpYWdyYW0ubGlua1RlbXBsYXRlID0gJChnby5MaW5rLCB7XG4gICAgICAgIHNlbGVjdGlvbkFkb3JuZWQ6IHRydWUsXG4gICAgICAgIGxheWVyTmFtZTogXCJGb3JlZ3JvdW5kXCIsXG4gICAgICAgIHJlc2hhcGFibGU6IHRydWUsXG4gICAgICAgIHJvdXRpbmc6IGdvLkxpbmsuQXZvaWRzTm9kZXMsXG4gICAgICAgIGNvcm5lcjogNSxcbiAgICAgICAgY3VydmU6IGdvLkxpbmsuSnVtcE92ZXJcbiAgICAgIH0sICQoZ28uU2hhcGUsIHtcbiAgICAgICAgc3Ryb2tlOiBcIiMzMDNCNDVcIixcbiAgICAgICAgc3Ryb2tlV2lkdGg6IDIuNVxuICAgICAgfSksICQoZ28uVGV4dEJsb2NrLCB7XG4gICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgZm9udDogXCJib2xkIDE0cHggc2Fucy1zZXJpZlwiLFxuICAgICAgICBzdHJva2U6IFwiIzE5NjdCM1wiLFxuICAgICAgICBzZWdtZW50SW5kZXg6IDAsXG4gICAgICAgIHNlZ21lbnRPZmZzZXQ6IG5ldyBnby5Qb2ludChOYU4sIE5hTiksXG4gICAgICAgIHNlZ21lbnRPcmllbnRhdGlvbjogZ28uTGluay5PcmllbnRVcHJpZ2h0XG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIiwgXCJ0ZXh0XCIpKSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICBmb250OiBcImJvbGQgMTRweCBzYW5zLXNlcmlmXCIsXG4gICAgICAgIHN0cm9rZTogXCIjMTk2N0IzXCIsXG4gICAgICAgIHNlZ21lbnRJbmRleDogLTEsXG4gICAgICAgIHNlZ21lbnRPZmZzZXQ6IG5ldyBnby5Qb2ludChOYU4sIE5hTiksXG4gICAgICAgIHNlZ21lbnRPcmllbnRhdGlvbjogZ28uTGluay5PcmllbnRVcHJpZ2h0XG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIiwgXCJ0b1RleHRcIikpKTtcbiAgICAgIHZhciBub2RlRGF0YUFycmF5ID0gW3tcbiAgICAgICAga2V5OiBcIlByb2R1Y3RzXCIsXG4gICAgICAgIGl0ZW1zOiBbe1xuICAgICAgICAgIG5hbWU6IFwiUHJvZHVjdElEXCIsXG4gICAgICAgICAgaXNrZXk6IHRydWUsXG4gICAgICAgICAgZmlndXJlOiBcIkRlY2lzaW9uXCIsXG4gICAgICAgICAgY29sb3I6IHllbGxvd2dyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiUHJvZHVjdE5hbWVcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIkN1YmUxXCIsXG4gICAgICAgICAgY29sb3I6IGJsdWVncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIlN1cHBsaWVySURcIixcbiAgICAgICAgICBpc2tleTogZmFsc2UsXG4gICAgICAgICAgZmlndXJlOiBcIkRlY2lzaW9uXCIsXG4gICAgICAgICAgY29sb3I6IFwicHVycGxlXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiQ2F0ZWdvcnlJRFwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiRGVjaXNpb25cIixcbiAgICAgICAgICBjb2xvcjogXCJwdXJwbGVcIlxuICAgICAgICB9XVxuICAgICAgfSwge1xuICAgICAgICBrZXk6IFwiU3VwcGxpZXJzXCIsXG4gICAgICAgIGl0ZW1zOiBbe1xuICAgICAgICAgIG5hbWU6IFwiU3VwcGxpZXJJRFwiLFxuICAgICAgICAgIGlza2V5OiB0cnVlLFxuICAgICAgICAgIGZpZ3VyZTogXCJEZWNpc2lvblwiLFxuICAgICAgICAgIGNvbG9yOiB5ZWxsb3dncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIkNvbXBhbnlOYW1lXCIsXG4gICAgICAgICAgaXNrZXk6IGZhbHNlLFxuICAgICAgICAgIGZpZ3VyZTogXCJDdWJlMVwiLFxuICAgICAgICAgIGNvbG9yOiBibHVlZ3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJDb250YWN0TmFtZVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiQ3ViZTFcIixcbiAgICAgICAgICBjb2xvcjogYmx1ZWdyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiQWRkcmVzc1wiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiQ3ViZTFcIixcbiAgICAgICAgICBjb2xvcjogYmx1ZWdyYWRcbiAgICAgICAgfV1cbiAgICAgIH0sIHtcbiAgICAgICAga2V5OiBcIkNhdGVnb3JpZXNcIixcbiAgICAgICAgaXRlbXM6IFt7XG4gICAgICAgICAgbmFtZTogXCJDYXRlZ29yeUlEXCIsXG4gICAgICAgICAgaXNrZXk6IHRydWUsXG4gICAgICAgICAgZmlndXJlOiBcIkRlY2lzaW9uXCIsXG4gICAgICAgICAgY29sb3I6IHllbGxvd2dyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiQ2F0ZWdvcnlOYW1lXCIsXG4gICAgICAgICAgaXNrZXk6IGZhbHNlLFxuICAgICAgICAgIGZpZ3VyZTogXCJDdWJlMVwiLFxuICAgICAgICAgIGNvbG9yOiBibHVlZ3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJEZXNjcmlwdGlvblwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiQ3ViZTFcIixcbiAgICAgICAgICBjb2xvcjogYmx1ZWdyYWRcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6IFwiUGljdHVyZVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiVHJpYW5nbGVVcFwiLFxuICAgICAgICAgIGNvbG9yOiByZWRncmFkXG4gICAgICAgIH1dXG4gICAgICB9LCB7XG4gICAgICAgIGtleTogXCJPcmRlciBEZXRhaWxzXCIsXG4gICAgICAgIGl0ZW1zOiBbe1xuICAgICAgICAgIG5hbWU6IFwiT3JkZXJJRFwiLFxuICAgICAgICAgIGlza2V5OiB0cnVlLFxuICAgICAgICAgIGZpZ3VyZTogXCJEZWNpc2lvblwiLFxuICAgICAgICAgIGNvbG9yOiB5ZWxsb3dncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIlByb2R1Y3RJRFwiLFxuICAgICAgICAgIGlza2V5OiB0cnVlLFxuICAgICAgICAgIGZpZ3VyZTogXCJEZWNpc2lvblwiLFxuICAgICAgICAgIGNvbG9yOiB5ZWxsb3dncmFkXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiBcIlVuaXRQcmljZVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiTWFnbmV0aWNEYXRhXCIsXG4gICAgICAgICAgY29sb3I6IGdyZWVuZ3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJRdWFudGl0eVwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiTWFnbmV0aWNEYXRhXCIsXG4gICAgICAgICAgY29sb3I6IGdyZWVuZ3JhZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbmFtZTogXCJEaXNjb3VudFwiLFxuICAgICAgICAgIGlza2V5OiBmYWxzZSxcbiAgICAgICAgICBmaWd1cmU6IFwiTWFnbmV0aWNEYXRhXCIsXG4gICAgICAgICAgY29sb3I6IGdyZWVuZ3JhZFxuICAgICAgICB9XVxuICAgICAgfV07XG4gICAgICB2YXIgbGlua0RhdGFBcnJheSA9IFt7XG4gICAgICAgIGZyb206IFwiUHJvZHVjdHNcIixcbiAgICAgICAgdG86IFwiU3VwcGxpZXJzXCIsXG4gICAgICAgIHRleHQ6IFwiMC4uTlwiLFxuICAgICAgICB0b1RleHQ6IFwiMVwiXG4gICAgICB9LCB7XG4gICAgICAgIGZyb206IFwiUHJvZHVjdHNcIixcbiAgICAgICAgdG86IFwiQ2F0ZWdvcmllc1wiLFxuICAgICAgICB0ZXh0OiBcIjAuLk5cIixcbiAgICAgICAgdG9UZXh0OiBcIjFcIlxuICAgICAgfSwge1xuICAgICAgICBmcm9tOiBcIk9yZGVyIERldGFpbHNcIixcbiAgICAgICAgdG86IFwiUHJvZHVjdHNcIixcbiAgICAgICAgdGV4dDogXCIwLi5OXCIsXG4gICAgICAgIHRvVGV4dDogXCIxXCJcbiAgICAgIH1dO1xuICAgICAgbXlEaWFncmFtLm1vZGVsID0gJChnby5HcmFwaExpbmtzTW9kZWwsIHtcbiAgICAgICAgY29waWVzQXJyYXlzOiB0cnVlLFxuICAgICAgICBjb3BpZXNBcnJheU9iamVjdHM6IHRydWUsXG4gICAgICAgIG5vZGVEYXRhQXJyYXk6IG5vZGVEYXRhQXJyYXksXG4gICAgICAgIGxpbmtEYXRhQXJyYXk6IGxpbmtEYXRhQXJyYXlcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgc2hvd1NlbGVjdFRhYmxlRGlhbG9nOiBmdW5jdGlvbiBzaG93U2VsZWN0VGFibGVEaWFsb2coKSB7XG4gICAgICB0aGlzLiRyZWZzLnNlbGVjdFNpbmdsZVRhYmxlRGlhbG9nLmJlZ2luU2VsZWN0VGFibGUoKTtcbiAgICB9LFxuICAgIHNob3dTZWxlY3RGaWVsZENvbm5lY3REaWFsb2c6IGZ1bmN0aW9uIHNob3dTZWxlY3RGaWVsZENvbm5lY3REaWFsb2coKSB7XG4gICAgICB2YXIgZnJvbVRhYmxlSWQgPSBcIlwiO1xuICAgICAgdmFyIHRvVGFibGVJZCA9IFwiXCI7XG4gICAgICB2YXIgaSA9IDA7XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLnNlbGVjdGlvbi5lYWNoKGZ1bmN0aW9uIChwYXJ0KSB7XG4gICAgICAgIGlmIChwYXJ0IGluc3RhbmNlb2YgZ28uTm9kZSkge1xuICAgICAgICAgIGlmIChpID09IDApIHtcbiAgICAgICAgICAgIGZyb21UYWJsZUlkID0gcGFydC5kYXRhLnRhYmxlSWQ7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRvVGFibGVJZCA9IHBhcnQuZGF0YS50YWJsZUlkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmICghdG9UYWJsZUlkKSB7XG4gICAgICAgIHRvVGFibGVJZCA9IGZyb21UYWJsZUlkO1xuICAgICAgfVxuXG4gICAgICBpZiAoZnJvbVRhYmxlSWQgIT0gXCJcIiAmJiB0b1RhYmxlSWQgIT0gXCJcIikge1xuICAgICAgICB0aGlzLiRyZWZzLnRhYmxlUmVsYXRpb25Db25uZWN0VHdvVGFibGVEaWFsb2cuYmVnaW5TZWxlY3RDb25uZWN0KGZyb21UYWJsZUlkLCB0b1RhYmxlSWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLor7flhYjpgInkuK0y5Liq6IqC54K5XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgYWRkVGFibGVUb0RpYWdyYW06IGZ1bmN0aW9uIGFkZFRhYmxlVG9EaWFncmFtKHRhYmxlRGF0YSkge1xuICAgICAgdmFyIHRhYmxlSWQgPSB0YWJsZURhdGEuaWQ7XG4gICAgICB2YXIgdGFibGVJZHMgPSBbdGFibGVJZF07XG5cbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy50YWJsZUlzRXhpc3RJbkRpYWdyYW0odGFibGVJZCkpIHtcbiAgICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHMsIHtcbiAgICAgICAgICBcInRhYmxlSWRzXCI6IHRhYmxlSWRzXG4gICAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgIHZhciBhbGxGaWVsZHMgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICAgIHZhciBzaW5nbGVUYWJsZSA9IHJlc3VsdC5leEtWRGF0YS5UYWJsZXNbMF07XG4gICAgICAgICAgICB2YXIgYWxsRmllbGRzU3R5bGUgPSBbXTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxGaWVsZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgYWxsRmllbGRzW2ldLmRpc3BsYXlUZXh0ID0gYWxsRmllbGRzW2ldLmZpZWxkTmFtZSArIFwiW1wiICsgYWxsRmllbGRzW2ldLmZpZWxkQ2FwdGlvbiArIFwiXVwiO1xuICAgICAgICAgICAgICBhbGxGaWVsZHNTdHlsZS5wdXNoKF9zZWxmLnJlbmRlcmVyRmllbGRTdHlsZShhbGxGaWVsZHNbaV0pKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG1vZGVsTm9kZURhdGEgPSB7XG4gICAgICAgICAgICAgIHRhYmxlSWQ6IHRhYmxlSWQsXG4gICAgICAgICAgICAgIGxvYzogXCIwIDBcIixcbiAgICAgICAgICAgICAgZmllbGRzOiBhbGxGaWVsZHNTdHlsZSxcbiAgICAgICAgICAgICAgdGFibGVEYXRhOiBzaW5nbGVUYWJsZSxcbiAgICAgICAgICAgICAgdGFibGVOYW1lOiBzaW5nbGVUYWJsZS50YWJsZU5hbWUsXG4gICAgICAgICAgICAgIHRhYmxlQ2FwdGlvbjogc2luZ2xlVGFibGUudGFibGVDYXB0aW9uLFxuICAgICAgICAgICAgICB0YWJsZURpc3BsYXlUZXh0OiBzaW5nbGVUYWJsZS50YWJsZU5hbWUgKyBcIltcIiArIHNpbmdsZVRhYmxlLnRhYmxlQ2FwdGlvbiArIFwiXVwiLFxuICAgICAgICAgICAgICBrZXk6IHNpbmdsZVRhYmxlLnRhYmxlSWRcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIF9zZWxmLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLnN0YXJ0VHJhbnNhY3Rpb24oXCJmbGFzaFwiKTtcblxuICAgICAgICAgICAgX3NlbGYudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuYWRkTm9kZURhdGEobW9kZWxOb2RlRGF0YSk7XG5cbiAgICAgICAgICAgIF9zZWxmLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLmNvbW1pdFRyYW5zYWN0aW9uKFwiZmxhc2hcIik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB0aGlzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+l55S75biD5Lit5bey57uP5a2Y5Zyo6KGoOlwiICsgdGFibGVEYXRhLnRleHQpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZGVsZXRlU2VsZWN0aW9uOiBmdW5jdGlvbiBkZWxldGVTZWxlY3Rpb24oKSB7XG4gICAgICBpZiAodGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbS5jb21tYW5kSGFuZGxlci5jYW5EZWxldGVTZWxlY3Rpb24oKSkge1xuICAgICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLmNvbW1hbmRIYW5kbGVyLmRlbGV0ZVNlbGVjdGlvbigpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSxcbiAgICBjb25uZWN0U2VsZWN0aW9uTm9kZTogZnVuY3Rpb24gY29ubmVjdFNlbGVjdGlvbk5vZGUoY29ubmVjdERhdGEpIHtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuc3RhcnRUcmFuc2FjdGlvbihcImZsYXNoXCIpO1xuICAgICAgdmFyIGxpbmVEYXRhID0ge1xuICAgICAgICBsaW5lSWQ6IFN0cmluZ1V0aWxpdHkuR3VpZCgpLFxuICAgICAgICBmcm9tOiBjb25uZWN0RGF0YS5mcm9tLnRhYmxlSWQsXG4gICAgICAgIHRvOiBjb25uZWN0RGF0YS50by50YWJsZUlkLFxuICAgICAgICBmcm9tVGV4dDogY29ubmVjdERhdGEuZnJvbS50ZXh0LFxuICAgICAgICB0b1RleHQ6IGNvbm5lY3REYXRhLnRvLnRleHRcbiAgICAgIH07XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLmFkZExpbmtEYXRhKGxpbmVEYXRhKTtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuY29tbWl0VHJhbnNhY3Rpb24oXCJmbGFzaFwiKTtcbiAgICB9LFxuICAgIHNhdmVNb2RlbFRvU2VydmVyOiBmdW5jdGlvbiBzYXZlTW9kZWxUb1NlcnZlcigpIHtcbiAgICAgIGlmICh0aGlzLnJlY29yZElkKSB7XG4gICAgICAgIHZhciBzZW5kRGF0YSA9IHtcbiAgICAgICAgICByZWNvcmRJZDogdGhpcy5yZWNvcmRJZCxcbiAgICAgICAgICByZWxhdGlvbkNvbnRlbnQ6IEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyh0aGlzLmdldERhdGFKc29uKCkpLFxuICAgICAgICAgIHJlbGF0aW9uRGlhZ3JhbUpzb246IHRoaXMuZ2V0RGlhZ3JhbUpzb24oKVxuICAgICAgICB9O1xuICAgICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2Uuc2F2ZURpYWdyYW0sIHNlbmREYXRhLCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfSwgdGhpcyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBpbml0RGlhZ3JhbTogZnVuY3Rpb24gaW5pdERpYWdyYW0oKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBpZiAod2luZG93LmdvU2FtcGxlcykgZ29TYW1wbGVzKCk7XG4gICAgICB2YXIgJCA9IGdvLkdyYXBoT2JqZWN0Lm1ha2U7XG4gICAgICB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtID0gJChnby5EaWFncmFtLCBcInRhYmxlUmVsYXRpb25EaWFncmFtRGl2XCIsIHtcbiAgICAgICAgYWxsb3dEZWxldGU6IHRydWUsXG4gICAgICAgIGFsbG93Q29weTogZmFsc2UsXG4gICAgICAgIGxheW91dDogJChnby5Gb3JjZURpcmVjdGVkTGF5b3V0LCB7XG4gICAgICAgICAgaXNPbmdvaW5nOiBmYWxzZVxuICAgICAgICB9KSxcbiAgICAgICAgXCJ1bmRvTWFuYWdlci5pc0VuYWJsZWRcIjogdHJ1ZVxuICAgICAgfSk7XG4gICAgICB2YXIgdGFibGVSZWxhdGlvbkRpYWdyYW0gPSB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtO1xuICAgICAgdmFyIGxpZ2h0Z3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMTogXCIjRTZFNkZBXCIsXG4gICAgICAgIDA6IFwiI0ZGRkFGMFwiXG4gICAgICB9KTtcbiAgICAgIHZhciBpdGVtVGVtcGwgPSAkKGdvLlBhbmVsLCBcIkhvcml6b250YWxcIiwgJChnby5TaGFwZSwge1xuICAgICAgICBkZXNpcmVkU2l6ZTogbmV3IGdvLlNpemUoMTAsIDEwKVxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJmaWd1cmVcIiwgXCJmaWd1cmVcIiksIG5ldyBnby5CaW5kaW5nKFwiZmlsbFwiLCBcImNvbG9yXCIpKSwgJChnby5UZXh0QmxvY2ssIHtcbiAgICAgICAgc3Ryb2tlOiBcIiMzMzMzMzNcIixcbiAgICAgICAgZm9udDogXCJib2xkIDE0cHggc2Fucy1zZXJpZlwiXG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcInRleHRcIiwgXCJkaXNwbGF5VGV4dFwiKSkpO1xuICAgICAgdGFibGVSZWxhdGlvbkRpYWdyYW0ubm9kZVRlbXBsYXRlID0gJChnby5Ob2RlLCBcIkF1dG9cIiwge1xuICAgICAgICBzZWxlY3Rpb25BZG9ybmVkOiB0cnVlLFxuICAgICAgICByZXNpemFibGU6IHRydWUsXG4gICAgICAgIGxheW91dENvbmRpdGlvbnM6IGdvLlBhcnQuTGF5b3V0U3RhbmRhcmQgJiB+Z28uUGFydC5MYXlvdXROb2RlU2l6ZWQsXG4gICAgICAgIGZyb21TcG90OiBnby5TcG90LkFsbFNpZGVzLFxuICAgICAgICB0b1Nwb3Q6IGdvLlNwb3QuQWxsU2lkZXMsXG4gICAgICAgIGlzU2hhZG93ZWQ6IHRydWUsXG4gICAgICAgIHNoYWRvd0NvbG9yOiBcIiNDNUMxQUFcIixcbiAgICAgICAgZG91YmxlQ2xpY2s6IGZ1bmN0aW9uIGRvdWJsZUNsaWNrKGUsIG5vZGUpIHtcbiAgICAgICAgICB2YXIgdXJsID0gQmFzZVV0aWxpdHkuQnVpbGRWaWV3KF9zZWxmLmFjSW50ZXJmYWNlLnRhYmxlVmlldywge1xuICAgICAgICAgICAgXCJvcFwiOiBcInZpZXdcIixcbiAgICAgICAgICAgIFwicmVjb3JkSWRcIjogbm9kZS5kYXRhLnRhYmxlSWRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkZyYW1lX09wZW5JZnJhbWVXaW5kb3cod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0lkLCB1cmwsIHtcbiAgICAgICAgICAgIHRpdGxlOiBcIuihqOiuvuiuoVwiXG4gICAgICAgICAgfSwgMCk7XG4gICAgICAgIH1cbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwibG9jYXRpb25cIiwgXCJsb2NcIiwgZ28uUG9pbnQucGFyc2UpLCBuZXcgZ28uQmluZGluZyhcImRlc2lyZWRTaXplXCIsIFwidmlzaWJsZVwiLCBmdW5jdGlvbiAodikge1xuICAgICAgICByZXR1cm4gbmV3IGdvLlNpemUoTmFOLCBOYU4pO1xuICAgICAgfSkub2ZPYmplY3QoXCJMSVNUXCIpLCAkKGdvLlNoYXBlLCBcIlJvdW5kZWRSZWN0YW5nbGVcIiwge1xuICAgICAgICBmaWxsOiBsaWdodGdyYWQsXG4gICAgICAgIHN0cm9rZTogXCIjNzU2ODc1XCIsXG4gICAgICAgIHN0cm9rZVdpZHRoOiAxXG4gICAgICB9KSwgJChnby5QYW5lbCwgXCJUYWJsZVwiLCB7XG4gICAgICAgIG1hcmdpbjogOCxcbiAgICAgICAgc3RyZXRjaDogZ28uR3JhcGhPYmplY3QuRmlsbFxuICAgICAgfSwgJChnby5Sb3dDb2x1bW5EZWZpbml0aW9uLCB7XG4gICAgICAgIHJvdzogMCxcbiAgICAgICAgc2l6aW5nOiBnby5Sb3dDb2x1bW5EZWZpbml0aW9uLk5vbmVcbiAgICAgIH0pLCAkKGdvLlRleHRCbG9jaywge1xuICAgICAgICByb3c6IDAsXG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5DZW50ZXIsXG4gICAgICAgIG1hcmdpbjogbmV3IGdvLk1hcmdpbigwLCAxNCwgMCwgMiksXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNnB4IHNhbnMtc2VyaWZcIlxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwidGFibGVEaXNwbGF5VGV4dFwiKSksICQoXCJQYW5lbEV4cGFuZGVyQnV0dG9uXCIsIFwiTElTVFwiLCB7XG4gICAgICAgIHJvdzogMCxcbiAgICAgICAgYWxpZ25tZW50OiBnby5TcG90LlRvcFJpZ2h0XG4gICAgICB9KSwgJChnby5QYW5lbCwgXCJWZXJ0aWNhbFwiLCB7XG4gICAgICAgIG5hbWU6IFwiTElTVFwiLFxuICAgICAgICByb3c6IDEsXG4gICAgICAgIHBhZGRpbmc6IDMsXG4gICAgICAgIGFsaWdubWVudDogZ28uU3BvdC5Ub3BMZWZ0LFxuICAgICAgICBkZWZhdWx0QWxpZ25tZW50OiBnby5TcG90LkxlZnQsXG4gICAgICAgIHN0cmV0Y2g6IGdvLkdyYXBoT2JqZWN0Lkhvcml6b250YWwsXG4gICAgICAgIGl0ZW1UZW1wbGF0ZTogaXRlbVRlbXBsXG4gICAgICB9LCBuZXcgZ28uQmluZGluZyhcIml0ZW1BcnJheVwiLCBcImZpZWxkc1wiKSkpKTtcbiAgICAgIHRhYmxlUmVsYXRpb25EaWFncmFtLmxpbmtUZW1wbGF0ZSA9ICQoZ28uTGluaywge1xuICAgICAgICBzZWxlY3Rpb25BZG9ybmVkOiB0cnVlLFxuICAgICAgICBsYXllck5hbWU6IFwiRm9yZWdyb3VuZFwiLFxuICAgICAgICByZXNoYXBhYmxlOiB0cnVlLFxuICAgICAgICByb3V0aW5nOiBnby5MaW5rLkF2b2lkc05vZGVzLFxuICAgICAgICBjb3JuZXI6IDUsXG4gICAgICAgIGN1cnZlOiBnby5MaW5rLkp1bXBPdmVyXG4gICAgICB9LCAkKGdvLlNoYXBlLCB7XG4gICAgICAgIHN0cm9rZTogXCIjMzAzQjQ1XCIsXG4gICAgICAgIHN0cm9rZVdpZHRoOiAxLjVcbiAgICAgIH0pLCAkKGdvLlRleHRCbG9jaywge1xuICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNHB4IHNhbnMtc2VyaWZcIixcbiAgICAgICAgc3Ryb2tlOiBcIiMxOTY3QjNcIixcbiAgICAgICAgc2VnbWVudEluZGV4OiAwLFxuICAgICAgICBzZWdtZW50T2Zmc2V0OiBuZXcgZ28uUG9pbnQoTmFOLCBOYU4pLFxuICAgICAgICBzZWdtZW50T3JpZW50YXRpb246IGdvLkxpbmsuT3JpZW50VXByaWdodFxuICAgICAgfSwgbmV3IGdvLkJpbmRpbmcoXCJ0ZXh0XCIsIFwiZnJvbVRleHRcIikpLCAkKGdvLlRleHRCbG9jaywge1xuICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIGZvbnQ6IFwiYm9sZCAxNHB4IHNhbnMtc2VyaWZcIixcbiAgICAgICAgc3Ryb2tlOiBcIiMxOTY3QjNcIixcbiAgICAgICAgc2VnbWVudEluZGV4OiAtMSxcbiAgICAgICAgc2VnbWVudE9mZnNldDogbmV3IGdvLlBvaW50KE5hTiwgTmFOKSxcbiAgICAgICAgc2VnbWVudE9yaWVudGF0aW9uOiBnby5MaW5rLk9yaWVudFVwcmlnaHRcbiAgICAgIH0sIG5ldyBnby5CaW5kaW5nKFwidGV4dFwiLCBcInRvVGV4dFwiKSkpO1xuICAgIH0sXG4gICAgbG9hZFJlbGF0aW9uRGV0YWlsRGF0YTogZnVuY3Rpb24gbG9hZFJlbGF0aW9uRGV0YWlsRGF0YSgpIHtcbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXRTaW5nbGVEaWFncmFtRGF0YSwge1xuICAgICAgICByZWNvcmRJZDogdGhpcy5yZWNvcmRJZCxcbiAgICAgICAgb3A6IFwiRWRpdFwiXG4gICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIGlmIChyZXN1bHQuZGF0YS5yZWxhdGlvbkNvbnRlbnQpIHtcbiAgICAgICAgICAgIHZhciBkYXRhSnNvbiA9IEpzb25VdGlsaXR5LlN0cmluZ1RvSnNvbihyZXN1bHQuZGF0YS5yZWxhdGlvbkNvbnRlbnQpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YUpzb24pO1xuXG4gICAgICAgICAgICBfc2VsZi5zZXREYXRhSnNvbihkYXRhSnNvbik7XG5cbiAgICAgICAgICAgIF9zZWxmLmNvbnZlcnRUb0Z1bGxKc29uKGRhdGFKc29uLCBfc2VsZi5kcmF3T2JqSW5EaWFncmFtKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBkcmF3T2JqSW5EaWFncmFtOiBmdW5jdGlvbiBkcmF3T2JqSW5EaWFncmFtKGZ1bGxKc29uKSB7XG4gICAgICB2YXIgJCA9IGdvLkdyYXBoT2JqZWN0Lm1ha2U7XG4gICAgICB2YXIgYmx1ZWdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1MCwgMTUwLCAyNTApXCIsXG4gICAgICAgIDAuNTogXCJyZ2IoODYsIDg2LCAxODYpXCIsXG4gICAgICAgIDE6IFwicmdiKDg2LCA4NiwgMTg2KVwiXG4gICAgICB9KTtcbiAgICAgIHZhciBncmVlbmdyYWQgPSAkKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1OCwgMjA5LCAxNTkpXCIsXG4gICAgICAgIDE6IFwicmdiKDY3LCAxMDEsIDU2KVwiXG4gICAgICB9KTtcbiAgICAgIHZhciByZWRncmFkID0gJChnby5CcnVzaCwgXCJMaW5lYXJcIiwge1xuICAgICAgICAwOiBcInJnYigyMDYsIDEwNiwgMTAwKVwiLFxuICAgICAgICAxOiBcInJnYigxODAsIDU2LCA1MClcIlxuICAgICAgfSk7XG4gICAgICB2YXIgeWVsbG93Z3JhZCA9ICQoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMDogXCJyZ2IoMjU0LCAyMjEsIDUwKVwiLFxuICAgICAgICAxOiBcInJnYigyNTQsIDE4MiwgNTApXCJcbiAgICAgIH0pO1xuICAgICAgdmFyIGxpbmtEYXRhQXJyYXkgPSBmdWxsSnNvbi5saW5lTGlzdDtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwgPSAkKGdvLkdyYXBoTGlua3NNb2RlbCwge1xuICAgICAgICBjb3BpZXNBcnJheXM6IHRydWUsXG4gICAgICAgIGNvcGllc0FycmF5T2JqZWN0czogdHJ1ZSxcbiAgICAgICAgbm9kZURhdGFBcnJheTogZnVsbEpzb24udGFibGVMaXN0XG4gICAgICB9KTtcblxuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBfc2VsZi50YWJsZVJlbGF0aW9uRGlhZ3JhbS5tb2RlbC5zdGFydFRyYW5zYWN0aW9uKFwiZmxhc2hcIik7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmdWxsSnNvbi5saW5lTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciBsaW5lRGF0YSA9IGZ1bGxKc29uLmxpbmVMaXN0W2ldO1xuXG4gICAgICAgICAgX3NlbGYudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuYWRkTGlua0RhdGEobGluZURhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgX3NlbGYudGFibGVSZWxhdGlvbkRpYWdyYW0ubW9kZWwuY29tbWl0VHJhbnNhY3Rpb24oXCJmbGFzaFwiKTtcbiAgICAgIH0sIDUwMCk7XG4gICAgfSxcbiAgICBjb252ZXJ0VG9GdWxsSnNvbjogZnVuY3Rpb24gY29udmVydFRvRnVsbEpzb24oc2ltcGxlSnNvbiwgZnVuYykge1xuICAgICAgdmFyIGZ1bGxKc29uID0gSnNvblV0aWxpdHkuQ2xvbmVTaW1wbGUoc2ltcGxlSnNvbik7XG4gICAgICB2YXIgdGFibGVJZHMgPSBuZXcgQXJyYXkoKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzaW1wbGVKc29uLnRhYmxlTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICB0YWJsZUlkcy5wdXNoKHNpbXBsZUpzb24udGFibGVMaXN0W2ldLnRhYmxlSWQpO1xuICAgICAgfVxuXG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVzRmllbGRzQnlUYWJsZUlkcywge1xuICAgICAgICBcInRhYmxlSWRzXCI6IHRhYmxlSWRzXG4gICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIHZhciBhbGxGaWVsZHMgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICB2YXIgYWxsVGFibGVzID0gcmVzdWx0LmV4S1ZEYXRhLlRhYmxlcztcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZnVsbEpzb24udGFibGVMaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgc2luZ2xlVGFibGVEYXRhID0gX3NlbGYuZ2V0U2luZ2xlVGFibGVEYXRhKGFsbFRhYmxlcywgZnVsbEpzb24udGFibGVMaXN0W2ldLnRhYmxlSWQpO1xuXG4gICAgICAgICAgICBmdWxsSnNvbi50YWJsZUxpc3RbaV0udGFibGVEYXRhID0gc2luZ2xlVGFibGVEYXRhO1xuICAgICAgICAgICAgZnVsbEpzb24udGFibGVMaXN0W2ldLnRhYmxlTmFtZSA9IHNpbmdsZVRhYmxlRGF0YS50YWJsZU5hbWU7XG4gICAgICAgICAgICBmdWxsSnNvbi50YWJsZUxpc3RbaV0udGFibGVDYXB0aW9uID0gc2luZ2xlVGFibGVEYXRhLnRhYmxlQ2FwdGlvbjtcbiAgICAgICAgICAgIGZ1bGxKc29uLnRhYmxlTGlzdFtpXS50YWJsZURpc3BsYXlUZXh0ID0gc2luZ2xlVGFibGVEYXRhLmRpc3BsYXlUZXh0O1xuXG4gICAgICAgICAgICB2YXIgc2luZ2xlVGFibGVGaWVsZHNEYXRhID0gX3NlbGYuZ2V0U2luZ2xlVGFibGVGaWVsZHNEYXRhKGFsbEZpZWxkcywgZnVsbEpzb24udGFibGVMaXN0W2ldLnRhYmxlSWQpO1xuXG4gICAgICAgICAgICBmdWxsSnNvbi50YWJsZUxpc3RbaV0uZmllbGRzID0gc2luZ2xlVGFibGVGaWVsZHNEYXRhO1xuICAgICAgICAgICAgZnVsbEpzb24udGFibGVMaXN0W2ldLmtleSA9IGZ1bGxKc29uLnRhYmxlTGlzdFtpXS50YWJsZUlkO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF9zZWxmLmRyYXdPYmpJbkRpYWdyYW0oZnVsbEpzb24pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgZ2V0U2luZ2xlVGFibGVEYXRhOiBmdW5jdGlvbiBnZXRTaW5nbGVUYWJsZURhdGEoYWxsVGFibGVzLCB0YWJsZUlkKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsbFRhYmxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYWxsVGFibGVzW2ldLnRhYmxlSWQgPT0gdGFibGVJZCkge1xuICAgICAgICAgIGFsbFRhYmxlc1tpXS5kaXNwbGF5VGV4dCA9IGFsbFRhYmxlc1tpXS50YWJsZU5hbWUgKyBcIltcIiArIGFsbFRhYmxlc1tpXS50YWJsZUNhcHRpb24gKyBcIl1cIjtcbiAgICAgICAgICByZXR1cm4gYWxsVGFibGVzW2ldO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG4gICAgZ2V0U2luZ2xlVGFibGVGaWVsZHNEYXRhOiBmdW5jdGlvbiBnZXRTaW5nbGVUYWJsZUZpZWxkc0RhdGEoYWxsRmllbGRzLCB0YWJsZUlkKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gW107XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxsRmllbGRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChhbGxGaWVsZHNbaV0uZmllbGRUYWJsZUlkID09IHRhYmxlSWQpIHtcbiAgICAgICAgICBhbGxGaWVsZHNbaV0uZGlzcGxheVRleHQgPSBhbGxGaWVsZHNbaV0uZmllbGROYW1lICsgXCJbXCIgKyBhbGxGaWVsZHNbaV0uZmllbGRDYXB0aW9uICsgXCJdXCI7XG4gICAgICAgICAgcmVzdWx0LnB1c2godGhpcy5yZW5kZXJlckZpZWxkU3R5bGUoYWxsRmllbGRzW2ldKSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIHJlbmRlcmVyRmllbGRTdHlsZTogZnVuY3Rpb24gcmVuZGVyZXJGaWVsZFN0eWxlKGZpZWxkKSB7XG4gICAgICBpZiAoZmllbGQuZmllbGRJc1BrID09IFwi5pivXCIpIHtcbiAgICAgICAgZmllbGQuY29sb3IgPSB0aGlzLmdldEtleUZpZWxkQnJ1c2goKTtcbiAgICAgICAgZmllbGQuZmlndXJlID0gXCJEZWNpc2lvblwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZmllbGQuY29sb3IgPSB0aGlzLmdldE5vckZpZWxkQnJ1c2goKTtcbiAgICAgICAgZmllbGQuZmlndXJlID0gXCJDdWJlMVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmllbGQ7XG4gICAgfSxcbiAgICBnZXRLZXlGaWVsZEJydXNoOiBmdW5jdGlvbiBnZXRLZXlGaWVsZEJydXNoKCkge1xuICAgICAgcmV0dXJuIGdvLkdyYXBoT2JqZWN0Lm1ha2UoZ28uQnJ1c2gsIFwiTGluZWFyXCIsIHtcbiAgICAgICAgMDogXCJyZ2IoMjU0LCAyMjEsIDUwKVwiLFxuICAgICAgICAxOiBcInJnYigyNTQsIDE4MiwgNTApXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0Tm9yRmllbGRCcnVzaDogZnVuY3Rpb24gZ2V0Tm9yRmllbGRCcnVzaCgpIHtcbiAgICAgIHJldHVybiBnby5HcmFwaE9iamVjdC5tYWtlKGdvLkJydXNoLCBcIkxpbmVhclwiLCB7XG4gICAgICAgIDA6IFwicmdiKDE1MCwgMTUwLCAyNTApXCIsXG4gICAgICAgIDAuNTogXCJyZ2IoODYsIDg2LCAxODYpXCIsXG4gICAgICAgIDE6IFwicmdiKDg2LCA4NiwgMTg2KVwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldERhdGFKc29uOiBmdW5jdGlvbiBnZXREYXRhSnNvbigpIHtcbiAgICAgIHZhciBkYXRhSnNvbiA9IHtcbiAgICAgICAgdGFibGVMaXN0OiBbXSxcbiAgICAgICAgbGluZUxpc3Q6IFtdXG4gICAgICB9O1xuICAgICAgdGhpcy50YWJsZVJlbGF0aW9uRGlhZ3JhbS5ub2Rlcy5lYWNoKGZ1bmN0aW9uIChwYXJ0KSB7XG4gICAgICAgIGlmIChwYXJ0IGluc3RhbmNlb2YgZ28uTm9kZSkge1xuICAgICAgICAgIGRhdGFKc29uLnRhYmxlTGlzdC5wdXNoKHtcbiAgICAgICAgICAgIHRhYmxlSWQ6IHBhcnQuZGF0YS50YWJsZUlkLFxuICAgICAgICAgICAgbG9jOiBwYXJ0LmxvY2F0aW9uLnggKyBcIiBcIiArIHBhcnQubG9jYXRpb24ueVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHBhcnQgaW5zdGFuY2VvZiBnby5MaW5rKSB7XG4gICAgICAgICAgYWxlcnQoXCJsaW5lXCIpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubGlua3MuZWFjaChmdW5jdGlvbiAocGFydCkge1xuICAgICAgICBpZiAocGFydCBpbnN0YW5jZW9mIGdvLkxpbmspIHtcbiAgICAgICAgICBkYXRhSnNvbi5saW5lTGlzdC5wdXNoKHtcbiAgICAgICAgICAgIGxpbmVJZDogcGFydC5kYXRhLmxpbmVJZCxcbiAgICAgICAgICAgIGZyb206IHBhcnQuZGF0YS5mcm9tLFxuICAgICAgICAgICAgdG86IHBhcnQuZGF0YS50byxcbiAgICAgICAgICAgIGZyb21UZXh0OiBwYXJ0LmRhdGEuZnJvbVRleHQsXG4gICAgICAgICAgICB0b1RleHQ6IHBhcnQuZGF0YS50b1RleHRcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZGF0YUpzb247XG4gICAgfSxcbiAgICBzZXREYXRhSnNvbjogZnVuY3Rpb24gc2V0RGF0YUpzb24oanNvbikge1xuICAgICAgdGhpcy5mb3JtYXRKc29uID0ganNvbjtcbiAgICB9LFxuICAgIGdldERpYWdyYW1Kc29uOiBmdW5jdGlvbiBnZXREaWFncmFtSnNvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm1vZGVsLnRvSnNvbigpO1xuICAgIH0sXG4gICAgYWxlcnREYXRhSnNvbjogZnVuY3Rpb24gYWxlcnREYXRhSnNvbigpIHtcbiAgICAgIHZhciBkYXRhSnNvbiA9IHRoaXMuZ2V0RGF0YUpzb24oKTtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRKc29uQ29kZShkYXRhSnNvbik7XG4gICAgfSxcbiAgICBhbGVydERpYWdyYW1Kc29uOiBmdW5jdGlvbiBhbGVydERpYWdyYW1Kc29uKCkge1xuICAgICAgdmFyIGRpYWdyYW1Kc29uID0gdGhpcy5nZXREaWFncmFtSnNvbigpO1xuICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydEpzb25Db2RlKGRpYWdyYW1Kc29uKTtcbiAgICB9LFxuICAgIHRhYmxlSXNFeGlzdEluRGlhZ3JhbTogZnVuY3Rpb24gdGFibGVJc0V4aXN0SW5EaWFncmFtKHRhYmxlSWQpIHtcbiAgICAgIHZhciByZXN1bHQgPSBmYWxzZTtcbiAgICAgIHRoaXMudGFibGVSZWxhdGlvbkRpYWdyYW0ubm9kZXMuZWFjaChmdW5jdGlvbiAocGFydCkge1xuICAgICAgICBpZiAocGFydCBpbnN0YW5jZW9mIGdvLk5vZGUpIHtcbiAgICAgICAgICBpZiAocGFydC5kYXRhLnRhYmxlSWQgPT0gdGFibGVJZCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIGRvd25Mb2FkTW9kZWxQTkc6IGZ1bmN0aW9uIGRvd25Mb2FkTW9kZWxQTkcoKSB7XG4gICAgICBmdW5jdGlvbiBteUNhbGxiYWNrKGJsb2IpIHtcbiAgICAgICAgdmFyIHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuICAgICAgICB2YXIgZmlsZW5hbWUgPSBcIm15QmxvYkZpbGUxLnBuZ1wiO1xuICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuICAgICAgICBhLnN0eWxlID0gXCJkaXNwbGF5OiBub25lXCI7XG4gICAgICAgIGEuaHJlZiA9IHVybDtcbiAgICAgICAgYS5kb3dubG9hZCA9IGZpbGVuYW1lO1xuXG4gICAgICAgIGlmICh3aW5kb3cubmF2aWdhdG9yLm1zU2F2ZUJsb2IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHdpbmRvdy5uYXZpZ2F0b3IubXNTYXZlQmxvYihibG9iLCBmaWxlbmFtZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTtcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBhLmNsaWNrKCk7XG4gICAgICAgICAgd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcbiAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdmFyIGJsb2IgPSB0aGlzLnRhYmxlUmVsYXRpb25EaWFncmFtLm1ha2VJbWFnZURhdGEoe1xuICAgICAgICBiYWNrZ3JvdW5kOiBcIndoaXRlXCIsXG4gICAgICAgIHJldHVyblR5cGU6IFwiYmxvYlwiLFxuICAgICAgICBzY2FsZTogMSxcbiAgICAgICAgY2FsbGJhY2s6IG15Q2FsbGJhY2tcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiByZWY9XFxcInJlbGF0aW9uQ29udGVudE91dGVyV3JhcFxcXCIgY2xhc3M9XFxcInRhYmxlLXJlbGF0aW9uLWNvbnRlbnQtb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ0YWJsZS1yZWxhdGlvbi1jb250ZW50LWhlYWRlci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJ0YWJsZS1yZWxhdGlvbi1kZXNjLW91dGVyLXdyYXBcXFwiIHYtaWY9XFxcImRpc3BsYXlEZXNjXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwidGFibGUtcmVsYXRpb24tZGVzY1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1OTA3XFx1NkNFOFxcdUZGMUF7e3JlbGF0aW9uLnJlbGF0aW9uRGVzY319XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInRhYmxlLXJlbGF0aW9uLW9wLWJ1dHRvbnMtb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInRhYmxlLXJlbGF0aW9uLW9wLWJ1dHRvbnMtaW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwIHNoYXBlPVxcXCJjaXJjbGVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcInNob3dTZWxlY3RUYWJsZURpYWxvZ1xcXCIgdHlwZT1cXFwic3VjY2Vzc1xcXCIgaWNvbj1cXFwibWQtYWRkXFxcIj48L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcInNob3dTZWxlY3RGaWVsZENvbm5lY3REaWFsb2dcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcImxvZ28tc3RlYW1cXFwiPlxcdThGREVcXHU2M0E1PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gZGlzYWJsZWQgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtcmV0dXJuLWxlZnRcXFwiPlxcdTVGMTVcXHU1MTY1PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gZGlzYWJsZWQgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtcXItc2Nhbm5lclxcXCI+XFx1NTE2OFxcdTVDNEY8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBkaXNhYmxlZCB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJtZC1naXQtY29tcGFyZVxcXCI+XFx1NTM4NlxcdTUzRjI8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImFsZXJ0RGF0YUpzb25cXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLWNvZGVcXFwiPlxcdTY1NzBcXHU2MzZFSnNvbjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiYWxlcnREaWFncmFtSnNvblxcXCIgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtY29kZS13b3JraW5nXFxcIj5cXHU1NkZFXFx1NUY2Mkpzb248L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImRvd25Mb2FkTW9kZWxQTkdcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLWNsb3VkLWRvd25sb2FkXFxcIj5cXHU0RTBCXFx1OEY3RDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwic2F2ZU1vZGVsVG9TZXJ2ZXJcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcImxvZ28taW5zdGFncmFtXFxcIj5cXHU0RkREXFx1NUI1ODwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiZGVsZXRlU2VsZWN0aW9uXFxcIiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBpY29uPVxcXCJtZC1jbG9zZVxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwidGFibGUtcmVsYXRpb24tY29udGVudC13cmFwXFxcIiBpZD1cXFwidGFibGVSZWxhdGlvbkRpYWdyYW1EaXZcXFwiPjwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPHNlbGVjdC1zaW5nbGUtdGFibGUtZGlhbG9nIHJlZj1cXFwic2VsZWN0U2luZ2xlVGFibGVEaWFsb2dcXFwiIEBvbi1zZWxlY3RlZC10YWJsZT1cXFwiYWRkVGFibGVUb0RpYWdyYW1cXFwiPjwvc2VsZWN0LXNpbmdsZS10YWJsZS1kaWFsb2c+XFxuICAgICAgICAgICAgICAgICAgICA8dGFibGUtcmVsYXRpb24tY29ubmVjdC10d28tdGFibGUtZGlhbG9nIHJlZj1cXFwidGFibGVSZWxhdGlvbkNvbm5lY3RUd29UYWJsZURpYWxvZ1xcXCIgQG9uLWNvbXBsZXRlZC1jb25uZWN0PVxcXCJjb25uZWN0U2VsZWN0aW9uTm9kZVxcXCI+PC90YWJsZS1yZWxhdGlvbi1jb25uZWN0LXR3by10YWJsZS1kaWFsb2c+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcInNlbGVjdC1kZWZhdWx0LXZhbHVlLWRpYWxvZ1wiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXRHcm91cFRyZWVEYXRhOiBcIi9SZXN0L0J1aWxkZXIvRW52VmFyaWFibGVHcm91cC9HZXRUcmVlRGF0YVwiLFxuICAgICAgICByZWxvYWRMaXN0RGF0YTogXCIvUmVzdC9CdWlsZGVyL0VudlZhcmlhYmxlL0dldExpc3REYXRhXCJcbiAgICAgIH0sXG4gICAgICBzZWxlY3RUeXBlOiBcIkNvbnN0XCIsXG4gICAgICBzZWxlY3RWYWx1ZTogXCJcIixcbiAgICAgIHNlbGVjdFRleHQ6IFwiXCIsXG4gICAgICBjb25zdFZhbHVlOiBcIlwiLFxuICAgICAgbGlzdEhlaWdodDogNDcwLFxuICAgICAgdHJlZToge1xuICAgICAgICB0cmVlSWRGaWVsZE5hbWU6IFwiZW52R3JvdXBJZFwiLFxuICAgICAgICB0cmVlT2JqOiBudWxsLFxuICAgICAgICB0cmVlU2VsZWN0ZWROb2RlOiBudWxsLFxuICAgICAgICB0cmVlU2V0dGluZzoge1xuICAgICAgICAgIGFzeW5jOiB7XG4gICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICB1cmw6IFwiXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcImVudkdyb3VwVGV4dFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2ltcGxlRGF0YToge1xuICAgICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICAgIGlkS2V5OiBcImVudkdyb3VwSWRcIixcbiAgICAgICAgICAgICAgcElkS2V5OiBcImVudkdyb3VwUGFyZW50SWRcIixcbiAgICAgICAgICAgICAgcm9vdElkOiAwXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjYWxsYmFjazoge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgICB2YXIgX3NlbGYgPSB0aGlzLmdldFpUcmVlT2JqKHRyZWVJZCkuX2hvc3Q7XG5cbiAgICAgICAgICAgICAgX3NlbGYudHJlZU5vZGVTZWxlY3RlZChldmVudCwgdHJlZUlkLCB0cmVlTm9kZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25Bc3luY1N1Y2Nlc3M6IGZ1bmN0aW9uIG9uQXN5bmNTdWNjZXNzKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlLCBtc2cpIHtcbiAgICAgICAgICAgICAgYXBwTGlzdC50cmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0YWJsZURhdGE6IFtdLFxuICAgICAgY29sdW1uc0NvbmZpZzogW3tcbiAgICAgICAgdGl0bGU6ICflj5jph4/lkI3np7AnLFxuICAgICAgICBrZXk6ICdlbnZWYXJUZXh0JyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICflj5jph4/lgLwnLFxuICAgICAgICBrZXk6ICdlbnZWYXJWYWx1ZScsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5pON5L2cJyxcbiAgICAgICAga2V5OiAnZW52VmFySWQnLFxuICAgICAgICB3aWR0aDogMTIwLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgcGFyYW1zKSB7XG4gICAgICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgICAgIFwiY2xhc3NcIjogXCJsaXN0LXJvdy1idXR0b24td3JhcFwiXG4gICAgICAgICAgfSwgW0xpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uU2VsZWN0ZWRCdXR0b24oaCwgcGFyYW1zLCBcImVudlZhcklkXCIsIF9zZWxmKV0pO1xuICAgICAgICB9XG4gICAgICB9XSxcbiAgICAgIHNlYXJjaENvbmRpdGlvbjoge1xuICAgICAgICBlbnZWYXJHcm91cElkOiB7XG4gICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgdHlwZTogU2VhcmNoVXRpbGl0eS5TZWFyY2hGaWVsZFR5cGUuU3RyaW5nVHlwZVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcGFnZVRvdGFsOiAwLFxuICAgICAgcGFnZVNpemU6IDEwMCxcbiAgICAgIHBhZ2VOdW06IDFcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMubG9hZERhdGEoKTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGJlZ2luU2VsZWN0OiBmdW5jdGlvbiBiZWdpblNlbGVjdChvbGREYXRhKSB7XG4gICAgICBjb25zb2xlLmxvZyhvbGREYXRhKTtcbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5zZWxlY3REZWZhdWx0VmFsdWVEaWFsb2dXcmFwO1xuICAgICAgdmFyIGhlaWdodCA9IDQ1MDtcbiAgICAgIERpYWxvZ1V0aWxpdHkuRGlhbG9nRWxlbU9iaihlbGVtLCB7XG4gICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICBoZWlnaHQ6IDY4MCxcbiAgICAgICAgd2lkdGg6IDk4MCxcbiAgICAgICAgdGl0bGU6IFwi6K6+572u6buY6K6k5YC8XCJcbiAgICAgIH0pO1xuICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktd2lkZ2V0LW92ZXJsYXlcIikuY3NzKFwiekluZGV4XCIsIDEwMTAwKTtcbiAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLWRpYWxvZ1wiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDEpO1xuXG4gICAgICBpZiAob2xkRGF0YSA9PSBudWxsKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0VmFsdWUgPSBcIlwiO1xuICAgICAgICB0aGlzLnNlbGVjdFRleHQgPSBcIlwiO1xuICAgICAgICB0aGlzLmNvbnN0VmFsdWUgPSBcIlwiO1xuICAgICAgfVxuXG4gICAgICA7XG4gICAgfSxcbiAgICBsb2FkRGF0YTogZnVuY3Rpb24gbG9hZERhdGEoKSB7XG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0R3JvdXBUcmVlRGF0YSwge30sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcblxuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBpZiAocmVzdWx0LmRhdGEgIT0gbnVsbCAmJiByZXN1bHQuZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5kYXRhLmxlbmd0aDsgaSsrKSB7fVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMudHJlZS50cmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoXCIjelRyZWVVTFwiKSwgdGhpcy50cmVlLnRyZWVTZXR0aW5nLCByZXN1bHQuZGF0YSk7XG4gICAgICAgICAgdGhpcy50cmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgICAgICAgIHRoaXMudHJlZS50cmVlT2JqLl9ob3N0ID0gdGhpcztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIGZ1bmN0aW9uICgpIHt9KTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBnZXRTZWxlY3RJbnN0YW5jZU5hbWU6IGZ1bmN0aW9uIGdldFNlbGVjdEluc3RhbmNlTmFtZSgpIHtcbiAgICAgIHJldHVybiBCYXNlVXRpbGl0eS5HZXRVcmxQYXJhVmFsdWUoXCJpbnN0YW5jZU5hbWVcIik7XG4gICAgfSxcbiAgICBzZWxlY3RDb21wbGV0ZTogZnVuY3Rpb24gc2VsZWN0Q29tcGxldGUoKSB7XG4gICAgICB2YXIgcmVzdWx0ID0ge307XG5cbiAgICAgIGlmICh0aGlzLnNlbGVjdFR5cGUgPT0gXCJDb25zdFwiKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbnN0VmFsdWUgPT0gXCJcIikge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCBcIuivt+iuvue9ruW4uOmHj+m7mOiupOWAvO+8gVwiLCBudWxsKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXN1bHQuVHlwZSA9IFwiQ29uc3RcIjtcbiAgICAgICAgcmVzdWx0LlZhbHVlID0gdGhpcy5jb25zdFZhbHVlO1xuICAgICAgICByZXN1bHQuVGV4dCA9IHRoaXMuY29uc3RWYWx1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdC5UeXBlID0gXCJFbnZWYXJcIjtcbiAgICAgICAgcmVzdWx0LlZhbHVlID0gdGhpcy5zZWxlY3RWYWx1ZTtcbiAgICAgICAgcmVzdWx0LlRleHQgPSB0aGlzLnNlbGVjdFRleHQ7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLWRlZmF1bHQtdmFsdWUnLCByZXN1bHQpO1xuICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgIH0sXG4gICAgY2xlYXJDb21wbGV0ZTogZnVuY3Rpb24gY2xlYXJDb21wbGV0ZSgpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLWRlZmF1bHQtdmFsdWUnLCBudWxsKTtcbiAgICAgIHRoaXMuaGFuZGxlQ2xvc2UoKTtcbiAgICB9LFxuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnMuc2VsZWN0RGVmYXVsdFZhbHVlRGlhbG9nV3JhcCk7XG4gICAgfSxcbiAgICBzZWxlY3Rpb25DaGFuZ2U6IGZ1bmN0aW9uIHNlbGVjdGlvbkNoYW5nZSgpIHt9LFxuICAgIGNsZWFyU2VhcmNoQ29uZGl0aW9uOiBmdW5jdGlvbiBjbGVhclNlYXJjaENvbmRpdGlvbigpIHtcbiAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLnNlYXJjaENvbmRpdGlvbikge1xuICAgICAgICB0aGlzLnNlYXJjaENvbmRpdGlvbltrZXldLnZhbHVlID0gXCJcIjtcbiAgICAgIH1cbiAgICB9LFxuICAgIHRyZWVOb2RlU2VsZWN0ZWQ6IGZ1bmN0aW9uIHRyZWVOb2RlU2VsZWN0ZWQoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgIHRoaXMucGFnZU51bSA9IDE7XG4gICAgICB0aGlzLmNsZWFyU2VhcmNoQ29uZGl0aW9uKCk7XG4gICAgICB0aGlzLnNlYXJjaENvbmRpdGlvbi5lbnZWYXJHcm91cElkLnZhbHVlID0gdHJlZU5vZGVbdGhpcy50cmVlLnRyZWVJZEZpZWxkTmFtZV07XG4gICAgICB0aGlzLnJlbG9hZERhdGEoKTtcbiAgICB9LFxuICAgIHJlbG9hZERhdGE6IGZ1bmN0aW9uIHJlbG9hZERhdGEoKSB7XG4gICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUJpbmREYXRhQnlTZWFyY2goe1xuICAgICAgICB1cmw6IHRoaXMuYWNJbnRlcmZhY2UucmVsb2FkTGlzdERhdGEsXG4gICAgICAgIHBhZ2VOdW06IHRoaXMucGFnZU51bSxcbiAgICAgICAgcGFnZVNpemU6IHRoaXMucGFnZVNpemUsXG4gICAgICAgIHNlYXJjaENvbmRpdGlvbjogdGhpcy5zZWFyY2hDb25kaXRpb24sXG4gICAgICAgIHBhZ2VBcHBPYmo6IHRoaXMsXG4gICAgICAgIHRhYmxlTGlzdDogdGhpcyxcbiAgICAgICAgaWRGaWVsZDogXCJlbnZWYXJJZFwiLFxuICAgICAgICBhdXRvU2VsZWN0ZWRPbGRSb3dzOiB0cnVlLFxuICAgICAgICBzdWNjZXNzRnVuYzogbnVsbCxcbiAgICAgICAgbG9hZERpY3Q6IGZhbHNlLFxuICAgICAgICBjdXN0UGFyYXM6IHt9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHNlbGVjdGVkOiBmdW5jdGlvbiBzZWxlY3RlZChpZCwgcGFyYW1zKSB7XG4gICAgICBjb25zb2xlLmxvZyhwYXJhbXMpO1xuICAgICAgdGhpcy5zZWxlY3RWYWx1ZSA9IHBhcmFtcy5yb3cuZW52VmFyVmFsdWU7XG4gICAgICB0aGlzLnNlbGVjdFRleHQgPSBwYXJhbXMucm93LmVudlZhclRleHQ7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2ICByZWY9XFxcInNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ1dyYXBcXFwiIGNsYXNzPVxcXCJnZW5lcmFsLWVkaXQtcGFnZS13cmFwXFxcIiBzdHlsZT1cXFwiZGlzcGxheTogbm9uZTttYXJnaW4tdG9wOiAwcHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPHRhYnMgOnZhbHVlPVxcXCJzZWxlY3RUeXBlXFxcIiB2LW1vZGVsPVxcXCJzZWxlY3RUeXBlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGFiLXBhbmUgbGFiZWw9XFxcIlxcdTVFMzhcXHU5MUNGXFxcIiBuYW1lPVxcXCJDb25zdFxcXCIgPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1mb3JtIDpsYWJlbC13aWR0aD1cXFwiODBcXFwiIHN0eWxlPVxcXCJ3aWR0aDogODAlO21hcmdpbjogNTBweCBhdXRvIGF1dG87XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtLWl0ZW0gbGFiZWw9XFxcIlxcdTVFMzhcXHU5MUNGXFx1RkYxQVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiY29uc3RWYWx1ZVxcXCI+PC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1mb3JtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFiLXBhbmU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRhYi1wYW5lIGxhYmVsPVxcXCJcXHU3M0FGXFx1NTg4M1xcdTUzRDhcXHU5MUNGXFxcIiBuYW1lPVxcXCJFbnZWYXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJoZWlnaHQ6IDQ1cHg7Ym9yZGVyLWJvdHRvbTogZG90dGVkIDFweCAjOGE4YThhO21hcmdpbi1ib3R0b206IDEwcHg7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiByaWdodDtwYWRkaW5nOiA4cHg7Ym9yZGVyLXJhZGl1czogOHB4O2NvbG9yOm9yYW5nZXJlZDtib3JkZXI6IHNvbGlkIDFweCAjYWRiZWQ4O1xcXCI+XFx1NURGMlxcdTdFQ0ZcXHU5MDA5XFx1NjJFOVxcdUZGMUF7e3NlbGVjdFRleHR9fTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcIndpZHRoOiAzMCU7ZmxvYXQ6IGxlZnQ7aGVpZ2h0OiA1MTRweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiaW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgaWQ9XFxcInpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcIndpZHRoOiA2OCU7ZmxvYXQ6IGxlZnQ7aGVpZ2h0OiA1MTRweFxcXCIgY2xhc3M9XFxcIml2LWxpc3QtcGFnZS13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS10YWJsZSA6aGVpZ2h0PVxcXCJsaXN0SGVpZ2h0XFxcIiBzdHJpcGUgYm9yZGVyIDpjb2x1bW5zPVxcXCJjb2x1bW5zQ29uZmlnXFxcIiA6ZGF0YT1cXFwidGFibGVEYXRhXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVxcXCJpdi1saXN0LXRhYmxlXFxcIiA6aGlnaGxpZ2h0LXJvdz1cXFwidHJ1ZVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAb24tc2VsZWN0aW9uLWNoYW5nZT1cXFwic2VsZWN0aW9uQ2hhbmdlXFxcIj48L2ktdGFibGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90YWItcGFuZT5cXG4gICAgICAgICAgICAgICAgICAgIDwvdGFicz5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1vdXRlci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24taW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJzZWxlY3RDb21wbGV0ZSgpXFxcIj4gXFx1Nzg2RSBcXHU4QkE0IDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJjbGVhckNvbXBsZXRlKClcXFwiPiBcXHU2RTA1IFxcdTdBN0EgPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImhhbmRsZUNsb3NlKClcXFwiPlxcdTUxNzMgXFx1OTVFRDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTtcbnZhciBEZWZhdWx0VmFsdWVVdGlsaXR5ID0ge1xuICBmb3JtYXRUZXh0OiBmdW5jdGlvbiBmb3JtYXRUZXh0KHR5cGUsIHRleHQpIHtcbiAgICBpZiAodHlwZSA9PSBcIkNvbnN0XCIpIHtcbiAgICAgIHJldHVybiBcIumdmeaAgeWAvDrjgJBcIiArIHRleHQgKyBcIuOAkVwiO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PSBcIkVudlZhclwiKSB7XG4gICAgICByZXR1cm4gXCLnjq/looPlj5jph48644CQXCIgKyB0ZXh0ICsgXCLjgJFcIjtcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT0gXCJcIikge1xuICAgICAgcmV0dXJuIFwi44CQ5peg44CRXCI7XG4gICAgfVxuXG4gICAgcmV0dXJuIFwi5pyq55+l57G75Z6LXCIgKyB0ZXh0O1xuICB9XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwic2VsZWN0LXNpbmdsZS10YWJsZS1kaWFsb2dcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXRUYWJsZURhdGFVcmw6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EYXRhQmFzZS9UYWJsZS9HZXRUYWJsZXNGb3JaVHJlZU5vZGVMaXN0XCJcbiAgICAgIH0sXG4gICAgICBqc0VkaXRvckluc3RhbmNlOiBudWxsLFxuICAgICAgdGFibGVUcmVlOiB7XG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIHJhZGlvVHlwZTogXCJhbGxcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwidGV4dFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2ltcGxlRGF0YToge1xuICAgICAgICAgICAgICBlbmFibGU6IHRydWUsXG4gICAgICAgICAgICAgIGlkS2V5OiBcImlkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJwYXJlbnRJZFwiLFxuICAgICAgICAgICAgICByb290UElkOiBcIi0xXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNhbGxiYWNrOiB7XG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7XG4gICAgICAgICAgICAgIHZhciBfc2VsZiA9IHRoaXMuZ2V0WlRyZWVPYmoodHJlZUlkKS5faG9zdDtcblxuICAgICAgICAgICAgICBpZiAodHJlZU5vZGUubm9kZVR5cGVOYW1lID09IFwiVGFibGVcIikge1xuICAgICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkVGFibGUoZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkVGFibGUoZXZlbnQsIHRyZWVJZCwgbnVsbCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRyZWVEYXRhOiBudWxsLFxuICAgICAgICBjbGlja05vZGU6IG51bGxcbiAgICAgIH0sXG4gICAgICBzZWxlY3RlZFRhYmxlRGF0YTogbnVsbFxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnMuc2VsZWN0VGFibGVNb2RlbERpYWxvZ1dyYXApO1xuICAgIH0sXG4gICAgYmVnaW5TZWxlY3RUYWJsZTogZnVuY3Rpb24gYmVnaW5TZWxlY3RUYWJsZSgpIHtcbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5zZWxlY3RUYWJsZU1vZGVsRGlhbG9nV3JhcDtcbiAgICAgIHRoaXMuZ2V0VGFibGVEYXRhSW5pdFRyZWUoKTtcbiAgICAgIHZhciBoZWlnaHQgPSA0NTA7XG5cbiAgICAgIGlmIChQYWdlU3R5bGVVdGlsaXR5LkdldFBhZ2VIZWlnaHQoKSA+IDU1MCkge1xuICAgICAgICBoZWlnaHQgPSA2MDA7XG4gICAgICB9XG5cbiAgICAgIERpYWxvZ1V0aWxpdHkuRGlhbG9nRWxlbU9iaihlbGVtLCB7XG4gICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICB3aWR0aDogNTcwLFxuICAgICAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICAgICAgdGl0bGU6IFwi6YCJ5oup6KGoXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0VGFibGVEYXRhSW5pdFRyZWU6IGZ1bmN0aW9uIGdldFRhYmxlRGF0YUluaXRUcmVlKCkge1xuICAgICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFjSW50ZXJmYWNlLmdldFRhYmxlRGF0YVVybCwge30sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgX3NlbGYudGFibGVUcmVlLnRyZWVEYXRhID0gcmVzdWx0LmRhdGE7XG5cbiAgICAgICAgICBfc2VsZi4kcmVmcy50YWJsZVpUcmVlVUwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzZWxlY3QtdGFibGUtc2luZ2xlLWNvbXAtXCIgKyBTdHJpbmdVdGlsaXR5Lkd1aWQoKSk7XG5cbiAgICAgICAgICBfc2VsZi50YWJsZVRyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKF9zZWxmLiRyZWZzLnRhYmxlWlRyZWVVTCksIF9zZWxmLnRhYmxlVHJlZS50cmVlU2V0dGluZywgX3NlbGYudGFibGVUcmVlLnRyZWVEYXRhKTtcblxuICAgICAgICAgIF9zZWxmLnRhYmxlVHJlZS50cmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcblxuICAgICAgICAgIF9zZWxmLnRhYmxlVHJlZS50cmVlT2JqLl9ob3N0ID0gX3NlbGY7XG4gICAgICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKF9zZWxmLnRhYmxlVHJlZS50cmVlT2JqLCBfc2VsZi4kcmVmcy50eHRfdGFibGVfc2VhcmNoX3RleHQuJHJlZnMuaW5wdXQsIG51bGwsIHRydWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgc2VsZWN0ZWRUYWJsZTogZnVuY3Rpb24gc2VsZWN0ZWRUYWJsZShldmVudCwgdHJlZUlkLCB0YWJsZURhdGEpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWRUYWJsZURhdGEgPSB0YWJsZURhdGE7XG4gICAgfSxcbiAgICBjb21wbGV0ZWQ6IGZ1bmN0aW9uIGNvbXBsZXRlZCgpIHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGVkVGFibGVEYXRhKSB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLXRhYmxlJywgdGhpcy5zZWxlY3RlZFRhYmxlRGF0YSk7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2xvc2UoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+36YCJ5oup6KGoIVwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjxkaXYgcmVmPVxcXCJzZWxlY3RUYWJsZU1vZGVsRGlhbG9nV3JhcFxcXCIgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC13cmFwIGdlbmVyYWwtZWRpdC1wYWdlLXdyYXBcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBub25lXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC1zb3VyY2Utd3JhcCBjMS1zZWxlY3QtbW9kZWwtc291cmNlLWhhcy1idXR0b25zLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cXFwiaW5wdXRfYm9yZGVyX2JvdHRvbVxcXCIgcmVmPVxcXCJ0eHRfdGFibGVfc2VhcmNoX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVcXHU4ODY4XFx1NTQwRFxcdTYyMTZcXHU4MDA1XFx1NjgwN1xcdTk4OThcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJpbm5lci13cmFwIGRpdi1jdXN0b20tc2Nyb2xsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIHJlZj1cXFwidGFibGVaVHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1vdXRlci13cmFwXFxcIiBzdHlsZT1cXFwiYm90dG9tOiAxMnB4O3JpZ2h0OiAxMnB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24taW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJjb21wbGV0ZWQoKVxcXCIgaWNvbj1cXFwibWQtY2hlY2ttYXJrXFxcIj5cXHU3ODZFXFx1OEJBNDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJoYW5kbGVDbG9zZSgpXFxcIiBpY29uPVxcXCJtZC1jbG9zZVxcXCI+XFx1NTE3M1xcdTk1RUQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcInNlbGVjdC1zaW5nbGUtd2ViZm9ybS1kaWFsb2dcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXRUYWJsZURhdGFVcmw6IFwiL1Jlc3QvQnVpbGRlci9Gb3JtL0dldFdlYkZvcm1Gb3JaVHJlZU5vZGVMaXN0XCJcbiAgICAgIH0sXG4gICAgICBqc0VkaXRvckluc3RhbmNlOiBudWxsLFxuICAgICAgdHJlZToge1xuICAgICAgICB0cmVlT2JqOiBudWxsLFxuICAgICAgICB0cmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBub2NoZWNrSW5oZXJpdDogZmFsc2UsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGFyZW50SWRcIixcbiAgICAgICAgICAgICAgcm9vdFBJZDogXCItMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjYWxsYmFjazoge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgICB2YXIgX3NlbGYgPSB0aGlzLmdldFpUcmVlT2JqKHRyZWVJZCkuX2hvc3Q7XG5cbiAgICAgICAgICAgICAgaWYgKHRyZWVOb2RlLm5vZGVUeXBlTmFtZSA9PSBcIldlYkZvcm1cIikge1xuICAgICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRm9ybShldmVudCwgdHJlZUlkLCB0cmVlTm9kZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRyZWVEYXRhOiBudWxsXG4gICAgICB9LFxuICAgICAgc2VsZWN0ZWRGb3JtRGF0YTogbnVsbCxcbiAgICAgIG9sZFNlbGVjdGVkRm9ybUlkOiBcIlwiXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5DbG9zZURpYWxvZ0VsZW0odGhpcy4kcmVmcy5zZWxlY3RNb2RlbERpYWxvZ1dyYXApO1xuICAgIH0sXG4gICAgYmVnaW5TZWxlY3RGb3JtOiBmdW5jdGlvbiBiZWdpblNlbGVjdEZvcm0oZm9ybUlkKSB7XG4gICAgICB2YXIgZWxlbSA9IHRoaXMuJHJlZnMuc2VsZWN0TW9kZWxEaWFsb2dXcmFwO1xuICAgICAgdGhpcy5nZXRGb3JtRGF0YUluaXRUcmVlKCk7XG4gICAgICB0aGlzLm9sZFNlbGVjdGVkRm9ybUlkID0gZm9ybUlkO1xuICAgICAgdmFyIGhlaWdodCA9IDUwMDtcbiAgICAgIERpYWxvZ1V0aWxpdHkuRGlhbG9nRWxlbU9iaihlbGVtLCB7XG4gICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICB3aWR0aDogNTcwLFxuICAgICAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICAgICAgdGl0bGU6IFwi6YCJ5oup56qX5L2TXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0Rm9ybURhdGFJbml0VHJlZTogZnVuY3Rpb24gZ2V0Rm9ybURhdGFJbml0VHJlZSgpIHtcbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXRUYWJsZURhdGFVcmwsIHt9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIF9zZWxmLnRyZWUudHJlZURhdGEgPSByZXN1bHQuZGF0YTtcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3NlbGYudHJlZS50cmVlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKF9zZWxmLnRyZWUudHJlZURhdGFbaV0ubm9kZVR5cGVOYW1lID09IFwiV2ViRm9ybVwiKSB7XG4gICAgICAgICAgICAgIF9zZWxmLnRyZWUudHJlZURhdGFbaV0uaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvdGFibGUucG5nXCI7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKF9zZWxmLnRyZWUudHJlZURhdGFbaV0ubm9kZVR5cGVOYW1lID09IFwiTW9kdWxlXCIpIHtcbiAgICAgICAgICAgICAgX3NlbGYudHJlZS50cmVlRGF0YVtpXS5pY29uID0gQmFzZVV0aWxpdHkuR2V0Um9vdFBhdGgoKSArIFwiL1RoZW1lcy9QbmcxNlgxNi9mb2xkZXItdGFibGUucG5nXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3NlbGYuJHJlZnMuZm9ybVpUcmVlVUwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzZWxlY3QtZm9ybS1zaW5nbGUtY29tcC1cIiArIFN0cmluZ1V0aWxpdHkuR3VpZCgpKTtcblxuICAgICAgICAgIF9zZWxmLnRyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKF9zZWxmLiRyZWZzLmZvcm1aVHJlZVVMKSwgX3NlbGYudHJlZS50cmVlU2V0dGluZywgX3NlbGYudHJlZS50cmVlRGF0YSk7XG5cbiAgICAgICAgICBfc2VsZi50cmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuXG4gICAgICAgICAgX3NlbGYudHJlZS50cmVlT2JqLl9ob3N0ID0gX3NlbGY7XG4gICAgICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKF9zZWxmLnRyZWUudHJlZU9iaiwgX3NlbGYuJHJlZnMudHh0X2Zvcm1fc2VhcmNoX3RleHQuJHJlZnMuaW5wdXQsIG51bGwsIHRydWUpO1xuXG4gICAgICAgICAgaWYgKF9zZWxmLm9sZFNlbGVjdGVkRm9ybUlkICE9IG51bGwgJiYgX3NlbGYub2xkU2VsZWN0ZWRGb3JtSWQgIT0gXCJcIikge1xuICAgICAgICAgICAgdmFyIHNlbGVjdGVkTm9kZSA9IF9zZWxmLnRyZWUudHJlZU9iai5nZXROb2RlQnlQYXJhbShcImlkXCIsIF9zZWxmLm9sZFNlbGVjdGVkRm9ybUlkKTtcblxuICAgICAgICAgICAgX3NlbGYudHJlZS50cmVlT2JqLnNlbGVjdE5vZGUoc2VsZWN0ZWROb2RlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBzZWxlY3RlZEZvcm06IGZ1bmN0aW9uIHNlbGVjdGVkRm9ybShldmVudCwgdHJlZUlkLCBmb3JtRGF0YSkge1xuICAgICAgdGhpcy5zZWxlY3RlZEZvcm1EYXRhID0gZm9ybURhdGE7XG4gICAgfSxcbiAgICBjb21wbGV0ZWQ6IGZ1bmN0aW9uIGNvbXBsZXRlZCgpIHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGVkRm9ybURhdGEpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHtcbiAgICAgICAgICBmb3JtTW9kdWxlSWQ6IHRoaXMuc2VsZWN0ZWRGb3JtRGF0YS5hdHRyNCxcbiAgICAgICAgICBmb3JtTW9kdWxlTmFtZTogdGhpcy5zZWxlY3RlZEZvcm1EYXRhLmF0dHIzLFxuICAgICAgICAgIGZvcm1JZDogdGhpcy5zZWxlY3RlZEZvcm1EYXRhLmlkLFxuICAgICAgICAgIGZvcm1OYW1lOiB0aGlzLnNlbGVjdGVkRm9ybURhdGEuYXR0cjEsXG4gICAgICAgICAgZm9ybUNvZGU6IHRoaXMuc2VsZWN0ZWRGb3JtRGF0YS5hdHRyMlxuICAgICAgICB9O1xuICAgICAgICB0aGlzLiRlbWl0KCdvbi1zZWxlY3RlZC1mb3JtJywgcmVzdWx0KTtcbiAgICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLor7fpgInmi6nnqpfkvZMhXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiByZWY9XFxcInNlbGVjdE1vZGVsRGlhbG9nV3JhcFxcXCIgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC13cmFwIGdlbmVyYWwtZWRpdC1wYWdlLXdyYXBcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBub25lO1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJjMS1zZWxlY3QtbW9kZWwtc291cmNlLXdyYXAgYzEtc2VsZWN0LW1vZGVsLXNvdXJjZS1oYXMtYnV0dG9ucy13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XFxcImlucHV0X2JvcmRlcl9ib3R0b21cXFwiIHJlZj1cXFwidHh0X2Zvcm1fc2VhcmNoX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVcXHU4ODY4XFx1NTM1NVxcdTU0MERcXHU3OUYwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiaW5uZXItd3JhcCBkaXYtY3VzdG9tLXNjcm9sbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCByZWY9XFxcImZvcm1aVHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1vdXRlci13cmFwXFxcIiBzdHlsZT1cXFwiYm90dG9tOiAxMnB4O3JpZ2h0OiAxMnB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24taW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJjb21wbGV0ZWQoKVxcXCIgaWNvbj1cXFwibWQtY2hlY2ttYXJrXFxcIj5cXHU3ODZFXFx1OEJBNDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJoYW5kbGVDbG9zZSgpXFxcIiBpY29uPVxcXCJtZC1jbG9zZVxcXCI+XFx1NTE3M1xcdTk1RUQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcInNlbGVjdC12YWxpZGF0ZS1ydWxlLWRpYWxvZ1wiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgdmFyIF9zZWxmID0gdGhpcztcblxuICAgIHJldHVybiB7XG4gICAgICBzZWxlY3RWYWxpZGF0ZVR5cGU6IFwiTm9FbXB0eVwiLFxuICAgICAgcnVsZVBhcmFzOiB7XG4gICAgICAgIG1zZzogXCLlrZfmrrVcIixcbiAgICAgICAgbnVtTGVuZ3RoOiA0LFxuICAgICAgICBkZWNpbWFsTGVuZ3RoOiAwLFxuICAgICAgICBqc01ldGhvZE5hbWU6IFwiXCIsXG4gICAgICAgIHJlZ3VsYXJUZXh0OiBcIlwiLFxuICAgICAgICByZWd1bGFyTXNnOiBcIlwiXG4gICAgICB9LFxuICAgICAgYWRkZWRWYWxpZGF0ZVJ1bGU6IFtdLFxuICAgICAgdmFsaWRhdGVDb2x1bW5zQ29uZmlnOiBbe1xuICAgICAgICB0aXRsZTogJ+exu+WeiycsXG4gICAgICAgIGtleTogJ3ZhbGlkYXRlVHlwZScsXG4gICAgICAgIHdpZHRoOiAxNTAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5Y+C5pWwJyxcbiAgICAgICAga2V5OiAndmFsaWRhdGVQYXJhcycsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5Yig6ZmkJyxcbiAgICAgICAga2V5OiAndmFsaWRhdGVJZCcsXG4gICAgICAgIHdpZHRoOiAxMjAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICByZXR1cm4gaCgnZGl2Jywge1xuICAgICAgICAgICAgXCJjbGFzc1wiOiBcImxpc3Qtcm93LWJ1dHRvbi13cmFwXCJcbiAgICAgICAgICB9LCBbaCgnZGl2Jywge1xuICAgICAgICAgICAgXCJjbGFzc1wiOiBcImxpc3Qtcm93LWJ1dHRvbiBkZWxcIixcbiAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHtcbiAgICAgICAgICAgICAgICBfc2VsZi5kZWxWYWxpZGF0ZShwYXJhbXMucm93W1widmFsaWRhdGVJZFwiXSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV0pO1xuICAgICAgICB9XG4gICAgICB9XVxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGJlZ2luU2VsZWN0OiBmdW5jdGlvbiBiZWdpblNlbGVjdChvbGREYXRhKSB7XG4gICAgICB2YXIgZWxlbSA9IHRoaXMuJHJlZnMuc2VsZWN0VmFsaWRhdGVSdWxlRGlhbG9nV3JhcDtcbiAgICAgIHZhciBoZWlnaHQgPSA0NTA7XG4gICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgaGVpZ2h0OiA2ODAsXG4gICAgICAgIHdpZHRoOiA5ODAsXG4gICAgICAgIHRpdGxlOiBcIuiuvue9rumqjOivgeinhOWImVwiXG4gICAgICB9KTtcbiAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLXdpZGdldC1vdmVybGF5XCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMCk7XG4gICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS1kaWFsb2dcIikuY3NzKFwiekluZGV4XCIsIDEwMTAxKTtcbiAgICAgIHRoaXMucnVsZVBhcmFzLm1zZyA9IFwi5a2X5q61XCI7XG4gICAgICB0aGlzLnJ1bGVQYXJhcy5udW1MZW5ndGggPSA0O1xuICAgICAgdGhpcy5ydWxlUGFyYXMuZGVjaW1hbExlbmd0aCA9IDA7XG4gICAgICB0aGlzLnJ1bGVQYXJhcy5qc01ldGhvZE5hbWUgPSBcIlwiO1xuICAgICAgdGhpcy5ydWxlUGFyYXMucmVndWxhclRleHQgPSBcIlwiO1xuICAgICAgdGhpcy5ydWxlUGFyYXMucmVndWxhck1zZyA9IFwiXCI7XG4gICAgICB0aGlzLmFkZGVkVmFsaWRhdGVSdWxlID0gW107XG4gICAgICB0aGlzLmJpbmRPbGRTZWxlY3RlZFZhbHVlKG9sZERhdGEpO1xuICAgIH0sXG4gICAgYmluZE9sZFNlbGVjdGVkVmFsdWU6IGZ1bmN0aW9uIGJpbmRPbGRTZWxlY3RlZFZhbHVlKG9sZERhdGEpIHtcbiAgICAgIHZhciBvbGRTZWxlY3RlZFZhbHVlID0gb2xkRGF0YTtcblxuICAgICAgaWYgKG9sZFNlbGVjdGVkVmFsdWUucnVsZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLmFkZGVkVmFsaWRhdGVSdWxlID0gb2xkU2VsZWN0ZWRWYWx1ZS5ydWxlcztcbiAgICAgICAgdGhpcy5tc2cgPSBvbGRTZWxlY3RlZFZhbHVlLm1zZztcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldFNlbGVjdEluc3RhbmNlTmFtZTogZnVuY3Rpb24gZ2V0U2VsZWN0SW5zdGFuY2VOYW1lKCkge1xuICAgICAgcmV0dXJuIEJhc2VVdGlsaXR5LkdldFVybFBhcmFWYWx1ZShcImluc3RhbmNlTmFtZVwiKTtcbiAgICB9LFxuICAgIHNlbGVjdENvbXBsZXRlOiBmdW5jdGlvbiBzZWxlY3RDb21wbGV0ZSgpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0aGlzLmFkZGVkVmFsaWRhdGVSdWxlO1xuXG4gICAgICBpZiAodGhpcy5hZGRlZFZhbGlkYXRlUnVsZS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSB7XG4gICAgICAgICAgbXNnOiB0aGlzLnJ1bGVQYXJhcy5tc2csXG4gICAgICAgICAgcnVsZXM6IHRoaXMuYWRkZWRWYWxpZGF0ZVJ1bGVcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy4kZW1pdCgnb24tc2VsZWN0ZWQtdmFsaWRhdGUtcnVsZScsIEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKHJlc3VsdCkpO1xuICAgICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNsZWFyQ29tcGxldGUoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGNsZWFyQ29tcGxldGU6IGZ1bmN0aW9uIGNsZWFyQ29tcGxldGUoKSB7XG4gICAgICB0aGlzLiRlbWl0KCdvbi1jbGVhci12YWxpZGF0ZS1ydWxlJyk7XG4gICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgfSxcbiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UoKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LkNsb3NlRGlhbG9nRWxlbSh0aGlzLiRyZWZzLnNlbGVjdFZhbGlkYXRlUnVsZURpYWxvZ1dyYXApO1xuICAgIH0sXG4gICAgYWRkVmFsaWRhdGVSdWxlOiBmdW5jdGlvbiBhZGRWYWxpZGF0ZVJ1bGUoKSB7XG4gICAgICB2YXIgdmFsaWRhdGVQYXJhcyA9IFwiXCI7XG5cbiAgICAgIGlmICh0aGlzLnNlbGVjdFZhbGlkYXRlVHlwZSA9PSBcIk51bWJlclwiKSB7XG4gICAgICAgIHZhbGlkYXRlUGFyYXMgPSBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcoe1xuICAgICAgICAgIG51bUxlbmd0aDogdGhpcy5ydWxlUGFyYXMubnVtTGVuZ3RoLFxuICAgICAgICAgIGRlY2ltYWxMZW5ndGg6IHRoaXMucnVsZVBhcmFzLmRlY2ltYWxMZW5ndGhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZWN0VmFsaWRhdGVUeXBlID09IFwiUmVndWxhclwiKSB7XG4gICAgICAgIHZhbGlkYXRlUGFyYXMgPSBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcoe1xuICAgICAgICAgIHJlZ3VsYXJUZXh0OiB0aGlzLnJ1bGVQYXJhcy5yZWd1bGFyVGV4dCxcbiAgICAgICAgICByZWd1bGFyTXNnOiB0aGlzLnJ1bGVQYXJhcy5yZWd1bGFyTXNnXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdFZhbGlkYXRlVHlwZSA9PSBcIkpzTWV0aG9kXCIpIHtcbiAgICAgICAgdmFsaWRhdGVQYXJhcyA9IEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyh7XG4gICAgICAgICAganNNZXRob2ROYW1lOiB0aGlzLnJ1bGVQYXJhcy5qc01ldGhvZE5hbWVcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBuZXdWYWxpZGF0ZVJ1bGUgPSB7XG4gICAgICAgIFwidmFsaWRhdGVJZFwiOiBTdHJpbmdVdGlsaXR5LlRpbWVzdGFtcCgpLFxuICAgICAgICBcInZhbGlkYXRlVHlwZVwiOiB0aGlzLnNlbGVjdFZhbGlkYXRlVHlwZSxcbiAgICAgICAgXCJ2YWxpZGF0ZVBhcmFzXCI6IHZhbGlkYXRlUGFyYXNcbiAgICAgIH07XG4gICAgICB0aGlzLmFkZGVkVmFsaWRhdGVSdWxlLnB1c2gobmV3VmFsaWRhdGVSdWxlKTtcbiAgICB9LFxuICAgIGRlbFZhbGlkYXRlOiBmdW5jdGlvbiBkZWxWYWxpZGF0ZSh2YWxpZGF0ZUlkKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYWRkZWRWYWxpZGF0ZVJ1bGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHRoaXMuYWRkZWRWYWxpZGF0ZVJ1bGVbaV0udmFsaWRhdGVJZCA9PSB2YWxpZGF0ZUlkKSB7XG4gICAgICAgICAgdGhpcy5hZGRlZFZhbGlkYXRlUnVsZS5zcGxpY2UoaSwgMSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjxkaXYgcmVmPVxcXCJzZWxlY3RWYWxpZGF0ZVJ1bGVEaWFsb2dXcmFwXFxcIiB2LWNsb2FrIGNsYXNzPVxcXCJnZW5lcmFsLWVkaXQtcGFnZS13cmFwXFxcIiBzdHlsZT1cXFwiZGlzcGxheTogbm9uZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8Y2FyZCBzdHlsZT1cXFwibWFyZ2luLXRvcDogMTBweFxcXCIgPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIHNsb3Q9XFxcInRpdGxlXFxcIj5cXHU4QkJFXFx1N0Y2RVxcdTlBOENcXHU4QkMxXFx1ODlDNFxcdTUyMTk8L3A+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIm1hcmdpbjogYXV0b1xcXCIgdi1tb2RlbD1cXFwic2VsZWN0VmFsaWRhdGVUeXBlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiTm9FbXB0eVxcXCI+XFx1NEUwRFxcdTRFM0FcXHU3QTdBPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiTnVtYmVyXFxcIj5cXHU2NTcwXFx1NUI1NzwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIk1vYmlsZVxcXCI+XFx1NjI0QlxcdTY3M0E8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJEYXRlXFxcIj5cXHU2NUU1XFx1NjcxRjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIlRpbWVcXFwiPlxcdTY1RjZcXHU5NUY0PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiRGF0ZVRpbWVcXFwiPlxcdTY1RTVcXHU2NzFGXFx1NjVGNlxcdTk1RjQ8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJFTWFpbFxcXCI+XFx1OTBBRVxcdTRFRjY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJJRENhcmRcXFwiPlxcdThFQUJcXHU0RUZEXFx1OEJDMTwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIlVSTFxcXCI+VVJMPC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiRU5Db2RlXFxcIj5cXHU4MkYxXFx1NjU4NzwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIlNpbXBsZUNvZGVcXFwiPlxcdTcyNzlcXHU2QjhBXFx1NUI1N1xcdTdCMjY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJSZWd1bGFyXFxcIj5cXHU2QjYzXFx1NTIxOVxcdTg4NjhcXHU4RkJFXFx1NUYwRjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIkpzTWV0aG9kXFxcIj5KU1xcdTY1QjlcXHU2Q0Q1PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIHNoYXBlPVxcXCJjaXJjbGVcXFwiIGljb249XFxcIm1kLWFkZFxcXCIgc3R5bGU9XFxcIm1hcmdpbi1sZWZ0OiAxNXB4O2N1cnNvcjogcG9pbnRlclxcXCIgQGNsaWNrPVxcXCJhZGRWYWxpZGF0ZVJ1bGVcXFwiPjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdmlkZXIgb3JpZW50YXRpb249XFxcImxlZnRcXFwiIDpkYXNoZWQ9XFxcInRydWVcXFwiIHN0eWxlPVxcXCJmb250LXNpemU6IDEycHhcXFwiPlxcdTUzQzJcXHU2NTcwXFx1OEJCRVxcdTdGNkU8L2RpdmlkZXI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1cXHU2NTcwXFx1NUI1N1xcdTdDN0JcXHU1NzhCXFx1NTNDMlxcdTY1NzBcXHU4QkJFXFx1N0Y2RS0tPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9XFxcInNlbGVjdFZhbGlkYXRlVHlwZT09J051bWJlcidcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktZm9ybSA6bGFiZWwtd2lkdGg9XFxcIjgwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybS1pdGVtIGxhYmVsPVxcXCJcXHU5NTdGXFx1NUVBNlxcdUZGMUFcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cm93PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjEwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQtbnVtYmVyIDptYXg9XFxcIjEwXFxcIiA6bWluPVxcXCIxXFxcIiB2LW1vZGVsPVxcXCJydWxlUGFyYXMubnVtTGVuZ3RoXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgc3R5bGU9XFxcIndpZHRoOiA4MCVcXFwiPjwvaW5wdXQtbnVtYmVyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCI0XFxcIiBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyXFxcIj5cXHU1QzBGXFx1NjU3MFxcdTRGNERcXHU2NTcwXFx1RkYxQTwvaS1jb2w+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMTBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dC1udW1iZXIgOm1heD1cXFwiMTBcXFwiIDptaW49XFxcIjBcXFwiIHYtbW9kZWw9XFxcInJ1bGVQYXJhcy5kZWNpbWFsTGVuZ3RoXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgc3R5bGU9XFxcIndpZHRoOiA4MCVcXFwiPjwvaW5wdXQtbnVtYmVyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yb3c+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktZm9ybT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1cXHU2QjYzXFx1NTIxOVxcdTg4NjhcXHU4RkJFXFx1NUYwRlxcdTdDN0JcXHU1NzhCXFx1NTNDMlxcdTY1NzBcXHU4QkJFXFx1N0Y2RS0tPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9XFxcInNlbGVjdFZhbGlkYXRlVHlwZT09J1JlZ3VsYXInXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWZvcm0gOmxhYmVsLXdpZHRoPVxcXCI4MFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0taXRlbSBsYWJlbD1cXFwiXFx1ODg2OFxcdThGQkVcXHU1RjBGXFx1RkYxQVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyb3c+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1jb2wgc3Bhbj1cXFwiMTBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiRW50ZXIgc29tZXRoaW5nLi4uXFxcIiB2LW1vZGVsPVxcXCJydWxlUGFyYXMucmVndWxhclRleHRcXFwiIHN0eWxlPVxcXCJ3aWR0aDogODAlXFxcIj48L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktY29sPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktY29sIHNwYW49XFxcIjRcXFwiIHN0eWxlPVxcXCJ0ZXh0LWFsaWduOiBjZW50ZXJcXFwiPlxcdTYzRDBcXHU3OTNBXFx1NEZFMVxcdTYwNkZcXHVGRjFBPC9pLWNvbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWNvbCBzcGFuPVxcXCIxMFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0taXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJFbnRlciBzb21ldGhpbmcuLi5cXFwiIHYtbW9kZWw9XFxcInJ1bGVQYXJhcy5yZWd1bGFyTXNnXFxcIiBzdHlsZT1cXFwid2lkdGg6IDgwJVxcXCI+PC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWNvbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yb3c+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtLWl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktZm9ybT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1KU1xcdTY1QjlcXHU2Q0Q1XFx1N0M3QlxcdTU3OEJcXHU1M0MyXFx1NjU3MFxcdThCQkVcXHU3RjZFLS0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj1cXFwic2VsZWN0VmFsaWRhdGVUeXBlPT0nSnNNZXRob2QnXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWZvcm0gOmxhYmVsLXdpZHRoPVxcXCI4MFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0taXRlbSBsYWJlbD1cXFwiXFx1NjVCOVxcdTZDRDVcXHU1NDBEXFx1RkYxQVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiRW50ZXIgc29tZXRoaW5nLi4uXFxcIiB2LW1vZGVsPVxcXCJydWxlUGFyYXMuanNNZXRob2ROYW1lXFxcIiBzdHlsZT1cXFwid2lkdGg6IDkwJVxcXCI+PC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWZvcm0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9jYXJkPlxcbiAgICAgICAgICAgICAgICAgICAgPGNhcmQgc3R5bGU9XFxcIm1hcmdpbi10b3A6IDEwcHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIHNsb3Q9XFxcInRpdGxlXFxcIj5cXHU1REYyXFx1NkRGQlxcdTUyQTBcXHU4OUM0XFx1NTIxOTwvcD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2aWRlciBvcmllbnRhdGlvbj1cXFwibGVmdFxcXCIgOmRhc2hlZD1cXFwidHJ1ZVxcXCIgc3R5bGU9XFxcImZvbnQtc2l6ZTogMTJweDttYXJnaW4tdG9wOiAwcHg7bWFyZ2luLWJvdHRvbTogNnB4XFxcIj5cXHU2M0QwXFx1NzkzQVxcdTRGRTFcXHU2MDZGPC9kaXZpZGVyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1mb3JtIDpsYWJlbC13aWR0aD1cXFwiMFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybS1pdGVtIGxhYmVsPVxcXCJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0ICBwbGFjZWhvbGRlcj1cXFwiXFx1OEJGN1xcdThGOTNcXHU1MTY1XFx1NjNEMFxcdTc5M0FcXHU0RkUxXFx1NjA2Ri4uLlxcXCIgIHYtbW9kZWw9XFxcInJ1bGVQYXJhcy5tc2dcXFwiPjwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybS1pdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktZm9ybT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOiAxMHB4O292ZXJmbG93OiBhdXRvXFxcIiBjbGFzcz1cXFwiaXYtbGlzdC1wYWdlLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2aWRlciBvcmllbnRhdGlvbj1cXFwibGVmdFxcXCIgOmRhc2hlZD1cXFwidHJ1ZVxcXCIgc3R5bGU9XFxcImZvbnQtc2l6ZTogMTJweDttYXJnaW4tdG9wOiAwcHg7bWFyZ2luLWJvdHRvbTogNnB4XFxcIj5cXHU5QThDXFx1OEJDMVxcdTg5QzRcXHU1MjE5PC9kaXZpZGVyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS10YWJsZSBib3JkZXIgOmNvbHVtbnM9XFxcInZhbGlkYXRlQ29sdW1uc0NvbmZpZ1xcXCIgOmRhdGE9XFxcImFkZGVkVmFsaWRhdGVSdWxlXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiaXYtbGlzdC10YWJsZVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIG5vLWRhdGEtdGV4dD1cXFwiXFx1OEJGN1xcdTZERkJcXHU1MkEwXFx1OUE4Q1xcdThCQzFcXHU4OUM0XFx1NTIxOVxcXCIgOmhlaWdodD1cXFwiMTMwXFxcIj48L2ktdGFibGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2NhcmQ+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24tb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLWlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwic2VsZWN0Q29tcGxldGUoKVxcXCI+IFxcdTc4NkUgXFx1OEJBNCA8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwiY2xlYXJDb21wbGV0ZSgpXFxcIj4gXFx1NkUwNSBcXHU3QTdBIDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJoYW5kbGVDbG9zZSgpXFxcIj5cXHU1MTczIFxcdTk1RUQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJ0YWJsZS1yZWxhdGlvbi1jb25uZWN0LXR3by10YWJsZS1kaWFsb2dcIiwge1xuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBhY0ludGVyZmFjZToge1xuICAgICAgICBnZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGUvR2V0VGFibGVzRmllbGRzQnlUYWJsZUlkc1wiXG4gICAgICB9LFxuICAgICAgZnJvbVRhYmxlRmllbGQ6IHtcbiAgICAgICAgZmllbGREYXRhOiBbXSxcbiAgICAgICAgY29sdW1uc0NvbmZpZzogW3tcbiAgICAgICAgICB0aXRsZTogJ+Wtl+auteWQjeensCcsXG4gICAgICAgICAga2V5OiAnZmllbGROYW1lJyxcbiAgICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgdGl0bGU6ICfmoIfpopgnLFxuICAgICAgICAgIGtleTogJ2ZpZWxkQ2FwdGlvbicsXG4gICAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICB0b1RhYmxlRmllbGQ6IHtcbiAgICAgICAgZmllbGREYXRhOiBbXSxcbiAgICAgICAgY29sdW1uc0NvbmZpZzogW3tcbiAgICAgICAgICB0aXRsZTogJ+Wtl+auteWQjeensCcsXG4gICAgICAgICAga2V5OiAnZmllbGROYW1lJyxcbiAgICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgdGl0bGU6ICfmoIfpopgnLFxuICAgICAgICAgIGtleTogJ2ZpZWxkQ2FwdGlvbicsXG4gICAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICBkaWFsb2dIZWlnaHQ6IDAsXG4gICAgICByZXN1bHREYXRhOiB7XG4gICAgICAgIGZyb206IHtcbiAgICAgICAgICB0YWJsZUlkOiBcIlwiLFxuICAgICAgICAgIHRleHQ6IFwiXCJcbiAgICAgICAgfSxcbiAgICAgICAgdG86IHtcbiAgICAgICAgICB0YWJsZUlkOiBcIlwiLFxuICAgICAgICAgIHRleHQ6IFwiXCJcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnMuY29ubmVjdFRhYmxlRmllbGRNb2RlbERpYWxvZ1dyYXApO1xuICAgIH0sXG4gICAgY29tcGxldGVkOiBmdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG4gICAgICBpZiAodGhpcy5yZXN1bHREYXRhLmZyb20udGV4dCAhPSBcIlwiICYmIHRoaXMucmVzdWx0RGF0YS50by50ZXh0ICE9IFwiXCIpIHtcbiAgICAgICAgdGhpcy4kZW1pdCgnb24tY29tcGxldGVkLWNvbm5lY3QnLCB0aGlzLnJlc3VsdERhdGEpO1xuICAgICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuivt+iuvue9ruWFs+iBlOWtl+autVwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldEZpZWxkc0FuZEJpbmQ6IGZ1bmN0aW9uIGdldEZpZWxkc0FuZEJpbmQoZnJvbVRhYmxlSWQsIHRvVGFibGVJZCkge1xuICAgICAgdmFyIHRhYmxlSWRzID0gW2Zyb21UYWJsZUlkLCB0b1RhYmxlSWRdO1xuXG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVzRmllbGRzQnlUYWJsZUlkcywge1xuICAgICAgICBcInRhYmxlSWRzXCI6IHRhYmxlSWRzXG4gICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIHZhciBhbGxGaWVsZHMgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICB2YXIgYWxsVGFibGVzID0gcmVzdWx0LmV4S1ZEYXRhLlRhYmxlcztcblxuICAgICAgICAgIHZhciBmcm9tVGFibGVGaWVsZHMgPSBfc2VsZi5nZXRTaW5nbGVUYWJsZUZpZWxkc0RhdGEoYWxsRmllbGRzLCBmcm9tVGFibGVJZCk7XG5cbiAgICAgICAgICB2YXIgdG9UYWJsZUZpZWxkcyA9IF9zZWxmLmdldFNpbmdsZVRhYmxlRmllbGRzRGF0YShhbGxGaWVsZHMsIHRvVGFibGVJZCk7XG5cbiAgICAgICAgICBfc2VsZi5mcm9tVGFibGVGaWVsZC5maWVsZERhdGEgPSBmcm9tVGFibGVGaWVsZHM7XG4gICAgICAgICAgX3NlbGYudG9UYWJsZUZpZWxkLmZpZWxkRGF0YSA9IHRvVGFibGVGaWVsZHM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBiZWdpblNlbGVjdENvbm5lY3Q6IGZ1bmN0aW9uIGJlZ2luU2VsZWN0Q29ubmVjdChmcm9tVGFibGVJZCwgdG9UYWJsZUlkKSB7XG4gICAgICB2YXIgZWxlbSA9IHRoaXMuJHJlZnMuY29ubmVjdFRhYmxlRmllbGRNb2RlbERpYWxvZ1dyYXA7XG4gICAgICB0aGlzLnJlc3VsdERhdGEuZnJvbS50YWJsZUlkID0gZnJvbVRhYmxlSWQ7XG4gICAgICB0aGlzLnJlc3VsdERhdGEudG8udGFibGVJZCA9IHRvVGFibGVJZDtcbiAgICAgIHRoaXMucmVzdWx0RGF0YS5mcm9tLnRleHQgPSBcIlwiO1xuICAgICAgdGhpcy5yZXN1bHREYXRhLnRvLnRleHQgPSBcIlwiO1xuICAgICAgdGhpcy5nZXRGaWVsZHNBbmRCaW5kKGZyb21UYWJsZUlkLCB0b1RhYmxlSWQpO1xuICAgICAgdmFyIGhlaWdodCA9IDQ1MDtcblxuICAgICAgaWYgKFBhZ2VTdHlsZVV0aWxpdHkuR2V0UGFnZUhlaWdodCgpID4gNTUwKSB7XG4gICAgICAgIGhlaWdodCA9IDYwMDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5kaWFsb2dIZWlnaHQgPSBoZWlnaHQ7XG4gICAgICBEaWFsb2dVdGlsaXR5LkRpYWxvZ0VsZW1PYmooZWxlbSwge1xuICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgd2lkdGg6IDg3MCxcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICAgIHRpdGxlOiBcIuiuvue9ruWFs+iBlFwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldFNpbmdsZVRhYmxlRmllbGRzRGF0YTogZnVuY3Rpb24gZ2V0U2luZ2xlVGFibGVGaWVsZHNEYXRhKGFsbEZpZWxkcywgdGFibGVJZCkge1xuICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsbEZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYWxsRmllbGRzW2ldLmZpZWxkVGFibGVJZCA9PSB0YWJsZUlkKSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2goYWxsRmllbGRzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gICAgc2VsZWN0ZWRGcm9tRmllbGQ6IGZ1bmN0aW9uIHNlbGVjdGVkRnJvbUZpZWxkKHJvdywgaW5kZXgpIHtcbiAgICAgIHRoaXMucmVzdWx0RGF0YS5mcm9tLnRleHQgPSByb3cuZmllbGROYW1lICsgXCJbMV1cIjtcbiAgICB9LFxuICAgIHNlbGVjdGVkVG9GaWVsZDogZnVuY3Rpb24gc2VsZWN0ZWRUb0ZpZWxkKHJvdywgaW5kZXgpIHtcbiAgICAgIHRoaXMucmVzdWx0RGF0YS50by50ZXh0ID0gcm93LmZpZWxkTmFtZSArIFwiWzAuLk5dXCI7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IHJlZj1cXFwiY29ubmVjdFRhYmxlRmllbGRNb2RlbERpYWxvZ1dyYXBcXFwiIGNsYXNzPVxcXCJjMS1zZWxlY3QtbW9kZWwtd3JhcCBnZW5lcmFsLWVkaXQtcGFnZS13cmFwXFxcIiBzdHlsZT1cXFwiZGlzcGxheTogbm9uZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJjMS1zZWxlY3QtbW9kZWwtc291cmNlLXdyYXAgYzEtc2VsZWN0LW1vZGVsLXNvdXJjZS1oYXMtYnV0dG9ucy13cmFwXFxcIiBzdHlsZT1cXFwicGFkZGluZzogMTBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiZmxvYXQ6IGxlZnQ7d2lkdGg6IDQ5JTtoZWlnaHQ6IDEwMCU7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwicmVzdWx0RGF0YS5mcm9tLnRleHRcXFwiIHN1ZmZpeD1cXFwibWQtZG9uZS1hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU1RjAwXFx1NTlDQlxcdTUxNzNcXHU4MDU0XFx1NUI1N1xcdTZCQjVcXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOiAxMHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS10YWJsZSBAb24tcm93LWNsaWNrPVxcXCJzZWxlY3RlZEZyb21GaWVsZFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIDpoZWlnaHQ9XFxcImRpYWxvZ0hlaWdodC0xODBcXFwiIHN0cmlwZSBib3JkZXIgOmNvbHVtbnM9XFxcImZyb21UYWJsZUZpZWxkLmNvbHVtbnNDb25maWdcXFwiIDpkYXRhPVxcXCJmcm9tVGFibGVGaWVsZC5maWVsZERhdGFcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiaXYtbGlzdC10YWJsZVxcXCIgOmhpZ2hsaWdodC1yb3c9XFxcInRydWVcXFwiPjwvaS10YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDpyaWdodDt3aWR0aDogNDklO2hlaWdodDogMTAwJTtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJyZXN1bHREYXRhLnRvLnRleHRcXFwiIHN1ZmZpeD1cXFwibWQtZG9uZS1hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU3RUQzXFx1Njc1RlxcdTUxNzNcXHU4MDU0XFx1NUI1N1xcdTZCQjVcXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOiAxMHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS10YWJsZSBAb24tcm93LWNsaWNrPVxcXCJzZWxlY3RlZFRvRmllbGRcXFwiIHNpemU9XFxcInNtYWxsXFxcIiA6aGVpZ2h0PVxcXCJkaWFsb2dIZWlnaHQtMTgwXFxcIiBzdHJpcGUgYm9yZGVyIDpjb2x1bW5zPVxcXCJ0b1RhYmxlRmllbGQuY29sdW1uc0NvbmZpZ1xcXCIgOmRhdGE9XFxcInRvVGFibGVGaWVsZC5maWVsZERhdGFcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiaXYtbGlzdC10YWJsZVxcXCIgOmhpZ2hsaWdodC1yb3c9XFxcInRydWVcXFwiPjwvaS10YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLW91dGVyLXdyYXBcXFwiIHN0eWxlPVxcXCJib3R0b206IDEycHg7cmlnaHQ6IDEycHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcImNvbXBsZXRlZCgpXFxcIiBpY29uPVxcXCJtZC1jaGVja21hcmtcXFwiPlxcdTc4NkVcXHU4QkE0PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImhhbmRsZUNsb3NlKClcXFwiIGljb249XFxcIm1kLWNsb3NlXFxcIj5cXHU1MTczXFx1OTVFRDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwiZGItdGFibGUtcmVsYXRpb24tY29tcFwiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldFRhYmxlc0RhdGFVcmw6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EYXRhQmFzZS9UYWJsZS9HZXRUYWJsZXNGb3JaVHJlZU5vZGVMaXN0XCIsXG4gICAgICAgIGdldFRhYmxlRmllbGRzVXJsOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvRGF0YUJhc2UvVGFibGUvR2V0VGFibGVGaWVsZHNCeVRhYmxlSWRcIlxuICAgICAgfSxcbiAgICAgIHJlbGF0aW9uVGFibGVUcmVlOiB7XG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRhYmxlVHJlZVNldHRpbmc6IHtcbiAgICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBkYmxDbGlja0V4cGFuZDogZmFsc2UsXG4gICAgICAgICAgICBzaG93TGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDc3M6IHtcbiAgICAgICAgICAgICAgJ2NvbG9yJzogJ2JsYWNrJyxcbiAgICAgICAgICAgICAgJ2ZvbnQtd2VpZ2h0JzogJ25vcm1hbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGFyZW50SWRcIixcbiAgICAgICAgICAgICAgcm9vdFBJZDogXCItMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjYWxsYmFjazoge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgICB2YXIgX3NlbGYgPSB3aW5kb3cuX2RidGFibGVyZWxhdGlvbmNvbXA7XG5cbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWRSZWxhdGlvblRhYmxlTm9kZSh0cmVlTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB0YWJsZVRyZWVSb290RGF0YToge1xuICAgICAgICAgIGlkOiBcIi0xXCIsXG4gICAgICAgICAgdGV4dDogXCLmlbDmja7lhbPogZRcIixcbiAgICAgICAgICBwYXJlbnRJZDogXCJcIixcbiAgICAgICAgICBub2RlVHlwZU5hbWU6IFwi5qC56IqC54K5XCIsXG4gICAgICAgICAgaWNvbjogXCIuLi8uLi8uLi9UaGVtZXMvUG5nMTZYMTYvY29pbnNfYWRkLnBuZ1wiLFxuICAgICAgICAgIF9ub2RlRXhUeXBlOiBcInJvb3RcIixcbiAgICAgICAgICB0YWJsZUlkOiBcIi0xXCJcbiAgICAgICAgfSxcbiAgICAgICAgY3VycmVudFNlbGVjdGVkTm9kZTogbnVsbFxuICAgICAgfSxcbiAgICAgIHJlbGF0aW9uVGFibGVFZGl0b3JWaWV3OiB7XG4gICAgICAgIGlzU2hvd1RhYmxlRWRpdERldGFpbDogZmFsc2UsXG4gICAgICAgIGlzU3ViRWRpdFRyOiBmYWxzZSxcbiAgICAgICAgaXNNYWluRWRpdFRyOiBmYWxzZSxcbiAgICAgICAgc2VsUEtEYXRhOiBbXSxcbiAgICAgICAgc2VsU2VsZktleURhdGE6IFtdLFxuICAgICAgICBzZWxGb3JlaWduS2V5RGF0YTogW11cbiAgICAgIH0sXG4gICAgICBlbXB0eUVkaXRvckRhdGE6IHtcbiAgICAgICAgaWQ6IFwiXCIsXG4gICAgICAgIHBhcmVudElkOiBcIlwiLFxuICAgICAgICBzaW5nbGVOYW1lOiBcIlwiLFxuICAgICAgICBwa0ZpZWxkTmFtZTogXCJcIixcbiAgICAgICAgZGVzYzogXCJcIixcbiAgICAgICAgc2VsZktleUZpZWxkTmFtZTogXCJcIixcbiAgICAgICAgb3V0ZXJLZXlGaWVsZE5hbWU6IFwiXCIsXG4gICAgICAgIHJlbGF0aW9uVHlwZTogXCIxVG9OXCIsXG4gICAgICAgIGlzU2F2ZTogXCJ0cnVlXCIsXG4gICAgICAgIGNvbmRpdGlvbjogXCJcIixcbiAgICAgICAgdGFibGVJZDogXCJcIixcbiAgICAgICAgdGFibGVOYW1lOiBcIlwiLFxuICAgICAgICB0YWJsZUNhcHRpb246IFwiXCJcbiAgICAgIH0sXG4gICAgICBjdXJyZW50RWRpdG9yRGF0YToge1xuICAgICAgICBpZDogXCJcIixcbiAgICAgICAgcGFyZW50SWQ6IFwiXCIsXG4gICAgICAgIHNpbmdsZU5hbWU6IFwiXCIsXG4gICAgICAgIHBrRmllbGROYW1lOiBcIlwiLFxuICAgICAgICBkZXNjOiBcIlwiLFxuICAgICAgICBzZWxmS2V5RmllbGROYW1lOiBcIlwiLFxuICAgICAgICBvdXRlcktleUZpZWxkTmFtZTogXCJcIixcbiAgICAgICAgcmVsYXRpb25UeXBlOiBcIjFUb05cIixcbiAgICAgICAgaXNTYXZlOiBcInRydWVcIixcbiAgICAgICAgY29uZGl0aW9uOiBcIlwiLFxuICAgICAgICB0YWJsZUlkOiBcIlwiLFxuICAgICAgICB0YWJsZU5hbWU6IFwiXCIsXG4gICAgICAgIHRhYmxlQ2FwdGlvbjogXCJcIlxuICAgICAgfSxcbiAgICAgIHNlbGVjdFRhYmxlVHJlZToge1xuICAgICAgICBvbGRTZWxlY3RlZERCTGlua0lkOiBcIkpCdWlsZDRkTG9jYXRpb25EQkxpbmtcIixcbiAgICAgICAgZGlzYWJsZWREQkxpbms6IGZhbHNlLFxuICAgICAgICBkYkxpbmtFbnRpdGllczogW10sXG4gICAgICAgIHRhYmxlVHJlZU9iajogbnVsbCxcbiAgICAgICAgdGFibGVUcmVlU2V0dGluZzoge1xuICAgICAgICAgIHZpZXc6IHtcbiAgICAgICAgICAgIGRibENsaWNrRXhwYW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dMaW5lOiB0cnVlLFxuICAgICAgICAgICAgZm9udENzczoge1xuICAgICAgICAgICAgICAnY29sb3InOiAnYmxhY2snLFxuICAgICAgICAgICAgICAnZm9udC13ZWlnaHQnOiAnbm9ybWFsJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hlY2s6IHtcbiAgICAgICAgICAgIGVuYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIGNoa1N0eWxlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGFyZW50SWRcIixcbiAgICAgICAgICAgICAgcm9vdFBJZDogXCItMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjYWxsYmFjazoge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgICBpZiAodHJlZU5vZGUubm9kZVR5cGVOYW1lID09IFwiVGFibGVcIikge1xuICAgICAgICAgICAgICAgIHZhciBfc2VsZiA9IHdpbmRvdy5fZGJ0YWJsZXJlbGF0aW9uY29tcDtcbiAgICAgICAgICAgICAgICAkKFwiI2RpdlNlbGVjdFRhYmxlXCIpLmRpYWxvZyhcImNsb3NlXCIpO1xuXG4gICAgICAgICAgICAgICAgX3NlbGYuYWRkVGFibGVUb1JlbGF0aW9uVGFibGVUcmVlKHRyZWVOb2RlKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdGFibGVUcmVlRGF0YTogbnVsbCxcbiAgICAgICAgYWxsVGFibGVUcmVlRGF0YTogbnVsbCxcbiAgICAgICAgc2VsZWN0ZWRUYWJsZU5hbWU6IFwi5pegXCJcbiAgICAgIH0sXG4gICAgICB0ZW1wRGF0YVN0b3JlOiB7fSxcbiAgICAgIHJlc3VsdERhdGE6IFtdLFxuICAgICAgdHJlZU5vZGVTZXR0aW5nOiB7XG4gICAgICAgIE1haW5UYWJsZU5vZGVJbWc6IFwiLi4vLi4vLi4vVGhlbWVzL1BuZzE2WDE2L3BhZ2Vfa2V5LnBuZ1wiLFxuICAgICAgICBTdWJUYWJsZU5vZGVJbWc6IFwiLi4vLi4vLi4vVGhlbWVzL1BuZzE2WDE2L3BhZ2VfcmVmcmVzaC5wbmdcIlxuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5nZXRUYWJsZXNBbmRCaW5kT2xkU2VsZWN0ZWQoKTtcbiAgICB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJChcIiNkYXRhUmVsYXRpb25aVHJlZVVMXCIpLCB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRhYmxlVHJlZVNldHRpbmcsIHRoaXMucmVsYXRpb25UYWJsZVRyZWUudGFibGVUcmVlUm9vdERhdGEpO1xuICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgdGhpcy5yZWxhdGlvblRhYmxlVHJlZS5jdXJyZW50U2VsZWN0ZWROb2RlID0gdGhpcy5yZWxhdGlvblRhYmxlVHJlZS50cmVlT2JqLmdldE5vZGVCeVBhcmFtKFwiaWRcIiwgXCItMVwiKTtcbiAgICB3aW5kb3cuX2RidGFibGVyZWxhdGlvbmNvbXAgPSB0aGlzO1xuICB9LFxuICB3YXRjaDoge1xuICAgIGN1cnJlbnRFZGl0b3JEYXRhOiB7XG4gICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHZhbCwgb2xkVmFsKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5yZXN1bHREYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKHRoaXMucmVzdWx0RGF0YVtpXS5pZCA9PSB2YWwuaWQpIHtcbiAgICAgICAgICAgIHRoaXMucmVzdWx0SXRlbUNvcHlFZGl0RW5hYmxlVmFsdWUodGhpcy5yZXN1bHREYXRhW2ldLCB2YWwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGRlZXA6IHRydWVcbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICByZXN1bHRJdGVtQ29weUVkaXRFbmFibGVWYWx1ZTogZnVuY3Rpb24gcmVzdWx0SXRlbUNvcHlFZGl0RW5hYmxlVmFsdWUodG9PYmosIGZyb21PYmopIHtcbiAgICAgIHRvT2JqLnNpbmdsZU5hbWUgPSBmcm9tT2JqLnNpbmdsZU5hbWU7XG4gICAgICB0b09iai5wa0ZpZWxkTmFtZSA9IGZyb21PYmoucGtGaWVsZE5hbWU7XG4gICAgICB0b09iai5kZXNjID0gZnJvbU9iai5kZXNjO1xuICAgICAgdG9PYmouc2VsZktleUZpZWxkTmFtZSA9IGZyb21PYmouc2VsZktleUZpZWxkTmFtZTtcbiAgICAgIHRvT2JqLm91dGVyS2V5RmllbGROYW1lID0gZnJvbU9iai5vdXRlcktleUZpZWxkTmFtZTtcbiAgICAgIHRvT2JqLnJlbGF0aW9uVHlwZSA9IGZyb21PYmoucmVsYXRpb25UeXBlO1xuICAgICAgdG9PYmouaXNTYXZlID0gZnJvbU9iai5pc1NhdmU7XG4gICAgICB0b09iai5jb25kaXRpb24gPSBmcm9tT2JqLmNvbmRpdGlvbjtcbiAgICB9LFxuICAgIGdldFRhYmxlRmllbGRzQnlUYWJsZUlkOiBmdW5jdGlvbiBnZXRUYWJsZUZpZWxkc0J5VGFibGVJZCh0YWJsZUlkKSB7XG4gICAgICBpZiAodGFibGVJZCA9PSBcIi0xXCIpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnRlbXBEYXRhU3RvcmVbXCJ0YWJsZUZpZWxkX1wiICsgdGFibGVJZF0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGVtcERhdGFTdG9yZVtcInRhYmxlRmllbGRfXCIgKyB0YWJsZUlkXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgQWpheFV0aWxpdHkuUG9zdFN5bmModGhpcy5hY0ludGVyZmFjZS5nZXRUYWJsZUZpZWxkc1VybCwge1xuICAgICAgICAgIHRhYmxlSWQ6IHRhYmxlSWRcbiAgICAgICAgfSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgICAgX3NlbGYudGVtcERhdGFTdG9yZVtcInRhYmxlRmllbGRfXCIgKyB0YWJsZUlkXSA9IHJlc3VsdC5kYXRhO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgdGhpcyk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnRlbXBEYXRhU3RvcmVbXCJ0YWJsZUZpZWxkX1wiICsgdGFibGVJZF0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGVtcERhdGFTdG9yZVtcInRhYmxlRmllbGRfXCIgKyB0YWJsZUlkXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0RW1wdHlSZXN1bHRJdGVtOiBmdW5jdGlvbiBnZXRFbXB0eVJlc3VsdEl0ZW0oKSB7XG4gICAgICByZXR1cm4gSnNvblV0aWxpdHkuQ2xvbmVTaW1wbGUodGhpcy5lbXB0eUVkaXRvckRhdGEpO1xuICAgIH0sXG4gICAgZ2V0RXhpc3RSZXN1bHRJdGVtOiBmdW5jdGlvbiBnZXRFeGlzdFJlc3VsdEl0ZW0oaWQpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5yZXN1bHREYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLnJlc3VsdERhdGFbaV0uaWQgPT0gaWQpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5yZXN1bHREYXRhW2ldO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG4gICAgZ2V0VGFibGVzQW5kQmluZE9sZFNlbGVjdGVkOiBmdW5jdGlvbiBnZXRUYWJsZXNBbmRCaW5kT2xkU2VsZWN0ZWQoKSB7XG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVzRGF0YVVybCwge30sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgX3NlbGYuc2VsZWN0VGFibGVUcmVlLmRiTGlua0VudGl0aWVzID0gcmVzdWx0LmV4S1ZEYXRhLmRiTGlua0VudGl0eUxpc3Q7XG4gICAgICAgICAgX3NlbGYuc2VsZWN0VGFibGVUcmVlLmFsbFRhYmxlVHJlZURhdGEgPSByZXN1bHQuZGF0YTtcblxuICAgICAgICAgIF9zZWxmLmJpbmRTZWxlY3RUYWJsZVRyZWUodHJ1ZSk7XG5cbiAgICAgICAgICBmdXp6eVNlYXJjaFRyZWVPYmooX3NlbGYuc2VsZWN0VGFibGVUcmVlLnRhYmxlVHJlZU9iaiwgX3NlbGYuJHJlZnMudHh0X3RhYmxlX3NlYXJjaF90ZXh0LiRyZWZzLmlucHV0LCBudWxsLCB0cnVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgcmVzdWx0Lm1lc3NhZ2UsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIGJpbmRTZWxlY3RUYWJsZVRyZWU6IGZ1bmN0aW9uIGJpbmRTZWxlY3RUYWJsZVRyZWUoaXNHZXRDb29raWVPbGRTZWxlY3RlZCkge1xuICAgICAgdmFyIG9sZFNlbGVjdGVkREJMaW5rSWQgPSBDb29raWVVdGlsaXR5LkdldENvb2tpZShcIkRCVFJDREJMSU5LSURcIik7XG5cbiAgICAgIGlmIChvbGRTZWxlY3RlZERCTGlua0lkICYmIGlzR2V0Q29va2llT2xkU2VsZWN0ZWQpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RUYWJsZVRyZWUub2xkU2VsZWN0ZWREQkxpbmtJZCA9IG9sZFNlbGVjdGVkREJMaW5rSWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvbGRTZWxlY3RlZERCTGlua0lkID0gdGhpcy5zZWxlY3RUYWJsZVRyZWUub2xkU2VsZWN0ZWREQkxpbmtJZDtcbiAgICAgIH1cblxuICAgICAgdmFyIGJpbmRUb1RyZWVEYXRhID0gW107XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5zZWxlY3RUYWJsZVRyZWUuYWxsVGFibGVUcmVlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAob2xkU2VsZWN0ZWREQkxpbmtJZCA9PSB0aGlzLnNlbGVjdFRhYmxlVHJlZS5hbGxUYWJsZVRyZWVEYXRhW2ldLm91dGVySWQpIHtcbiAgICAgICAgICBiaW5kVG9UcmVlRGF0YS5wdXNoKHRoaXMuc2VsZWN0VGFibGVUcmVlLmFsbFRhYmxlVHJlZURhdGFbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2VsZWN0VGFibGVUcmVlLnRhYmxlVHJlZURhdGEgPSBiaW5kVG9UcmVlRGF0YTtcbiAgICAgIHRoaXMuc2VsZWN0VGFibGVUcmVlLnRhYmxlVHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKFwiI3NlbGVjdFRhYmxlWlRyZWVVTFwiKSwgdGhpcy5zZWxlY3RUYWJsZVRyZWUudGFibGVUcmVlU2V0dGluZywgdGhpcy5zZWxlY3RUYWJsZVRyZWUudGFibGVUcmVlRGF0YSk7XG4gICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS50YWJsZVRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgIH0sXG4gICAgY2hhbmdlREJMaW5rOiBmdW5jdGlvbiBjaGFuZ2VEQkxpbmsoZGJMaW5rSWQpIHtcbiAgICAgIENvb2tpZVV0aWxpdHkuU2V0Q29va2llMU1vbnRoKFwiREJUUkNEQkxJTktJRFwiLCBkYkxpbmtJZCk7XG4gICAgICB0aGlzLmJpbmRTZWxlY3RUYWJsZVRyZWUodHJ1ZSk7XG4gICAgfSxcbiAgICBnZXRNYWluVGFibGVEQkxpbmtJZDogZnVuY3Rpb24gZ2V0TWFpblRhYmxlREJMaW5rSWQoKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuc2VsZWN0VGFibGVUcmVlLmFsbFRhYmxlVHJlZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0VGFibGVUcmVlLmFsbFRhYmxlVHJlZURhdGFbaV0uaWQgPT0gdGhpcy5nZXRNYWluVGFibGVJZCgpKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0VGFibGVUcmVlLmFsbFRhYmxlVHJlZURhdGFbaV0ub3V0ZXJJZDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gXCJcIjtcbiAgICB9LFxuICAgIGRlbGV0ZVNlbGVjdGVkUmVsYXRpb25UcmVlTm9kZTogZnVuY3Rpb24gZGVsZXRlU2VsZWN0ZWRSZWxhdGlvblRyZWVOb2RlKCkge1xuICAgICAgaWYgKHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZSkge1xuICAgICAgICBpZiAoIXRoaXMuaXNTZWxlY3RlZFJvb3RSZWxhdGlvblRhYmxlTm9kZSgpKSB7XG4gICAgICAgICAgaWYgKCF0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUuaXNQYXJlbnQpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5yZXN1bHREYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmICh0aGlzLnJlc3VsdERhdGFbaV0uaWQgPT0gdGhpcy5yZWxhdGlvblRhYmxlVHJlZS5jdXJyZW50U2VsZWN0ZWROb2RlLmlkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXN1bHREYXRhLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnJlc3VsdEl0ZW1Db3B5RWRpdEVuYWJsZVZhbHVlKHRoaXMuY3VycmVudEVkaXRvckRhdGEsIHRoaXMuZW1wdHlFZGl0b3JEYXRhKTtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudEVkaXRvckRhdGEuaWQgPSBcIlwiO1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50RWRpdG9yRGF0YS5wYXJlbnRJZCA9IFwiXCI7XG4gICAgICAgICAgICB0aGlzLiRyZWZzLnNxbEdlbmVyYWxEZXNpZ25Db21wLnNldFZhbHVlKFwiXCIpO1xuICAgICAgICAgICAgdGhpcy5yZWxhdGlvblRhYmxlRWRpdG9yVmlldy5zZWxQS0RhdGEgPSBbXTtcbiAgICAgICAgICAgIHRoaXMucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsU2VsZktleURhdGEgPSBbXTtcbiAgICAgICAgICAgIHRoaXMucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsRm9yZWlnbktleURhdGEgPSBbXTtcbiAgICAgICAgICAgIHRoaXMucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuaXNTaG93VGFibGVFZGl0RGV0YWlsID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRyZWVPYmoucmVtb3ZlTm9kZSh0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUsIGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZSA9IG51bGw7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi5LiN6IO95Yig6Zmk54i26IqC54K5IVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLkuI3og73liKDpmaTmoLnoioLngrkhXCIpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0VGV4dChcIuivt+mAieaLqeimgeWIoOmZpOeahOiKgueCuSFcIik7XG4gICAgICB9XG4gICAgfSxcbiAgICBiZWdpblNlbGVjdFRhYmxlVG9SZWxhdGlvblRhYmxlOiBmdW5jdGlvbiBiZWdpblNlbGVjdFRhYmxlVG9SZWxhdGlvblRhYmxlKCkge1xuICAgICAgaWYgKHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZSkge1xuICAgICAgICAkKFwiI2RpdlNlbGVjdFRhYmxlXCIpLmRpYWxvZyh7XG4gICAgICAgICAgbW9kYWw6IHRydWUsXG4gICAgICAgICAgaGVpZ2h0OiA2MDAsXG4gICAgICAgICAgd2lkdGg6IDcwMFxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIG1haW5UYWJsZURCTGlua0lkID0gdGhpcy5nZXRNYWluVGFibGVEQkxpbmtJZCgpO1xuXG4gICAgICAgIGlmIChtYWluVGFibGVEQkxpbmtJZCkge1xuICAgICAgICAgIHRoaXMuc2VsZWN0VGFibGVUcmVlLm9sZFNlbGVjdGVkREJMaW5rSWQgPSBtYWluVGFibGVEQkxpbmtJZDtcbiAgICAgICAgICB0aGlzLmJpbmRTZWxlY3RUYWJsZVRyZWUoZmFsc2UpO1xuICAgICAgICAgIHRoaXMuc2VsZWN0VGFibGVUcmVlLmRpc2FibGVkREJMaW5rID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnNlbGVjdFRhYmxlVHJlZS5kaXNhYmxlZERCTGluayA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgXCLpgInmi6nkuIDkuKrniLboioLngrkhXCIsIG51bGwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgYXBwZW5kTWFpblRhYmxlTm9kZVByb3A6IGZ1bmN0aW9uIGFwcGVuZE1haW5UYWJsZU5vZGVQcm9wKG5vZGUpIHtcbiAgICAgIG5vZGUuX25vZGVFeFR5cGUgPSBcIk1haW5Ob2RlXCI7XG4gICAgICBub2RlLmljb24gPSB0aGlzLnRyZWVOb2RlU2V0dGluZy5NYWluVGFibGVOb2RlSW1nO1xuICAgIH0sXG4gICAgYXBwZW5kU3ViVGFibGVOb2RlUHJvcDogZnVuY3Rpb24gYXBwZW5kU3ViVGFibGVOb2RlUHJvcChub2RlKSB7XG4gICAgICBub2RlLl9ub2RlRXhUeXBlID0gXCJTdWJOb2RlXCI7XG4gICAgICBub2RlLmljb24gPSB0aGlzLnRyZWVOb2RlU2V0dGluZy5TdWJUYWJsZU5vZGVJbWc7XG4gICAgfSxcbiAgICBidWlsZFJlbGF0aW9uVGFibGVOb2RlOiBmdW5jdGlvbiBidWlsZFJlbGF0aW9uVGFibGVOb2RlKHNvdXJjZU5vZGUsIHRyZWVOb2RlSWQpIHtcbiAgICAgIGlmICh0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUuX25vZGVFeFR5cGUgPT0gXCJyb290XCIpIHtcbiAgICAgICAgdGhpcy5hcHBlbmRNYWluVGFibGVOb2RlUHJvcChzb3VyY2VOb2RlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYXBwZW5kU3ViVGFibGVOb2RlUHJvcChzb3VyY2VOb2RlKTtcbiAgICAgIH1cblxuICAgICAgc291cmNlTm9kZS50YWJsZUlkID0gc291cmNlTm9kZS5pZDtcblxuICAgICAgaWYgKHRyZWVOb2RlSWQpIHtcbiAgICAgICAgc291cmNlTm9kZS5pZCA9IHRyZWVOb2RlSWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzb3VyY2VOb2RlLmlkID0gU3RyaW5nVXRpbGl0eS5HdWlkKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzb3VyY2VOb2RlO1xuICAgIH0sXG4gICAgZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlOiBmdW5jdGlvbiBnZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKSB7XG4gICAgICB2YXIgbm9kZSA9IHRoaXMucmVsYXRpb25UYWJsZVRyZWUudHJlZU9iai5nZXROb2RlQnlQYXJhbShcIl9ub2RlRXhUeXBlXCIsIFwiTWFpbk5vZGVcIik7XG5cbiAgICAgIGlmIChub2RlKSB7XG4gICAgICAgIHJldHVybiBub2RlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIGdldE1haW5UYWJsZUlkOiBmdW5jdGlvbiBnZXRNYWluVGFibGVJZCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldE1haW5SZWxhdGlvblRhYmxlTm9kZSgpID8gdGhpcy5nZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKS50YWJsZUlkIDogXCJcIjtcbiAgICB9LFxuICAgIGdldE1haW5UYWJsZU5hbWU6IGZ1bmN0aW9uIGdldE1haW5UYWJsZU5hbWUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKSA/IHRoaXMuZ2V0TWFpblJlbGF0aW9uVGFibGVOb2RlKCkudmFsdWUgOiBcIlwiO1xuICAgIH0sXG4gICAgZ2V0TWFpblRhYmxlQ2FwdGlvbjogZnVuY3Rpb24gZ2V0TWFpblRhYmxlQ2FwdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldE1haW5SZWxhdGlvblRhYmxlTm9kZSgpID8gdGhpcy5nZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKS5hdHRyMSA6IFwiXCI7XG4gICAgfSxcbiAgICBpc1NlbGVjdGVkUm9vdFJlbGF0aW9uVGFibGVOb2RlOiBmdW5jdGlvbiBpc1NlbGVjdGVkUm9vdFJlbGF0aW9uVGFibGVOb2RlKCkge1xuICAgICAgcmV0dXJuIHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZS5pZCA9PSBcIi0xXCI7XG4gICAgfSxcbiAgICBpc1NlbGVjdGVkTWFpblJlbGF0aW9uVGFibGVOb2RlOiBmdW5jdGlvbiBpc1NlbGVjdGVkTWFpblJlbGF0aW9uVGFibGVOb2RlKCkge1xuICAgICAgcmV0dXJuIHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZS5fbm9kZUV4VHlwZSA9PSBcIk1haW5Ob2RlXCI7XG4gICAgfSxcbiAgICBhZGRUYWJsZVRvUmVsYXRpb25UYWJsZVRyZWU6IGZ1bmN0aW9uIGFkZFRhYmxlVG9SZWxhdGlvblRhYmxlVHJlZShuZXdOb2RlKSB7XG4gICAgICBuZXdOb2RlID0gdGhpcy5idWlsZFJlbGF0aW9uVGFibGVOb2RlKG5ld05vZGUpO1xuICAgICAgdmFyIHRlbXBOb2RlID0gdGhpcy5nZXRNYWluUmVsYXRpb25UYWJsZU5vZGUoKTtcblxuICAgICAgaWYgKHRlbXBOb2RlICE9IG51bGwpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNTZWxlY3RlZFJvb3RSZWxhdGlvblRhYmxlTm9kZSgpKSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIFwi5Y+q5YWB6K645a2Y5Zyo5LiA5Liq5Li76K6w5b2VIVwiLCBudWxsKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5yZWxhdGlvblRhYmxlVHJlZS50cmVlT2JqLmFkZE5vZGVzKHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZSwgLTEsIG5ld05vZGUsIGZhbHNlKTtcbiAgICAgIHZhciBuZXdSZXN1bHRJdGVtID0gdGhpcy5nZXRFbXB0eVJlc3VsdEl0ZW0oKTtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0uaWQgPSBuZXdOb2RlLmlkO1xuICAgICAgbmV3UmVzdWx0SXRlbS5wYXJlbnRJZCA9IHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZS5pZDtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0udGFibGVJZCA9IG5ld05vZGUudGFibGVJZDtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0udGFibGVOYW1lID0gbmV3Tm9kZS52YWx1ZTtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0udGFibGVDYXB0aW9uID0gbmV3Tm9kZS5hdHRyMTtcbiAgICAgIG5ld1Jlc3VsdEl0ZW0udGFibGVDb2RlID0gbmV3Tm9kZS5jb2RlO1xuICAgICAgdGhpcy5yZXN1bHREYXRhLnB1c2gobmV3UmVzdWx0SXRlbSk7XG4gICAgfSxcbiAgICBzZWxlY3RlZFJlbGF0aW9uVGFibGVOb2RlOiBmdW5jdGlvbiBzZWxlY3RlZFJlbGF0aW9uVGFibGVOb2RlKG5vZGUpIHtcbiAgICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUuY3VycmVudFNlbGVjdGVkTm9kZSA9IG5vZGU7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU2hvd1RhYmxlRWRpdERldGFpbCA9ICF0aGlzLmlzU2VsZWN0ZWRSb290UmVsYXRpb25UYWJsZU5vZGUoKTtcbiAgICAgIHRoaXMucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuaXNNYWluRWRpdFRyID0gdGhpcy5pc1NlbGVjdGVkTWFpblJlbGF0aW9uVGFibGVOb2RlKCk7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU3ViRWRpdFRyID0gIXRoaXMuaXNTZWxlY3RlZE1haW5SZWxhdGlvblRhYmxlTm9kZSgpO1xuXG4gICAgICBpZiAodGhpcy5pc1NlbGVjdGVkUm9vdFJlbGF0aW9uVGFibGVOb2RlKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbFBLRGF0YSA9IHRoaXMuZ2V0VGFibGVGaWVsZHNCeVRhYmxlSWQobm9kZS50YWJsZUlkKSAhPSBudWxsID8gdGhpcy5nZXRUYWJsZUZpZWxkc0J5VGFibGVJZChub2RlLnRhYmxlSWQpIDogW107XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbFNlbGZLZXlEYXRhID0gdGhpcy5nZXRUYWJsZUZpZWxkc0J5VGFibGVJZChub2RlLnRhYmxlSWQpICE9IG51bGwgPyB0aGlzLmdldFRhYmxlRmllbGRzQnlUYWJsZUlkKG5vZGUudGFibGVJZCkgOiBbXTtcbiAgICAgIHZhciBwYXJlbnROb2RlID0gbm9kZS5nZXRQYXJlbnROb2RlKCk7XG4gICAgICB0aGlzLnJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LnNlbEZvcmVpZ25LZXlEYXRhID0gdGhpcy5nZXRUYWJsZUZpZWxkc0J5VGFibGVJZChwYXJlbnROb2RlLnRhYmxlSWQpICE9IG51bGwgPyB0aGlzLmdldFRhYmxlRmllbGRzQnlUYWJsZUlkKHBhcmVudE5vZGUudGFibGVJZCkgOiBbXTtcbiAgICAgIHRoaXMuY3VycmVudEVkaXRvckRhdGEuaWQgPSB0aGlzLnJlbGF0aW9uVGFibGVUcmVlLmN1cnJlbnRTZWxlY3RlZE5vZGUuaWQ7XG4gICAgICB0aGlzLmN1cnJlbnRFZGl0b3JEYXRhLnBhcmVudElkID0gcGFyZW50Tm9kZS5pZDtcbiAgICAgIHZhciBleGlzdFJlc3VsdEl0ZW0gPSB0aGlzLmdldEV4aXN0UmVzdWx0SXRlbShub2RlLmlkKTtcblxuICAgICAgaWYgKGV4aXN0UmVzdWx0SXRlbSAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMucmVzdWx0SXRlbUNvcHlFZGl0RW5hYmxlVmFsdWUodGhpcy5jdXJyZW50RWRpdG9yRGF0YSwgZXhpc3RSZXN1bHRJdGVtKTtcblxuICAgICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfc2VsZi4kcmVmcy5zcWxHZW5lcmFsRGVzaWduQ29tcC5zZXRWYWx1ZShfc2VsZi5jdXJyZW50RWRpdG9yRGF0YS5jb25kaXRpb24pO1xuXG4gICAgICAgICAgX3NlbGYuJHJlZnMuc3FsR2VuZXJhbERlc2lnbkNvbXAuc2V0QWJvdXRUYWJsZUZpZWxkcyhfc2VsZi5yZWxhdGlvblRhYmxlRWRpdG9yVmlldy5zZWxTZWxmS2V5RGF0YSwgX3NlbGYucmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsRm9yZWlnbktleURhdGEpO1xuICAgICAgICB9LCAzMDApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYWxlcnQoXCLpgJrov4dnZXRFeGlzdFJlc3VsdEl0ZW3ojrflj5bkuI3liLDmlbDmja4hXCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0UmVzdWx0RGF0YTogZnVuY3Rpb24gZ2V0UmVzdWx0RGF0YSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlc3VsdERhdGE7XG4gICAgfSxcbiAgICBzZXJpYWxpemVSZWxhdGlvbjogZnVuY3Rpb24gc2VyaWFsaXplUmVsYXRpb24oaXNGb3JtYXQpIHtcbiAgICAgIGFsZXJ0KFwic2VyaWFsaXplUmVsYXRpb27lt7Lnu4/lgZznlKhcIik7XG4gICAgICByZXR1cm47XG5cbiAgICAgIGlmIChpc0Zvcm1hdCkge1xuICAgICAgICByZXR1cm4gSnNvblV0aWxpdHkuSnNvblRvU3RyaW5nRm9ybWF0KHRoaXMucmVzdWx0RGF0YSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcodGhpcy5yZXN1bHREYXRhKTtcbiAgICB9LFxuICAgIGRlc2VyaWFsaXplUmVsYXRpb246IGZ1bmN0aW9uIGRlc2VyaWFsaXplUmVsYXRpb24oanNvblN0cmluZykge1xuICAgICAgYWxlcnQoXCJkZXNlcmlhbGl6ZVJlbGF0aW9u5bey57uP5YGc55SoXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH0sXG4gICAgZ2V0VmFsdWU6IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHtcbiAgICAgICAgbWFpblRhYmxlSWQ6IHRoaXMuZ2V0TWFpblRhYmxlSWQoKSxcbiAgICAgICAgbWFpblRhYmxlTmFtZTogdGhpcy5nZXRNYWluVGFibGVOYW1lKCksXG4gICAgICAgIG1haW5UYWJsZUNhcHRpb246IHRoaXMuZ2V0TWFpblRhYmxlQ2FwdGlvbigpLFxuICAgICAgICByZWxhdGlvbkRhdGE6IHRoaXMucmVzdWx0RGF0YVxuICAgICAgfTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBzZXRWYWx1ZTogZnVuY3Rpb24gc2V0VmFsdWUoanNvblN0cmluZykge1xuICAgICAgdmFyIHRlbXBEYXRhID0gSnNvblV0aWxpdHkuU3RyaW5nVG9Kc29uKGpzb25TdHJpbmcpO1xuICAgICAgdGhpcy5yZXN1bHREYXRhID0gdGVtcERhdGE7XG4gICAgICB2YXIgdHJlZU5vZGVEYXRhID0gbmV3IEFycmF5KCk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGVtcERhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHRyZWVOb2RlID0ge1xuICAgICAgICAgIFwidmFsdWVcIjogdGVtcERhdGFbaV0udGFibGVOYW1lLFxuICAgICAgICAgIFwiYXR0cjFcIjogdGVtcERhdGFbaV0udGFibGVDYXB0aW9uLFxuICAgICAgICAgIFwidGV4dFwiOiBcIuOAkFwiICsgdGVtcERhdGFbaV0udGFibGVDb2RlICsgXCLjgJFcIiArIHRlbXBEYXRhW2ldLnRhYmxlQ2FwdGlvbiArIFwi44CQXCIgKyB0ZW1wRGF0YVtpXS50YWJsZU5hbWUgKyBcIuOAkVwiLFxuICAgICAgICAgIFwiaWRcIjogdGVtcERhdGFbaV0uaWQsXG4gICAgICAgICAgXCJwYXJlbnRJZFwiOiB0ZW1wRGF0YVtpXS5wYXJlbnRJZCxcbiAgICAgICAgICBcInRhYmxlSWRcIjogdGVtcERhdGFbaV0udGFibGVJZCxcbiAgICAgICAgICBcInRhYmxlTmFtZVwiOiB0ZW1wRGF0YVtpXS50YWJsZU5hbWUsXG4gICAgICAgICAgXCJ0YWJsZUNhcHRpb25cIjogdGVtcERhdGFbaV0udGFibGVDYXB0aW9uLFxuICAgICAgICAgIFwidGFibGVDb2RlXCI6IHRlbXBEYXRhW2ldLnRhYmxlQ29kZVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmICh0ZW1wRGF0YVtpXS5wYXJlbnRJZCA9PSBcIi0xXCIpIHtcbiAgICAgICAgICB0aGlzLmFwcGVuZE1haW5UYWJsZU5vZGVQcm9wKHRyZWVOb2RlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmFwcGVuZFN1YlRhYmxlTm9kZVByb3AodHJlZU5vZGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdHJlZU5vZGVEYXRhLnB1c2godHJlZU5vZGUpO1xuICAgICAgfVxuXG4gICAgICB0cmVlTm9kZURhdGEucHVzaCh0aGlzLnJlbGF0aW9uVGFibGVUcmVlLnRhYmxlVHJlZVJvb3REYXRhKTtcbiAgICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKFwiI2RhdGFSZWxhdGlvblpUcmVlVUxcIiksIHRoaXMucmVsYXRpb25UYWJsZVRyZWUudGFibGVUcmVlU2V0dGluZywgdHJlZU5vZGVEYXRhKTtcbiAgICAgIHRoaXMucmVsYXRpb25UYWJsZVRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgfSxcbiAgICBhbGVydFNlcmlhbGl6ZVJlbGF0aW9uOiBmdW5jdGlvbiBhbGVydFNlcmlhbGl6ZVJlbGF0aW9uKCkge1xuICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydEpzb25Db2RlKHRoaXMucmVzdWx0RGF0YSk7XG4gICAgfSxcbiAgICBpbnB1dERlc2VyaWFsaXplUmVsYXRpb246IGZ1bmN0aW9uIGlucHV0RGVzZXJpYWxpemVSZWxhdGlvbigpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuUHJvbXB0KHdpbmRvdywge1xuICAgICAgICB3aWR0aDogOTAwLFxuICAgICAgICBoZWlnaHQ6IDYwMFxuICAgICAgfSwgRGlhbG9nVXRpbGl0eS5EaWFsb2dQcm9tcHRJZCwgXCLor7fotLTlhaXmlbDmja7lhbPogZRKc29u6K6+572u5a2X56ym5LiyXCIsIGZ1bmN0aW9uIChqc29uU3RyaW5nKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgd2luZG93Ll9kYnRhYmxlcmVsYXRpb25jb21wLnNldFZhbHVlKGpzb25TdHJpbmcpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgYWxlcnQoXCLlj43luo/liJfljJblpLHotKU6XCIgKyBlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IGNsYXNzPVxcXCJkYi10YWJsZS1yZWxhdGlvbi1jb21wXFxcIj5cXG4gICAgICAgICAgICAgICAgPGRpdmlkZXIgb3JpZW50YXRpb249XFxcImxlZnRcXFwiIDpkYXNoZWQ9XFxcInRydWVcXFwiIHN0eWxlPVxcXCJmb250LXNpemU6IDEycHg7bWFyZ2luLXRvcDogMHB4O21hcmdpbi1ib3R0b206IDEwcHhcXFwiPlxcdTY1NzBcXHU2MzZFXFx1NTE3M1xcdTdDRkJcXHU1MTczXFx1ODA1NFxcdThCQkVcXHU3RjZFPC9kaXZpZGVyPlxcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogbGVmdDt3aWR0aDogMzUwcHg7aGVpZ2h0OiAzMzBweDtib3JkZXI6ICNkZGRkZjEgMXB4IHNvbGlkO2JvcmRlci1yYWRpdXM6IDRweDtwYWRkaW5nOiAxMHB4IDEwcHggMTBweCAxMHB4O1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwIHNoYXBlPVxcXCJjaXJjbGVcXFwiIHN0eWxlPVxcXCJtYXJnaW46IGF1dG9cXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJzdWNjZXNzXFxcIiBAY2xpY2s9XFxcImJlZ2luU2VsZWN0VGFibGVUb1JlbGF0aW9uVGFibGVcXFwiPiZuYnNwO1xcdTZERkJcXHU1MkEwJm5ic3A7PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJkZWxldGVTZWxlY3RlZFJlbGF0aW9uVHJlZU5vZGVcXFwiPiZuYnNwO1xcdTUyMjBcXHU5NjY0Jm5ic3A7PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJhbGVydFNlcmlhbGl6ZVJlbGF0aW9uXFxcIj5cXHU1RThGXFx1NTIxN1xcdTUzMTY8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBAY2xpY2s9XFxcImlucHV0RGVzZXJpYWxpemVSZWxhdGlvblxcXCI+XFx1NTNDRFxcdTVFOEZcXHU1MjE3XFx1NTMxNjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uPlxcdThCRjRcXHU2NjBFPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgPHVsIGlkPVxcXCJkYXRhUmVsYXRpb25aVHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiIHN0eWxlPVxcXCJvdmVyZmxvdy14OiBoaWRkZW5cXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVxcXCJmbG9hdDogcmlnaHQ7d2lkdGg6IDYzMHB4O2hlaWdodDogMzMwcHg7Ym9yZGVyOiAjZGRkZGYxIDFweCBzb2xpZDtib3JkZXItcmFkaXVzOiA0cHg7cGFkZGluZzogMTBweCAxMHB4IDEwcHggMTBweDtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPVxcXCJsaWdodC1ncmF5LXRhYmxlXFxcIiBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCIgdi1pZj1cXFwicmVsYXRpb25UYWJsZUVkaXRvclZpZXcuaXNTaG93VGFibGVFZGl0RGV0YWlsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxNyVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAzMyVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxNSVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAzNSVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPlNpbmdsZU5hbWVcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5zaW5nbGVOYW1lXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTY3MkNcXHU1MTczXFx1ODA1NFxcdTRFMkRcXHU3Njg0XFx1NTUyRlxcdTRFMDBcXHU1NDBEXFx1NzlGMCxcXHU1M0VGXFx1NEVFNVxcdTRFM0FcXHU3QTdBXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPlBLS2V5XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktc2VsZWN0IHBsYWNlaG9sZGVyPVxcXCJcXHU5RUQ4XFx1OEJBNFxcdTRGN0ZcXHU3NTI4SWRcXHU1QjU3XFx1NkJCNVxcXCIgdi1tb2RlbD1cXFwiY3VycmVudEVkaXRvckRhdGEucGtGaWVsZE5hbWVcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBzdHlsZT1cXFwid2lkdGg6MTk5cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdi1mb3I9XFxcIml0ZW0gaW4gcmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsUEtEYXRhXFxcIiA6dmFsdWU9XFxcIml0ZW0uZmllbGROYW1lXFxcIiA6a2V5PVxcXCJpdGVtLmZpZWxkTmFtZVxcXCI+e3tpdGVtLmZpZWxkQ2FwdGlvbn19PC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9XFxcInJlbGF0aW9uVGFibGVFZGl0b3JWaWV3LmlzU3ViRWRpdFRyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPlxcdTY1NzBcXHU2MzZFXFx1NTE3M1xcdTdDRkJcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdi1tb2RlbD1cXFwiY3VycmVudEVkaXRvckRhdGEucmVsYXRpb25UeXBlXFxcIiB0eXBlPVxcXCJidXR0b25cXFwiIHNpemU9XFxcInNtYWxsXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCIxVG8xXFxcIj4xOjE8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcIjFUb05cXFwiPjE6TjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9yYWRpby1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XFxcImxhYmVsXFxcIj5cXHU2NjJGXFx1NTQyNlxcdTRGRERcXHU1QjU4XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHYtbW9kZWw9XFxcImN1cnJlbnRFZGl0b3JEYXRhLmlzU2F2ZVxcXCIgdHlwZT1cXFwiYnV0dG9uXFxcIiBzaXplPVxcXCJzbWFsbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwidHJ1ZVxcXCI+XFx1NjYyRjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiZmFsc2VcXFwiPlxcdTU0MjY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcmFkaW8tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgdi1pZj1cXFwicmVsYXRpb25UYWJsZUVkaXRvclZpZXcuaXNTdWJFZGl0VHJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVxcXCJsYWJlbFxcXCI+XFx1NjcyQ1xcdThFQUJcXHU1MTczXFx1ODA1NFxcdTVCNTdcXHU2QkI1XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXNlbGVjdCBwbGFjZWhvbGRlcj1cXFwiXFx1OUVEOFxcdThCQTRcXHU0RjdGXFx1NzUyOElkXFx1NUI1N1xcdTZCQjVcXFwiIHYtbW9kZWw9XFxcImN1cnJlbnRFZGl0b3JEYXRhLnNlbGZLZXlGaWVsZE5hbWVcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBzdHlsZT1cXFwid2lkdGg6MTk5cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdi1mb3I9XFxcIml0ZW0gaW4gcmVsYXRpb25UYWJsZUVkaXRvclZpZXcuc2VsU2VsZktleURhdGFcXFwiIDp2YWx1ZT1cXFwiaXRlbS5maWVsZE5hbWVcXFwiIDprZXk9XFxcIml0ZW0uZmllbGROYW1lXFxcIj57e2l0ZW0uZmllbGRDYXB0aW9ufX08L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVxcXCJsYWJlbFxcXCI+XFx1NTkxNlxcdTgwNTRcXHU1QjU3XFx1NkJCNVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3QgcGxhY2Vob2xkZXI9XFxcIlxcdTlFRDhcXHU4QkE0XFx1NEY3RlxcdTc1MjhJZFxcdTVCNTdcXHU2QkI1XFxcIiB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5vdXRlcktleUZpZWxkTmFtZVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIHN0eWxlPVxcXCJ3aWR0aDoxOTlweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2LWZvcj1cXFwiaXRlbSBpbiByZWxhdGlvblRhYmxlRWRpdG9yVmlldy5zZWxGb3JlaWduS2V5RGF0YVxcXCIgOnZhbHVlPVxcXCJpdGVtLmZpZWxkTmFtZVxcXCIgOmtleT1cXFwiaXRlbS5maWVsZE5hbWVcXFwiPnt7aXRlbS5maWVsZENhcHRpb259fTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLXNlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cXFwibGFiZWxcXFwiPkRlc2NcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5kZXNjXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdThCRjRcXHU2NjBFXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVxcXCJsYWJlbFxcXCI+XFx1NTJBMFxcdThGN0RcXHU2NzYxXFx1NEVGNlxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcWwtZ2VuZXJhbC1kZXNpZ24tY29tcCByZWY9XFxcInNxbEdlbmVyYWxEZXNpZ25Db21wXFxcIiA6c3FsRGVzaWduZXJIZWlnaHQ9XFxcIjc0XFxcIiB2LW1vZGVsPVxcXCJjdXJyZW50RWRpdG9yRGF0YS5jb25kaXRpb25cXFwiIDpzaG93RmllbGQ9XFxcInRydWVcXFwiPjwvc3FsLWdlbmVyYWwtZGVzaWduLWNvbXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cXFwiZGl2U2VsZWN0VGFibGVcXFwiIHRpdGxlPVxcXCJcXHU4QkY3XFx1OTAwOVxcdTYyRTlcXHU4ODY4XFxcIiBzdHlsZT1cXFwiZGlzcGxheTogbm9uZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XFxcImlucHV0X2JvcmRlcl9ib3R0b21cXFwiIHJlZj1cXFwidHh0X3RhYmxlX3NlYXJjaF90ZXh0XFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1OEJGN1xcdThGOTNcXHU1MTY1XFx1ODg2OFxcdTU0MERcXHU2MjE2XFx1ODAwNVxcdTY4MDdcXHU5ODk4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3Qgdi1tb2RlbD1cXFwic2VsZWN0VGFibGVUcmVlLm9sZFNlbGVjdGVkREJMaW5rSWRcXFwiIHNsb3Q9XFxcInByZXBlbmRcXFwiIHN0eWxlPVxcXCJ3aWR0aDogMjgwcHhcXFwiIEBvbi1jaGFuZ2U9XFxcImNoYW5nZURCTGlua1xcXCIgOmRpc2FibGVkPVxcXCJzZWxlY3RUYWJsZVRyZWUuZGlzYWJsZWREQkxpbmtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gOnZhbHVlPVxcXCJpdGVtLmRiSWRcXFwiIHYtZm9yPVxcXCJpdGVtIGluIHNlbGVjdFRhYmxlVHJlZS5kYkxpbmtFbnRpdGllc1xcXCI+e3tpdGVtLmRiTGlua05hbWV9fTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9pLXNlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXG4gICAgICAgICAgICAgICAgICAgIDx1bCBpZD1cXFwic2VsZWN0VGFibGVaVHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWUgZGl2LWN1c3RvbS1zY3JvbGxcXFwiIHN0eWxlPVxcXCJoZWlnaHQ6IDUwMHB4O292ZXJmbG93LXk6c2Nyb2xsO292ZXJmbG93LXg6aGlkZGVuXFxcIj48L3VsPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImRlc2lnbi1odG1sLWVsZW0tbGlzdFwiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHt9LFxuICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJkZXNpZ24taHRtbC1lbGVtLWxpc3Qtd3JhcFwiPlxcXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGVzaWduLWh0bWwtZWxlbS1saXN0LWl0ZW1cIj7moLzlvI/ljJY8L2Rpdj5cXFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRlc2lnbi1odG1sLWVsZW0tbGlzdC1pdGVtXCI+6K+05piOPC9kaXY+XFxcbiAgICAgICAgPC9kaXY+J1xufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJmZC1jb250cm9sLWJhc2UtaW5mb1wiLCB7XG4gIHByb3BzOiBbXCJ2YWx1ZVwiXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYmFzZUluZm86IHtcbiAgICAgICAgaWQ6IFwiXCIsXG4gICAgICAgIHNlcmlhbGl6ZTogXCJcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgY2xhc3NOYW1lOiBcIlwiLFxuICAgICAgICBwbGFjZWhvbGRlcjogXCJcIixcbiAgICAgICAgY3VzdFJlYWRvbmx5OiBcIlwiLFxuICAgICAgICBjdXN0RGlzYWJsZWQ6IFwiXCIsXG4gICAgICAgIHN0eWxlOiBcIlwiLFxuICAgICAgICBkZXNjOiBcIlwiLFxuICAgICAgICBzdGF0dXM6IFwiXCJcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIGJhc2VJbmZvOiBmdW5jdGlvbiBiYXNlSW5mbyhuZXdWYWwpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgbmV3VmFsKTtcbiAgICB9LFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShuZXdWYWwpIHtcbiAgICAgIHRoaXMuYmFzZUluZm8gPSBuZXdWYWw7XG4gICAgfVxuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuYmFzZUluZm8gPSB0aGlzLnZhbHVlO1xuXG4gICAgaWYgKCF0aGlzLmJhc2VJbmZvLnN0YXR1cykge1xuICAgICAgdGhpcy5iYXNlSW5mby5zdGF0dXMgPSBcImVuYWJsZVwiO1xuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge30sXG4gIHRlbXBsYXRlOiBcIjx0YWJsZSBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy10YWJsZS13cmFwZXJcXFwiIGNlbGxwYWRkaW5nPVxcXCIwXFxcIiBjZWxsc3BhY2luZz1cXFwiMFxcXCIgYm9yZGVyPVxcXCIwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDI0MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiA5MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxMjBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogOTBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPklEXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5pZFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlNlcmlhbGl6ZVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5zZXJpYWxpemVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwidHJ1ZVxcXCI+XFx1NjYyRjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJmYWxzZVxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NTQyRlxcdTc1MjhcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJ0ZXh0LWFsaWduOiBjZW50ZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvLWdyb3VwIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIm1hcmdpbjogYXV0b1xcXCIgdi1tb2RlbD1cXFwiYmFzZUluZm8uc3RhdHVzXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcImVuYWJsZVxcXCI+XFx1NjYyRjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJkaXNhYmxlXFxcIj5cXHU1NDI2PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcmFkaW8tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5OYW1lXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5uYW1lXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Q2xhc3NOYW1lXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5jbGFzc05hbWVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5QbGFjZWhvbGRlcjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5wbGFjZWhvbGRlclxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlJlYWRvbmx5XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwidGV4dC1hbGlnbjogY2VudGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpby1ncm91cCB0eXBlPVxcXCJidXR0b25cXFwiIHN0eWxlPVxcXCJtYXJnaW46IGF1dG9cXFwiIHYtbW9kZWw9XFxcImJhc2VJbmZvLmN1c3RSZWFkb25seVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJyZWFkb25seVxcXCI+XFx1NjYyRjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJub3JlYWRvbmx5XFxcIj5cXHU1NDI2PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcmFkaW8tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5EaXNhYmxlZFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJiYXNlSW5mby5jdXN0RGlzYWJsZWRcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwiZGlzYWJsZWRcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwibm9kaXNhYmxlZFxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NjgzN1xcdTVGMEZcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHJvd3M9XFxcIjdcXFwiIHYtbW9kZWw9XFxcImJhc2VJbmZvLnN0eWxlXFxcIj48L3RleHRhcmVhPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NTkwN1xcdTZDRThcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHJvd3M9XFxcIjhcXFwiIHYtbW9kZWw9XFxcImJhc2VJbmZvLmRlc2NcXFwiPjwvdGV4dGFyZWE+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgIDwvdGFibGU+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwiZmQtY29udHJvbC1iaW5kLXRvXCIsIHtcbiAgcHJvcHM6IFtcImJpbmRUb0ZpZWxkUHJvcFwiLCBcImRlZmF1bHRWYWx1ZVByb3BcIiwgXCJ2YWxpZGF0ZVJ1bGVzUHJvcFwiXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgYmluZFRvRmllbGQ6IHtcbiAgICAgICAgdGFibGVJZDogXCJcIixcbiAgICAgICAgdGFibGVOYW1lOiBcIlwiLFxuICAgICAgICB0YWJsZUNhcHRpb246IFwiXCIsXG4gICAgICAgIGZpZWxkTmFtZTogXCJcIixcbiAgICAgICAgZmllbGRDYXB0aW9uOiBcIlwiLFxuICAgICAgICBmaWVsZERhdGFUeXBlOiBcIlwiLFxuICAgICAgICBmaWVsZExlbmd0aDogXCJcIlxuICAgICAgfSxcbiAgICAgIHZhbGlkYXRlUnVsZXM6IHtcbiAgICAgICAgbXNnOiBcIlwiLFxuICAgICAgICBydWxlczogW11cbiAgICAgIH0sXG4gICAgICBkZWZhdWx0VmFsdWU6IHtcbiAgICAgICAgZGVmYXVsdFR5cGU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogXCJcIixcbiAgICAgICAgZGVmYXVsdFRleHQ6IFwiXCJcbiAgICAgIH0sXG4gICAgICB0ZW1wRGF0YToge1xuICAgICAgICBkZWZhdWx0RGlzcGxheVRleHQ6IFwiXCJcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIGJpbmRUb1Byb3A6IGZ1bmN0aW9uIGJpbmRUb1Byb3AobmV3VmFsdWUpIHtcbiAgICAgIGNvbnNvbGUubG9nKG5ld1ZhbHVlKTtcbiAgICB9LFxuICAgIGJpbmRUb0ZpZWxkUHJvcDogZnVuY3Rpb24gYmluZFRvRmllbGRQcm9wKG5ld1ZhbHVlKSB7XG4gICAgICB0aGlzLmJpbmRUb0ZpZWxkID0gbmV3VmFsdWU7XG4gICAgfSxcbiAgICBkZWZhdWx0VmFsdWVQcm9wOiBmdW5jdGlvbiBkZWZhdWx0VmFsdWVQcm9wKG5ld1ZhbHVlKSB7XG4gICAgICB0aGlzLmRlZmF1bHRWYWx1ZSA9IG5ld1ZhbHVlO1xuXG4gICAgICBpZiAoIVN0cmluZ1V0aWxpdHkuSXNOdWxsT3JFbXB0eSh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSkpIHtcbiAgICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHZhbGlkYXRlUnVsZXNQcm9wOiBmdW5jdGlvbiB2YWxpZGF0ZVJ1bGVzUHJvcChuZXdWYWx1ZSkge1xuICAgICAgdGhpcy52YWxpZGF0ZVJ1bGVzID0gbmV3VmFsdWU7XG4gICAgfVxuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHRoaXMuYmluZFRvRmllbGQgPSB0aGlzLmJpbmRUb0ZpZWxkUHJvcDtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIHNldENvbXBsZXRlZDogZnVuY3Rpb24gc2V0Q29tcGxldGVkKCkge1xuICAgICAgdGhpcy4kZW1pdCgnb24tc2V0LWNvbXBsZXRlZCcsIHRoaXMuYmluZFRvRmllbGQsIHRoaXMuZGVmYXVsdFZhbHVlLCB0aGlzLnZhbGlkYXRlUnVsZXMpO1xuICAgIH0sXG4gICAgc2VsZWN0QmluZEZpZWxkVmlldzogZnVuY3Rpb24gc2VsZWN0QmluZEZpZWxkVmlldygpIHtcbiAgICAgIHdpbmRvdy5fU2VsZWN0QmluZE9iaiA9IHRoaXM7XG4gICAgICB3aW5kb3cucGFyZW50LmFwcEZvcm0uc2VsZWN0QmluZFRvU2luZ2xlRmllbGREaWFsb2dCZWdpbih3aW5kb3csIHRoaXMuZ2V0U2VsZWN0RmllbGRSZXN1bHRWYWx1ZSgpKTtcbiAgICB9LFxuICAgIHNldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWU6IGZ1bmN0aW9uIHNldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWUocmVzdWx0KSB7XG4gICAgICB0aGlzLmJpbmRUb0ZpZWxkID0ge307XG5cbiAgICAgIGlmIChyZXN1bHQgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLmZpZWxkTmFtZSA9IHJlc3VsdC5maWVsZE5hbWU7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQudGFibGVJZCA9IHJlc3VsdC50YWJsZUlkO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlTmFtZSA9IHJlc3VsdC50YWJsZU5hbWU7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQudGFibGVDYXB0aW9uID0gcmVzdWx0LnRhYmxlQ2FwdGlvbjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZENhcHRpb24gPSByZXN1bHQuZmllbGRDYXB0aW9uO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLmZpZWxkRGF0YVR5cGUgPSByZXN1bHQuZmllbGREYXRhVHlwZTtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZExlbmd0aCA9IHJlc3VsdC5maWVsZExlbmd0aDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQuZmllbGROYW1lID0gXCJcIjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC50YWJsZUlkID0gXCJcIjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC50YWJsZU5hbWUgPSBcIlwiO1xuICAgICAgICB0aGlzLmJpbmRUb0ZpZWxkLnRhYmxlQ2FwdGlvbiA9IFwiXCI7XG4gICAgICAgIHRoaXMuYmluZFRvRmllbGQuZmllbGRDYXB0aW9uID0gXCJcIjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZERhdGFUeXBlID0gXCJcIjtcbiAgICAgICAgdGhpcy5iaW5kVG9GaWVsZC5maWVsZExlbmd0aCA9IFwiXCI7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2V0Q29tcGxldGVkKCk7XG4gICAgfSxcbiAgICBnZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlOiBmdW5jdGlvbiBnZXRTZWxlY3RGaWVsZFJlc3VsdFZhbHVlKCkge1xuICAgICAgcmV0dXJuIEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKHRoaXMuYmluZFRvRmllbGQpO1xuICAgIH0sXG4gICAgc2VsZWN0RGVmYXVsdFZhbHVlVmlldzogZnVuY3Rpb24gc2VsZWN0RGVmYXVsdFZhbHVlVmlldygpIHtcbiAgICAgIHdpbmRvdy5fU2VsZWN0QmluZE9iaiA9IHRoaXM7XG4gICAgICB3aW5kb3cucGFyZW50LmFwcEZvcm0uc2VsZWN0RGVmYXVsdFZhbHVlRGlhbG9nQmVnaW4od2luZG93LCBudWxsKTtcbiAgICB9LFxuICAgIHNldFNlbGVjdEVudlZhcmlhYmxlUmVzdWx0VmFsdWU6IGZ1bmN0aW9uIHNldFNlbGVjdEVudlZhcmlhYmxlUmVzdWx0VmFsdWUocmVzdWx0KSB7XG4gICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUgPSByZXN1bHQuVHlwZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFZhbHVlID0gcmVzdWx0LlZhbHVlO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCA9IHJlc3VsdC5UZXh0O1xuICAgICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IERlZmF1bHRWYWx1ZVV0aWxpdHkuZm9ybWF0VGV4dCh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSwgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUgPSBcIlwiO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VmFsdWUgPSBcIlwiO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCA9IFwiXCI7XG4gICAgICAgIHRoaXMudGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0ID0gXCJcIjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZXRDb21wbGV0ZWQoKTtcbiAgICB9LFxuICAgIHNlbGVjdFZhbGlkYXRlUnVsZVZpZXc6IGZ1bmN0aW9uIHNlbGVjdFZhbGlkYXRlUnVsZVZpZXcoKSB7XG4gICAgICB3aW5kb3cuX1NlbGVjdEJpbmRPYmogPSB0aGlzO1xuICAgICAgd2luZG93LnBhcmVudC5hcHBGb3JtLnNlbGVjdFZhbGlkYXRlUnVsZURpYWxvZ0JlZ2luKHdpbmRvdywgdGhpcy5nZXRTZWxlY3RWYWxpZGF0ZVJ1bGVSZXN1bHRWYWx1ZSgpKTtcbiAgICB9LFxuICAgIHNldFNlbGVjdFZhbGlkYXRlUnVsZVJlc3VsdFZhbHVlOiBmdW5jdGlvbiBzZXRTZWxlY3RWYWxpZGF0ZVJ1bGVSZXN1bHRWYWx1ZShyZXN1bHQpIHtcbiAgICAgIGlmIChyZXN1bHQgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnZhbGlkYXRlUnVsZXMgPSByZXN1bHQ7XG4gICAgICAgIHRoaXMuc2V0Q29tcGxldGVkKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnZhbGlkYXRlUnVsZXMubXNnID0gXCJcIjtcbiAgICAgICAgdGhpcy52YWxpZGF0ZVJ1bGVzLnJ1bGVzID0gW107XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXRTZWxlY3RWYWxpZGF0ZVJ1bGVSZXN1bHRWYWx1ZTogZnVuY3Rpb24gZ2V0U2VsZWN0VmFsaWRhdGVSdWxlUmVzdWx0VmFsdWUoKSB7XG4gICAgICByZXR1cm4gdGhpcy52YWxpZGF0ZVJ1bGVzO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPHRhYmxlIGNlbGxwYWRkaW5nPVxcXCIwXFxcIiBjZWxsc3BhY2luZz1cXFwiMFxcXCIgYm9yZGVyPVxcXCIwXFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy10YWJsZS13cmFwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxMDBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMjgwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgLz5cXG4gICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiNFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU3RUQxXFx1NUI5QVxcdTUyMzBcXHU4ODY4PGJ1dHRvbiBjbGFzcz1cXFwiYnRuLXNlbGVjdCBmcmlnaHRcXFwiIHYtb246Y2xpY2s9XFxcInNlbGVjdEJpbmRGaWVsZFZpZXdcXFwiPi4uLjwvYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1ODg2OFxcdTdGMTZcXHU1M0Y3XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIj57e2JpbmRUb0ZpZWxkLnRhYmxlSWR9fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU4ODY4XFx1NTQwRFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3tiaW5kVG9GaWVsZC50YWJsZU5hbWV9fTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU4ODY4XFx1NjgwN1xcdTk4OThcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7YmluZFRvRmllbGQudGFibGVDYXB0aW9ufX08L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NUI1N1xcdTZCQjVcXHU1NDBEXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e2JpbmRUb0ZpZWxkLmZpZWxkTmFtZX19PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTVCNTdcXHU2QkI1XFx1NjgwN1xcdTk4OThcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7YmluZFRvRmllbGQuZmllbGRDYXB0aW9ufX08L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1N0M3QlxcdTU3OEJcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7YmluZFRvRmllbGQuZmllbGREYXRhVHlwZX19PC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTk1N0ZcXHU1RUE2XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e2JpbmRUb0ZpZWxkLmZpZWxkTGVuZ3RofX08L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiNFxcXCI+XFx1OUVEOFxcdThCQTRcXHU1MDNDPGJ1dHRvbiBjbGFzcz1cXFwiYnRuLXNlbGVjdCBmcmlnaHRcXFwiIHYtb246Y2xpY2s9XFxcInNlbGVjdERlZmF1bHRWYWx1ZVZpZXdcXFwiPi4uLjwvYnV0dG9uPjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHIgc3R5bGU9XFxcImhlaWdodDogMzVweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI0XFxcIiBzdHlsZT1cXFwiYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e3RlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dH19XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI0XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTY4MjFcXHU5QThDXFx1ODlDNFxcdTUyMTk8YnV0dG9uIGNsYXNzPVxcXCJidG4tc2VsZWN0IGZyaWdodFxcXCIgdi1vbjpjbGljaz1cXFwic2VsZWN0VmFsaWRhdGVSdWxlVmlld1xcXCI+Li4uPC9idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCI0XFxcIiBzdHlsZT1cXFwiYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZlxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxMDBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlcjtcXFwiPlxcdTYzRDBcXHU3OTNBXFx1NkQ4OFxcdTYwNkZcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e3ZhbGlkYXRlUnVsZXMubXNnfX08L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlcjtcXFwiPlxcdTlBOENcXHU4QkMxXFx1N0M3QlxcdTU3OEI8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJiYWNrZ3JvdW5kOiAjZThlYWVjO3RleHQtYWxpZ246IGNlbnRlcjtcXFwiPlxcdTUzQzJcXHU2NTcwPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHYtZm9yPVxcXCJydWxlSXRlbSBpbiB2YWxpZGF0ZVJ1bGVzLnJ1bGVzXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwiYmFja2dyb3VuZDogI2ZmZmZmZjt0ZXh0LWFsaWduOiBjZW50ZXI7Y29sb3I6ICNhZDkzNjFcXFwiPnt7cnVsZUl0ZW0udmFsaWRhdGVUeXBlfX08L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVxcXCJiYWNrZ3JvdW5kOiAjZmZmZmZmO3RleHQtYWxpZ246IGNlbnRlcjtcXFwiPjxwIHYtaWY9XFxcInJ1bGVJdGVtLnZhbGlkYXRlUGFyYXMgPT09ICcnXFxcIj5cXHU2NUUwXFx1NTNDMlxcdTY1NzA8L3A+PHAgdi1lbHNlPnt7cnVsZUl0ZW0udmFsaWRhdGVQYXJhc319PC9wPjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgIDwvdGFibGU+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwiZmQtY29udHJvbC1kYXRhc291cmNlXCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbm9ybWFsRGF0YVNvdXJjZToge1xuICAgICAgICBkZWZhdWx0SXNOdWxsOiBcInRydWVcIixcbiAgICAgICAgc3FsRGF0YVNvdXJjZTogXCJcIixcbiAgICAgICAgZGljdGlvbmFyeUlkRGF0YVNvdXJjZTogXCJcIixcbiAgICAgICAgcmVzdERhdGFTb3VyY2U6IFwiXCIsXG4gICAgICAgIHN0YXRpY0RhdGFTb3VyY2U6IFwiXCJcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICB3YXRjaDoge30sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGdldFZhbHVlOiBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIHRoaXMubm9ybWFsRGF0YVNvdXJjZS5zcWxEYXRhU291cmNlID0gZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMubm9ybWFsRGF0YVNvdXJjZS5zcWxEYXRhU291cmNlKTtcbiAgICAgIHJldHVybiB0aGlzLm5vcm1hbERhdGFTb3VyY2U7XG4gICAgfSxcbiAgICBzZXRWYWx1ZTogZnVuY3Rpb24gc2V0VmFsdWUobmV3VmFsdWUpIHtcbiAgICAgIHRoaXMubm9ybWFsRGF0YVNvdXJjZSA9IG5ld1ZhbHVlO1xuICAgICAgdGhpcy5ub3JtYWxEYXRhU291cmNlLnNxbERhdGFTb3VyY2UgPSBkZWNvZGVVUklDb21wb25lbnQobmV3VmFsdWUuc3FsRGF0YVNvdXJjZSk7XG4gICAgICB0aGlzLiRyZWZzLnNxbEdlbmVyYWxEZXNpZ25Db21wLnNldFZhbHVlKHRoaXMubm9ybWFsRGF0YVNvdXJjZS5zcWxEYXRhU291cmNlKTtcbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjx0YWJsZSBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCIgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDI4MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAxMDBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1OUVEOFxcdThCQTRcXHU3QTdBXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJub3JtYWxEYXRhU291cmNlLmRlZmF1bHRJc051bGxcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyYWRpbyBsYWJlbD1cXFwidHJ1ZVxcXCI+XFx1NjYyRjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJhZGlvIGxhYmVsPVxcXCJmYWxzZVxcXCI+XFx1NTQyNjwvcmFkaW8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiMlxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU4M0I3XFx1NTNENlxcdTY1NzBcXHU2MzZFXFx1NkU5MFxcdTRGMThcXHU1MTQ4XFx1N0VBN1xcdTUyMkItPlJlc3RcXHU2M0E1XFx1NTNFMy0+XFx1NjcyQ1xcdTU3MzBcXHU2M0E1XFx1NTNFMy0+c3FsLT5cXHU5NzU5XFx1NjAwMVxcdTUwM0NcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1OTc1OVxcdTYwMDFcXHU1MDNDXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTY1NzBcXHU2MzZFXFx1NUI1N1xcdTUxNzhcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIzXFxcIj5cXG5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHJvd3NwYW49XFxcIjJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU1FMXFx1NjU3MFxcdTYzNkVcXHU2RTkwXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT1cXFwiY29sb3I6IHJlZFxcXCI+W0lURVhUXFx1NEUwRUlWQUxVRVxcdThCRjdcXHU0RjdGXFx1NzUyOFxcdTU5MjdcXHU1MTk5XTwvc3Bhbj5cXHU3OTNBXFx1NEY4QjpcXHUzMDEwU0VMRUNUICcxJyBJVEVYVCwnMicgSVZBTFVFXFx1MzAxMVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCIgc3R5bGU9XFxcImJhY2tncm91bmQtY29sb3I6ICNGRkZGRkZcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNxbC1nZW5lcmFsLWRlc2lnbi1jb21wIHJlZj1cXFwic3FsR2VuZXJhbERlc2lnbkNvbXBcXFwiIDpzcWwtZGVzaWduZXItaGVpZ2h0PVxcXCI3NFxcXCIgIHYtbW9kZWw9XFxcIm5vcm1hbERhdGFTb3VyY2Uuc3FsRGF0YVNvdXJjZVxcXCI+PC9zcWwtZ2VuZXJhbC1kZXNpZ24tY29tcD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkVTVFxcdTY1NzBcXHU2MzZFXFx1NkU5MFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjNcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgIDwvdGFibGU+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwiZmQtY29udHJvbC1zZWxlY3QtYmluZC10by1zaW5nbGUtZmllbGQtZGlhbG9nXCIsIHtcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldFRhYmxlc0RhdGFVcmw6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EYXRhQmFzZS9UYWJsZS9HZXRUYWJsZXNGb3JaVHJlZU5vZGVMaXN0XCIsXG4gICAgICAgIGdldFRhYmxlRmllbGRzRGF0YVVybDogXCIvUmVzdC9CdWlsZGVyL0RhdGFTdG9yYWdlL0RhdGFCYXNlL1RhYmxlL0dldFRhYmxlRmllbGRzQnlUYWJsZUlkXCIsXG4gICAgICAgIGdldFRhYmxlc0ZpZWxkc0J5VGFibGVJZHM6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EYXRhQmFzZS9UYWJsZS9HZXRUYWJsZXNGaWVsZHNCeVRhYmxlSWRzXCJcbiAgICAgIH0sXG4gICAgICBzZWxlY3RlZERhdGE6IHtcbiAgICAgICAgdGFibGVJZDogXCJcIixcbiAgICAgICAgdGFibGVOYW1lOiBcIlwiLFxuICAgICAgICB0YWJsZUNhcHRpb246IFwiXCIsXG4gICAgICAgIGZpZWxkTmFtZTogXCJcIixcbiAgICAgICAgZmllbGRDYXB0aW9uOiBcIlwiLFxuICAgICAgICBmaWVsZERhdGFUeXBlOiBcIlwiLFxuICAgICAgICBmaWVsZExlbmd0aDogXCJcIlxuICAgICAgfSxcbiAgICAgIHRhYmxlVHJlZToge1xuICAgICAgICB0YWJsZVRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRhYmxlVHJlZVNldHRpbmc6IHtcbiAgICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICBkYmxDbGlja0V4cGFuZDogZmFsc2UsXG4gICAgICAgICAgICBzaG93TGluZTogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDc3M6IHtcbiAgICAgICAgICAgICAgJ2NvbG9yJzogJ2JsYWNrJyxcbiAgICAgICAgICAgICAgJ2ZvbnQtd2VpZ2h0JzogJ25vcm1hbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNoZWNrOiB7XG4gICAgICAgICAgICBlbmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgbm9jaGVja0luaGVyaXQ6IGZhbHNlLFxuICAgICAgICAgICAgY2hrU3R5bGU6IFwicmFkaW9cIixcbiAgICAgICAgICAgIHJhZGlvVHlwZTogXCJhbGxcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAga2V5OiB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiZGlzcGxheVRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGFyZW50SWRcIixcbiAgICAgICAgICAgICAgcm9vdFBJZDogXCItMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjYWxsYmFjazoge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZERhdGEudGFibGVJZCA9IHRyZWVOb2RlLnRhYmxlSWQ7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRGF0YS50YWJsZU5hbWUgPSB0cmVlTm9kZS50YWJsZU5hbWU7XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRGF0YS50YWJsZUNhcHRpb24gPSB0cmVlTm9kZS50YWJsZUNhcHRpb247XG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkRGF0YS5maWVsZE5hbWUgPSBcIlwiO1xuICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZERhdGEuZmllbGRDYXB0aW9uID0gXCJcIjtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0ZWREYXRhLmZpZWxkRGF0YVR5cGUgPSBcIlwiO1xuICAgICAgICAgICAgICBfc2VsZi5zZWxlY3RlZERhdGEuZmllbGRMZW5ndGggPSBcIlwiO1xuICAgICAgICAgICAgICBfc2VsZi5maWVsZFRhYmxlLmZpZWxkRGF0YSA9IFtdO1xuXG4gICAgICAgICAgICAgIF9zZWxmLmZpbHRlckFsbEZpZWxkc1RvVGFibGUoX3NlbGYuc2VsZWN0ZWREYXRhLnRhYmxlSWQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uRGJsQ2xpY2s6IGZ1bmN0aW9uIG9uRGJsQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHt9LFxuICAgICAgICAgICAgb25Bc3luY1N1Y2Nlc3M6IGZ1bmN0aW9uIG9uQXN5bmNTdWNjZXNzKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlLCBtc2cpIHt9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB0YWJsZVRyZWVEYXRhOiBudWxsLFxuICAgICAgICBzZWxlY3RlZFRhYmxlTmFtZTogXCLml6BcIlxuICAgICAgfSxcbiAgICAgIGZpZWxkVGFibGU6IHtcbiAgICAgICAgZmllbGREYXRhOiBbXSxcbiAgICAgICAgdGFibGVIZWlnaHQ6IDQ3MCxcbiAgICAgICAgY29sdW1uc0NvbmZpZzogW3tcbiAgICAgICAgICB0aXRsZTogJyAnLFxuICAgICAgICAgIHdpZHRoOiA2MCxcbiAgICAgICAgICBrZXk6ICdpc1NlbGVjdGVkVG9CaW5kJyxcbiAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICAgIGlmIChwYXJhbXMucm93LmlzU2VsZWN0ZWRUb0JpbmQgPT0gXCIxXCIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgICAgICAgICBcImNsYXNzXCI6IFwibGlzdC1yb3ctYnV0dG9uLXdyYXBcIlxuICAgICAgICAgICAgICB9LCBbaCgnZGl2Jywge1xuICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogXCJsaXN0LXJvdy1idXR0b24gc2VsZWN0ZWRcIlxuICAgICAgICAgICAgICB9KV0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgICAgICAgICBcImNsYXNzXCI6IFwiXCJcbiAgICAgICAgICAgICAgfSwgXCJcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgdGl0bGU6ICflkI3np7AnLFxuICAgICAgICAgIGtleTogJ2ZpZWxkTmFtZScsXG4gICAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIHRpdGxlOiAn5qCH6aKYJyxcbiAgICAgICAgICBrZXk6ICdmaWVsZENhcHRpb24nLFxuICAgICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICAgIH1dXG4gICAgICB9LFxuICAgICAgb2xkUmVsYXRpb25EYXRhU3RyaW5nOiBcIlwiLFxuICAgICAgcmVsYXRpb25EYXRhOiBudWxsLFxuICAgICAgYWxsRmllbGRzOiBudWxsLFxuICAgICAgb2xkQmluZEZpZWxkRGF0YTogbnVsbFxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGJlZ2luU2VsZWN0OiBmdW5jdGlvbiBiZWdpblNlbGVjdChyZWxhdGlvbkRhdGEsIG9sZEJpbmRGaWVsZERhdGEpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwi5YWz6IGU6KGo5pWw5o2u77yaXCIpO1xuICAgICAgY29uc29sZS5sb2cocmVsYXRpb25EYXRhKTtcbiAgICAgIGNvbnNvbGUubG9nKFwi5bey57uP57uR5a6a5LqG55qE5pWw5o2u77yaXCIpO1xuICAgICAgY29uc29sZS5sb2cob2xkQmluZEZpZWxkRGF0YSk7XG5cbiAgICAgIGlmIChyZWxhdGlvbkRhdGEgPT0gbnVsbCB8fCByZWxhdGlvbkRhdGEgPT0gXCJcIiB8fCByZWxhdGlvbkRhdGEubGVuZ3RoID09IDApIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydFRleHQoXCLor7flhYjorr7nva7ooajljZXnmoTmlbDmja7lhbPogZTvvIFcIik7XG4gICAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLXdpZGdldC1vdmVybGF5XCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMCk7XG4gICAgICAgICQod2luZG93LmRvY3VtZW50KS5maW5kKFwiLnVpLWRpYWxvZ1wiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDEpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5mZENvbnRyb2xTZWxlY3RCaW5kVG9TaW5nbGVGaWVsZERpYWxvZ1dyYXA7XG4gICAgICB2YXIgaGVpZ2h0ID0gNDUwO1xuICAgICAgRGlhbG9nVXRpbGl0eS5EaWFsb2dFbGVtT2JqKGVsZW0sIHtcbiAgICAgICAgbW9kYWw6IHRydWUsXG4gICAgICAgIGhlaWdodDogNjgwLFxuICAgICAgICB3aWR0aDogOTgwLFxuICAgICAgICB0aXRsZTogXCLpgInmi6nnu5HlrprlrZfmrrVcIlxuICAgICAgfSk7XG4gICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS13aWRnZXQtb3ZlcmxheVwiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDApO1xuICAgICAgJCh3aW5kb3cuZG9jdW1lbnQpLmZpbmQoXCIudWktZGlhbG9nXCIpLmNzcyhcInpJbmRleFwiLCAxMDEwMSk7XG4gICAgICB0aGlzLm9sZEJpbmRGaWVsZERhdGEgPSBvbGRCaW5kRmllbGREYXRhO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEgPSBKc29uVXRpbGl0eS5DbG9uZVNpbXBsZShvbGRCaW5kRmllbGREYXRhKTtcblxuICAgICAgaWYgKEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyhyZWxhdGlvbkRhdGEpICE9IHRoaXMub2xkUmVsYXRpb25EYXRhU3RyaW5nKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVsYXRpb25EYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgcmVsYXRpb25EYXRhW2ldLmRpc3BsYXlUZXh0ID0gcmVsYXRpb25EYXRhW2ldLnRhYmxlTmFtZSArIFwiW1wiICsgcmVsYXRpb25EYXRhW2ldLnRhYmxlQ2FwdGlvbiArIFwiXShcIiArIHJlbGF0aW9uRGF0YVtpXS5yZWxhdGlvblR5cGUgKyBcIilcIjtcblxuICAgICAgICAgIGlmIChyZWxhdGlvbkRhdGFbaV0ucGFyZW50SWQgPT0gXCItMVwiKSB7XG4gICAgICAgICAgICByZWxhdGlvbkRhdGFbaV0uZGlzcGxheVRleHQgPSByZWxhdGlvbkRhdGFbaV0udGFibGVOYW1lICsgXCJbXCIgKyByZWxhdGlvbkRhdGFbaV0udGFibGVDYXB0aW9uICsgXCJdXCI7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmVsYXRpb25EYXRhW2ldLmljb24gPSBcIi4uLy4uLy4uL1RoZW1lcy9QbmcxNlgxNi90YWJsZS5wbmdcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudGFibGVUcmVlLnRhYmxlVHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKFwiI3RhYmxlWlRyZWVVTFwiKSwgdGhpcy50YWJsZVRyZWUudGFibGVUcmVlU2V0dGluZywgcmVsYXRpb25EYXRhKTtcbiAgICAgICAgdGhpcy50YWJsZVRyZWUudGFibGVUcmVlT2JqLmV4cGFuZEFsbCh0cnVlKTtcbiAgICAgICAgdGhpcy5vbGRSZWxhdGlvbkRhdGFTdHJpbmcgPSBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcocmVsYXRpb25EYXRhKTtcbiAgICAgICAgdGhpcy5yZWxhdGlvbkRhdGEgPSByZWxhdGlvbkRhdGE7XG4gICAgICAgIHRoaXMuZ2V0QWxsVGFibGVzRmllbGRzKHJlbGF0aW9uRGF0YSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnJlc2V0RmllbGRUb1NlbGVjdGVkU3RhdHVzKHRoaXMuYWxsRmllbGRzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG9sZEJpbmRGaWVsZERhdGEgJiYgb2xkQmluZEZpZWxkRGF0YS50YWJsZUlkICYmIG9sZEJpbmRGaWVsZERhdGEudGFibGVJZCAhPSBcIlwiKSB7XG4gICAgICAgIHZhciBzZWxlY3RlZE5vZGUgPSB0aGlzLnRhYmxlVHJlZS50YWJsZVRyZWVPYmouZ2V0Tm9kZUJ5UGFyYW0oXCJ0YWJsZUlkXCIsIG9sZEJpbmRGaWVsZERhdGEudGFibGVJZCk7XG4gICAgICAgIHRoaXMudGFibGVUcmVlLnRhYmxlVHJlZU9iai5zZWxlY3ROb2RlKHNlbGVjdGVkTm9kZSwgZmFsc2UsIHRydWUpO1xuICAgICAgfVxuICAgIH0sXG4gICAgcmVzZXRGaWVsZFRvU2VsZWN0ZWRTdGF0dXM6IGZ1bmN0aW9uIHJlc2V0RmllbGRUb1NlbGVjdGVkU3RhdHVzKF9hbGxGaWVsZHMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5maWVsZFRhYmxlLmZpZWxkRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLmZpZWxkVGFibGUuZmllbGREYXRhW2ldLmlzU2VsZWN0ZWRUb0JpbmQgPSBcIjBcIjtcbiAgICAgIH1cblxuICAgICAgaWYgKF9hbGxGaWVsZHMpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfYWxsRmllbGRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgX2FsbEZpZWxkc1tpXS5pc1NlbGVjdGVkVG9CaW5kID0gXCIwXCI7XG5cbiAgICAgICAgICBpZiAoX2FsbEZpZWxkc1tpXS5maWVsZFRhYmxlSWQgPT0gdGhpcy5vbGRCaW5kRmllbGREYXRhLnRhYmxlSWQpIHtcbiAgICAgICAgICAgIGlmIChfYWxsRmllbGRzW2ldLmZpZWxkTmFtZSA9PSB0aGlzLm9sZEJpbmRGaWVsZERhdGEuZmllbGROYW1lKSB7XG4gICAgICAgICAgICAgIF9hbGxGaWVsZHNbaV0uaXNTZWxlY3RlZFRvQmluZCA9IFwiMVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuYWxsRmllbGRzID0gX2FsbEZpZWxkcztcbiAgICAgIH1cblxuICAgICAgdGhpcy5maWx0ZXJBbGxGaWVsZHNUb1RhYmxlKHRoaXMub2xkQmluZEZpZWxkRGF0YS50YWJsZUlkKTtcbiAgICB9LFxuICAgIGdldEFsbFRhYmxlc0ZpZWxkczogZnVuY3Rpb24gZ2V0QWxsVGFibGVzRmllbGRzKHJlbGF0aW9uRGF0YSkge1xuICAgICAgdmFyIHRhYmxlSWRzID0gW107XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVsYXRpb25EYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRhYmxlSWRzLnB1c2gocmVsYXRpb25EYXRhW2ldLnRhYmxlSWQpO1xuICAgICAgfVxuXG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYWNJbnRlcmZhY2UuZ2V0VGFibGVzRmllbGRzQnlUYWJsZUlkcywge1xuICAgICAgICBcInRhYmxlSWRzXCI6IHRhYmxlSWRzXG4gICAgICB9LCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIHZhciBhbGxGaWVsZHMgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICB2YXIgc2luZ2xlVGFibGUgPSByZXN1bHQuZXhLVkRhdGEuVGFibGVzWzBdO1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwi6YeN5paw6I635Y+W5pWw5o2uXCIpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGFsbEZpZWxkcyk7XG5cbiAgICAgICAgICBfc2VsZi5yZXNldEZpZWxkVG9TZWxlY3RlZFN0YXR1cyhhbGxGaWVsZHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH0sXG4gICAgZmlsdGVyQWxsRmllbGRzVG9UYWJsZTogZnVuY3Rpb24gZmlsdGVyQWxsRmllbGRzVG9UYWJsZSh0YWJsZUlkKSB7XG4gICAgICBpZiAodGFibGVJZCkge1xuICAgICAgICB2YXIgZmllbGRzID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmFsbEZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmICh0aGlzLmFsbEZpZWxkc1tpXS5maWVsZFRhYmxlSWQgPT0gdGFibGVJZCkge1xuICAgICAgICAgICAgZmllbGRzLnB1c2godGhpcy5hbGxGaWVsZHNbaV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZmllbGRUYWJsZS5maWVsZERhdGEgPSBmaWVsZHM7XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZmllbGRUYWJsZS5maWVsZERhdGEpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2VsZWN0ZWRGaWVsZDogZnVuY3Rpb24gc2VsZWN0ZWRGaWVsZChzZWxlY3Rpb24sIGluZGV4KSB7XG4gICAgICB0aGlzLnNlbGVjdGVkRGF0YS5maWVsZE5hbWUgPSBzZWxlY3Rpb24uZmllbGROYW1lO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEuZmllbGRDYXB0aW9uID0gc2VsZWN0aW9uLmZpZWxkQ2FwdGlvbjtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRhLmZpZWxkRGF0YVR5cGUgPSBzZWxlY3Rpb24uZmllbGREYXRhVHlwZTtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRhLmZpZWxkTGVuZ3RoID0gc2VsZWN0aW9uLmZpZWxkRGF0YUxlbmd0aDtcbiAgICAgIHZhciBzZWxlY3RlZE5vZGUgPSB0aGlzLnRhYmxlVHJlZS50YWJsZVRyZWVPYmouZ2V0Tm9kZUJ5UGFyYW0oXCJ0YWJsZUlkXCIsIHNlbGVjdGlvbi5maWVsZFRhYmxlSWQpO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEudGFibGVJZCA9IHNlbGVjdGVkTm9kZS50YWJsZUlkO1xuICAgICAgdGhpcy5zZWxlY3RlZERhdGEudGFibGVOYW1lID0gc2VsZWN0ZWROb2RlLnRhYmxlTmFtZTtcbiAgICAgIHRoaXMuc2VsZWN0ZWREYXRhLnRhYmxlQ2FwdGlvbiA9IHNlbGVjdGVkTm9kZS50YWJsZUNhcHRpb247XG4gICAgfSxcbiAgICBzZWxlY3RDb21wbGV0ZTogZnVuY3Rpb24gc2VsZWN0Q29tcGxldGUoKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdGhpcy5zZWxlY3RlZERhdGE7XG5cbiAgICAgIGlmICghU3RyaW5nVXRpbGl0eS5Jc051bGxPckVtcHR5KHJlc3VsdC50YWJsZUlkKSAmJiAhU3RyaW5nVXRpbGl0eS5Jc051bGxPckVtcHR5KHJlc3VsdC5maWVsZE5hbWUpKSB7XG4gICAgICAgIHRoaXMuJGVtaXQoJ29uLXNlbGVjdGVkLWJpbmQtdG8tc2luZ2xlLWZpZWxkJywgcmVzdWx0KTtcbiAgICAgICAgdGhpcy5oYW5kbGVDbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIFwi6K+36YCJ5oup6ZyA6KaB57uR5a6a55qE5a2X5q61IVwiLCBudWxsKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGNsZWFyQ29tcGxldGU6IGZ1bmN0aW9uIGNsZWFyQ29tcGxldGUoKSB7XG4gICAgICB3aW5kb3cuT3BlbmVyV2luZG93T2JqW3RoaXMuZ2V0U2VsZWN0SW5zdGFuY2VOYW1lKCldLnNldFNlbGVjdEZpZWxkUmVzdWx0VmFsdWUobnVsbCk7XG4gICAgICB0aGlzLmhhbmRsZUNsb3NlKCk7XG4gICAgfSxcbiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UoKSB7XG4gICAgICBEaWFsb2dVdGlsaXR5LkNsb3NlRGlhbG9nRWxlbSh0aGlzLiRyZWZzLmZkQ29udHJvbFNlbGVjdEJpbmRUb1NpbmdsZUZpZWxkRGlhbG9nV3JhcCk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2IHJlZj1cXFwiZmRDb250cm9sU2VsZWN0QmluZFRvU2luZ2xlRmllbGREaWFsb2dXcmFwXFxcIiBjbGFzcz1cXFwiZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcCBkZXNpZ24tZGlhbG9nLXdyYXBlci1zaW5nbGUtZGlhbG9nXFxcIiBzdHlsZT1cXFwiZGlzcGxheTogbm9uZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZWxlY3QtdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2aWRlciBvcmllbnRhdGlvbj1cXFwibGVmdFxcXCIgOmRhc2hlZD1cXFwidHJ1ZVxcXCIgc3R5bGU9XFxcImZvbnQtc2l6ZTogMTJweFxcXCI+XFx1OTAwOVxcdTYyRTlcXHU4ODY4PC9kaXZpZGVyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgaWQ9XFxcInR4dFNlYXJjaFRhYmxlVHJlZVxcXCIgc3R5bGU9XFxcIndpZHRoOiAxMDAlO2hlaWdodDogMzJweDttYXJnaW4tdG9wOiAycHhcXFwiIC8+LS0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGlkPVxcXCJ0YWJsZVpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZVxcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic2VsZWN0LWZpZWxkLXdyYXBlciBpdi1saXN0LXBhZ2Utd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdmlkZXIgb3JpZW50YXRpb249XFxcImxlZnRcXFwiIDpkYXNoZWQ9XFxcInRydWVcXFwiIHN0eWxlPVxcXCJmb250LXNpemU6IDEycHhcXFwiPlxcdTkwMDlcXHU2MkU5XFx1NUI1N1xcdTZCQjU8L2RpdmlkZXI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgYm9yZGVyIDpjb2x1bW5zPVxcXCJmaWVsZFRhYmxlLmNvbHVtbnNDb25maWdcXFwiIDpkYXRhPVxcXCJmaWVsZFRhYmxlLmZpZWxkRGF0YVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiaXYtbGlzdC10YWJsZVxcXCIgOmhpZ2hsaWdodC1yb3c9XFxcInRydWVcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG9uLXJvdy1jbGljaz1cXFwic2VsZWN0ZWRGaWVsZFxcXCIgOmhlaWdodD1cXFwiZmllbGRUYWJsZS50YWJsZUhlaWdodFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIG5vLWRhdGEtdGV4dD1cXFwiXFx1OEJGN1xcdTkwMDlcXHU2MkU5XFx1ODg2OFxcXCI+PC9pLXRhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24tb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLWlubmVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwic2VsZWN0Q29tcGxldGUoKVxcXCI+IFxcdTc4NkUgXFx1OEJBNCA8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIEBjbGljaz1cXFwiY2xlYXJDb21wbGV0ZSgpXFxcIj4gXFx1NkUwNSBcXHU3QTdBIDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gQGNsaWNrPVxcXCJoYW5kbGVDbG9zZSgpXFxcIj5cXHU1MTczIFxcdTk1RUQ8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbi1ncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cblZ1ZS5jb21wb25lbnQoXCJpbm5lci1mb3JtLWJ1dHRvbi1saXN0LWNvbXBcIiwge1xuICBwcm9wczogW1wiZm9ybUlkXCJdLFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICByZXR1cm4ge1xuICAgICAgY29sdW1uc0NvbmZpZzogW3tcbiAgICAgICAgdGl0bGU6ICfmoIfpopgnLFxuICAgICAgICBrZXk6ICdjYXB0aW9uJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfnsbvlnosnLFxuICAgICAgICBrZXk6ICdidXR0b25UeXBlJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfmk43kvZwnLFxuICAgICAgICBrZXk6ICdpZCcsXG4gICAgICAgIHdpZHRoOiAyMDAsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoLCBwYXJhbXMpIHtcbiAgICAgICAgICB2YXIgYnV0dG9ucyA9IFtdO1xuXG4gICAgICAgICAgaWYgKHBhcmFtcy5yb3cuYnV0dG9uVHlwZSA9PSBcIuS/neWtmOaMiemSrlwiKSB7XG4gICAgICAgICAgICBidXR0b25zLnB1c2goTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5FZGl0QnV0dG9uKGgsIHBhcmFtcywgXCJpZFwiLCBfc2VsZikpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJ1dHRvbnMucHVzaChMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUlubmVyQnV0dG9uLkRlbGV0ZUJ1dHRvbihoLCBwYXJhbXMsIFwiaWRcIiwgX3NlbGYpKTtcbiAgICAgICAgICBidXR0b25zLnB1c2goTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVJbm5lckJ1dHRvbi5Nb3ZlVXBCdXR0b24oaCwgcGFyYW1zLCBcImlkXCIsIF9zZWxmKSk7XG4gICAgICAgICAgYnV0dG9ucy5wdXNoKExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uTW92ZURvd25CdXR0b24oaCwgcGFyYW1zLCBcImlkXCIsIF9zZWxmKSk7XG4gICAgICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgICAgIFwiY2xhc3NcIjogXCJsaXN0LXJvdy1idXR0b24td3JhcFwiXG4gICAgICAgICAgfSwgYnV0dG9ucyk7XG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgdGFibGVEYXRhOiBbXSxcbiAgICAgIGlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhOiB7XG4gICAgICAgIGNhcHRpb246IFwiXCIsXG4gICAgICAgIHNhdmVBbmRDbG9zZTogXCJ0cnVlXCIsXG4gICAgICAgIGFwaXM6IFtdLFxuICAgICAgICBmaWVsZHM6IFtdLFxuICAgICAgICBpZDogXCJcIixcbiAgICAgICAgYnV0dG9uVHlwZTogXCLkv53lrZjmjInpkq5cIixcbiAgICAgICAgY3VzdFNlcnZlclJlc29sdmVNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RTZXJ2ZXJSZXNvbHZlTWV0aG9kUGFyYTogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2RQYXJhOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2RQYXJhOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZFBhcmE6IFwiXCJcbiAgICAgIH0sXG4gICAgICBhcGk6IHtcbiAgICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgICBnZXRBUElEYXRhOiBcIi9SZXN0L0J1aWxkZXIvQXBpSXRlbS9HZXRBUElTRm9yWlRyZWVOb2RlTGlzdFwiXG4gICAgICAgIH0sXG4gICAgICAgIGFwaVRyZWVPYmo6IG51bGwsXG4gICAgICAgIGFwaVRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIGNoa1N0eWxlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGFyZW50SWRcIixcbiAgICAgICAgICAgICAgcm9vdFBJZDogXCItMVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjYWxsYmFjazoge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSkge1xuICAgICAgICAgICAgICBfc2VsZi5hcGkuYXBpU2VsZWN0RGF0YSA9IHRyZWVOb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXBpRGF0YTogbnVsbCxcbiAgICAgICAgYXBpU2VsZWN0RGF0YTogbnVsbCxcbiAgICAgICAgZWRpdFRhYmxlT2JqZWN0OiBudWxsLFxuICAgICAgICBlZGl0VGFibGVDb25maWc6IHtcbiAgICAgICAgICBTdGF0dXM6IFwiRWRpdFwiLFxuICAgICAgICAgIEFkZEFmdGVyUm93RXZlbnQ6IG51bGwsXG4gICAgICAgICAgRGF0YUZpZWxkOiBcImZpZWxkTmFtZVwiLFxuICAgICAgICAgIFRlbXBsYXRlczogW3tcbiAgICAgICAgICAgIFRpdGxlOiBcIkFQSeWQjeensFwiLFxuICAgICAgICAgICAgQmluZE5hbWU6IFwiVmFsdWVcIixcbiAgICAgICAgICAgIFJlbmRlcmVyOiBcIkVkaXRUYWJsZV9MYWJlbFwiLFxuICAgICAgICAgICAgVGl0bGVDZWxsQ2xhc3NOYW1lOiBcIlRpdGxlQ2VsbFwiLFxuICAgICAgICAgICAgRm9ybWF0ZXI6IGZ1bmN0aW9uIEZvcm1hdGVyKHZhbHVlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfc2VsZi5nZXRBUElUZXh0KHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBUaXRsZTogXCLosIPnlKjpobrluo9cIixcbiAgICAgICAgICAgIEJpbmROYW1lOiBcIlJ1blRpbWVcIixcbiAgICAgICAgICAgIFJlbmRlcmVyOiBcIkVkaXRUYWJsZV9TZWxlY3RcIixcbiAgICAgICAgICAgIENsaWVudERhdGFTb3VyY2U6IFt7XG4gICAgICAgICAgICAgIFwiVGV4dFwiOiBcIuS5i+WJjVwiLFxuICAgICAgICAgICAgICBcIlZhbHVlXCI6IFwi5LmL5YmNXCJcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgXCJUZXh0XCI6IFwi5LmL5ZCOXCIsXG4gICAgICAgICAgICAgIFwiVmFsdWVcIjogXCLkuYvlkI5cIlxuICAgICAgICAgICAgfV0sXG4gICAgICAgICAgICBXaWR0aDogMTAwXG4gICAgICAgICAgfV0sXG4gICAgICAgICAgUm93SWRDcmVhdGVyOiBmdW5jdGlvbiBSb3dJZENyZWF0ZXIoKSB7fSxcbiAgICAgICAgICBUYWJsZUNsYXNzOiBcImVkaXQtdGFibGVcIixcbiAgICAgICAgICBSZW5kZXJlclRvOiBcImFwaUNvbnRhaW5lclwiLFxuICAgICAgICAgIFRhYmxlSWQ6IFwiYXBpQ29udGFpbmVyVGFibGVcIixcbiAgICAgICAgICBUYWJsZUF0dHJzOiB7XG4gICAgICAgICAgICBjZWxscGFkZGluZzogXCIxXCIsXG4gICAgICAgICAgICBjZWxsc3BhY2luZzogXCIxXCIsXG4gICAgICAgICAgICBib3JkZXI6IFwiMVwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZmllbGQ6IHtcbiAgICAgICAgYWNJbnRlcmZhY2U6IHtcbiAgICAgICAgICBnZXRGb3JtTWFpblRhYmxlRmllbGRzOiBcIi9SZXN0L0J1aWxkZXIvRm9ybS9HZXRGb3JtTWFpblRhYmxlRmllbGRzXCJcbiAgICAgICAgfSxcbiAgICAgICAgZWRpdFRhYmxlT2JqZWN0OiBudWxsLFxuICAgICAgICBlZGl0VGFibGVDb25maWc6IHtcbiAgICAgICAgICBTdGF0dXM6IFwiRWRpdFwiLFxuICAgICAgICAgIEFkZEFmdGVyUm93RXZlbnQ6IG51bGwsXG4gICAgICAgICAgRGF0YUZpZWxkOiBcImZpZWxkTmFtZVwiLFxuICAgICAgICAgIFRlbXBsYXRlczogW3tcbiAgICAgICAgICAgIFRpdGxlOiBcIuihqOWQjeagh+mimFwiLFxuICAgICAgICAgICAgQmluZE5hbWU6IFwiVGFibGVOYW1lXCIsXG4gICAgICAgICAgICBSZW5kZXJlcjogXCJFZGl0VGFibGVfTGFiZWxcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIFRpdGxlOiBcIuWtl+auteagh+mimFwiLFxuICAgICAgICAgICAgQmluZE5hbWU6IFwiRmllbGROYW1lXCIsXG4gICAgICAgICAgICBSZW5kZXJlcjogXCJFZGl0VGFibGVfU2VsZWN0XCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBUaXRsZTogXCLpu5jorqTlgLxcIixcbiAgICAgICAgICAgIEJpbmROYW1lOiBcIkRlZmF1bHRWYWx1ZVwiLFxuICAgICAgICAgICAgUmVuZGVyZXI6IFwiRWRpdFRhYmxlX1NlbGVjdERlZmF1bHRWYWx1ZVwiLFxuICAgICAgICAgICAgSGlkZGVuOiBmYWxzZVxuICAgICAgICAgIH1dLFxuICAgICAgICAgIFJvd0lkQ3JlYXRlcjogZnVuY3Rpb24gUm93SWRDcmVhdGVyKCkge30sXG4gICAgICAgICAgVGFibGVDbGFzczogXCJlZGl0LXRhYmxlXCIsXG4gICAgICAgICAgUmVuZGVyZXJUbzogXCJmaWVsZENvbnRhaW5lclwiLFxuICAgICAgICAgIFRhYmxlSWQ6IFwiZmllbGRDb250YWluZXJUYWJsZVwiLFxuICAgICAgICAgIFRhYmxlQXR0cnM6IHtcbiAgICAgICAgICAgIGNlbGxwYWRkaW5nOiBcIjFcIixcbiAgICAgICAgICAgIGNlbGxzcGFjaW5nOiBcIjFcIixcbiAgICAgICAgICAgIGJvcmRlcjogXCIxXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvbGRGb3JtSWQ6IFwiXCJcbiAgICB9O1xuICB9LFxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICByZWFkeTogZnVuY3Rpb24gcmVhZHkodGFibGVEYXRhSnNvbikge1xuICAgICAgaWYgKHRhYmxlRGF0YUpzb24gIT0gbnVsbCAmJiB0YWJsZURhdGFKc29uICE9IFwiXCIpIHtcbiAgICAgICAgdGhpcy50YWJsZURhdGEgPSBKc29uVXRpbGl0eS5TdHJpbmdUb0pzb24odGFibGVEYXRhSnNvbik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYmluZEFQSVRyZWVBbmRJbml0RWRpdFRhYmxlKG51bGwpO1xuICAgIH0sXG4gICAgZ2V0SnNvbjogZnVuY3Rpb24gZ2V0SnNvbigpIHtcbiAgICAgIHJldHVybiBKc29uVXRpbGl0eS5Kc29uVG9TdHJpbmcodGhpcy50YWJsZURhdGEpO1xuICAgIH0sXG4gICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKGRpYWxvZ0VsZW0pIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnNbZGlhbG9nRWxlbV0pO1xuICAgIH0sXG4gICAgZWRpdDogZnVuY3Rpb24gZWRpdChpZCwgcGFyYW1zKSB7XG4gICAgICBpZiAocGFyYW1zLnJvd1tcImJ1dHRvblR5cGVcIl0gPT0gXCLkv53lrZjmjInpkq5cIikge1xuICAgICAgICB0aGlzLmVkaXRJbm5lckZvcm1TYXZlQnV0dG9uKHBhcmFtcyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBkZWw6IGZ1bmN0aW9uIGRlbChpZCwgcGFyYW1zKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudGFibGVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLnRhYmxlRGF0YVtpXS5pZCA9PSBpZCkge1xuICAgICAgICAgIEFycmF5VXRpbGl0eS5EZWxldGUodGhpcy50YWJsZURhdGEsIGkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBtb3ZlVXA6IGZ1bmN0aW9uIG1vdmVVcChpZCwgcGFyYW1zKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudGFibGVEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLnRhYmxlRGF0YVtpXS5pZCA9PSBpZCkge1xuICAgICAgICAgIEFycmF5VXRpbGl0eS5Nb3ZlVXAodGhpcy50YWJsZURhdGEsIGkpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgbW92ZURvd246IGZ1bmN0aW9uIG1vdmVEb3duKGlkLCBwYXJhbXMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50YWJsZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHRoaXMudGFibGVEYXRhW2ldLmlkID09IGlkKSB7XG4gICAgICAgICAgQXJyYXlVdGlsaXR5Lk1vdmVEb3duKHRoaXMudGFibGVEYXRhLCBpKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGFkZElubmVyRm9ybVNhdmVCdXR0b246IGZ1bmN0aW9uIGFkZElubmVyRm9ybVNhdmVCdXR0b24oKSB7XG4gICAgICBpZiAodGhpcy5mb3JtSWQgIT0gbnVsbCAmJiB0aGlzLmZvcm1JZCAhPSBcIlwiKSB7XG4gICAgICAgIHRoaXMuZWRpdFNhdmVCdXR0b25TdGF0dWMgPSBcImFkZFwiO1xuICAgICAgICB0aGlzLnJlc2V0SW5uZXJTYXZlQnV0dG9uRGF0YSgpO1xuICAgICAgICB2YXIgZWxlbSA9IHRoaXMuJHJlZnMuaW5uZXJGb3JtQnV0dG9uRWRpdDtcbiAgICAgICAgRGlhbG9nVXRpbGl0eS5EaWFsb2dFbGVtT2JqKGVsZW0sIHtcbiAgICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgICBoZWlnaHQ6IDUyMCxcbiAgICAgICAgICB3aWR0aDogNzIwLFxuICAgICAgICAgIHRpdGxlOiBcIueql+S9k+WGheaMiemSrlwiXG4gICAgICAgIH0pO1xuICAgICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS13aWRnZXQtb3ZlcmxheVwiKS5jc3MoXCJ6SW5kZXhcIiwgMTAxMDApO1xuICAgICAgICAkKHdpbmRvdy5kb2N1bWVudCkuZmluZChcIi51aS1kaWFsb2dcIikuY3NzKFwiekluZGV4XCIsIDEwMTAxKTtcbiAgICAgICAgdGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YS5pZCA9IFwiaW5uZXJfZm9ybV9idXR0b25fXCIgKyBTdHJpbmdVdGlsaXR5LlRpbWVzdGFtcCgpO1xuICAgICAgICB0aGlzLmJpbmRUYWJsZUZpZWxkcyhudWxsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+35YWI6K6+572u57uR5a6a55qE56qX5L2TIVwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGVkaXRJbm5lckZvcm1TYXZlQnV0dG9uOiBmdW5jdGlvbiBlZGl0SW5uZXJGb3JtU2F2ZUJ1dHRvbihwYXJhbXMpIHtcbiAgICAgIHRoaXMuYWRkSW5uZXJGb3JtU2F2ZUJ1dHRvbigpO1xuICAgICAgdGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YSA9IEpzb25VdGlsaXR5LkNsb25lU3RyaW5naWZ5KHBhcmFtcy5yb3cpO1xuICAgICAgdGhpcy5lZGl0U2F2ZUJ1dHRvblN0YXR1YyA9IFwiZWRpdFwiO1xuICAgICAgdGhpcy5iaW5kQVBJVHJlZUFuZEluaXRFZGl0VGFibGUodGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YS5hcGlzKTtcbiAgICAgIHRoaXMuYmluZFRhYmxlRmllbGRzKHRoaXMuaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuZmllbGRzKTtcbiAgICB9LFxuICAgIHJlc2V0SW5uZXJTYXZlQnV0dG9uRGF0YTogZnVuY3Rpb24gcmVzZXRJbm5lclNhdmVCdXR0b25EYXRhKCkge1xuICAgICAgdGhpcy5pbm5lclNhdmVCdXR0b25FZGl0RGF0YSA9IHtcbiAgICAgICAgY2FwdGlvbjogXCJcIixcbiAgICAgICAgc2F2ZUFuZENsb3NlOiBcInRydWVcIixcbiAgICAgICAgYXBpczogW10sXG4gICAgICAgIGZpZWxkczogW10sXG4gICAgICAgIGlkOiBcIlwiLFxuICAgICAgICBidXR0b25UeXBlOiBcIuS/neWtmOaMiemSrlwiLFxuICAgICAgICBjdXN0U2VydmVyUmVzb2x2ZU1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdFNlcnZlclJlc29sdmVNZXRob2RQYXJhOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJNZXRob2Q6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlck1ldGhvZFBhcmE6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRSZW5kZXJlckFmdGVyTWV0aG9kOiBcIlwiLFxuICAgICAgICBjdXN0Q2xpZW50UmVuZGVyZXJBZnRlck1ldGhvZFBhcmE6IFwiXCIsXG4gICAgICAgIGN1c3RDbGllbnRDbGlja0JlZm9yZU1ldGhvZDogXCJcIixcbiAgICAgICAgY3VzdENsaWVudENsaWNrQmVmb3JlTWV0aG9kUGFyYTogXCJcIlxuICAgICAgfTtcbiAgICB9LFxuICAgIHNhdmVJbm5lclNhdmVCdXR0b25Ub0xpc3Q6IGZ1bmN0aW9uIHNhdmVJbm5lclNhdmVCdXR0b25Ub0xpc3QoKSB7XG4gICAgICB2YXIgc2luZ2xlSW5uZXJGb3JtQnV0dG9uRGF0YSA9IEpzb25VdGlsaXR5LkNsb25lU2ltcGxlKHRoaXMuaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEpO1xuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LkNvbXBsZXRlZEVkaXRpbmdSb3coKTtcbiAgICAgIHNpbmdsZUlubmVyRm9ybUJ1dHRvbkRhdGEuYXBpcyA9IHRoaXMuYXBpLmVkaXRUYWJsZU9iamVjdC5HZXRTZXJpYWxpemVKc29uKCk7XG4gICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5Db21wbGV0ZWRFZGl0aW5nUm93KCk7XG4gICAgICBzaW5nbGVJbm5lckZvcm1CdXR0b25EYXRhLmZpZWxkcyA9IHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LkdldFNlcmlhbGl6ZUpzb24oKTtcblxuICAgICAgaWYgKHRoaXMuZWRpdFNhdmVCdXR0b25TdGF0dWMgPT0gXCJhZGRcIikge1xuICAgICAgICB0aGlzLnRhYmxlRGF0YS5wdXNoKHNpbmdsZUlubmVyRm9ybUJ1dHRvbkRhdGEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRhYmxlRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmICh0aGlzLnRhYmxlRGF0YVtpXS5pZCA9PSBzaW5nbGVJbm5lckZvcm1CdXR0b25EYXRhLmlkKSB7XG4gICAgICAgICAgICBWdWUuc2V0KHRoaXMudGFibGVEYXRhLCBpLCBzaW5nbGVJbm5lckZvcm1CdXR0b25EYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5oYW5kbGVDbG9zZShcImlubmVyRm9ybUJ1dHRvbkVkaXRcIik7XG4gICAgfSxcbiAgICBiaW5kVGFibGVGaWVsZHM6IGZ1bmN0aW9uIGJpbmRUYWJsZUZpZWxkcyhvbGREYXRhKSB7XG4gICAgICBpZiAodGhpcy5vbGRGb3JtSWQgIT0gdGhpcy5mb3JtSWQpIHtcbiAgICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmZpZWxkLmFjSW50ZXJmYWNlLmdldEZvcm1NYWluVGFibGVGaWVsZHMsIHtcbiAgICAgICAgICBmb3JtSWQ6IHRoaXMuZm9ybUlkXG4gICAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICB2YXIgZmllbGRzRGF0YSA9IFtdO1xuXG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHQuZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgZmllbGRzRGF0YS5wdXNoKHtcbiAgICAgICAgICAgICAgVmFsdWU6IHJlc3VsdC5kYXRhW2ldLmZpZWxkTmFtZSxcbiAgICAgICAgICAgICAgVGV4dDogcmVzdWx0LmRhdGFbaV0uZmllbGRDYXB0aW9uXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZUNvbmZpZy5UZW1wbGF0ZXNbMF0uRGVmYXVsdFZhbHVlID0ge1xuICAgICAgICAgICAgVHlwZTogXCJDb25zdFwiLFxuICAgICAgICAgICAgVmFsdWU6IHJlc3VsdC5kYXRhWzBdLnRhYmxlTmFtZVxuICAgICAgICAgIH07XG4gICAgICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVDb25maWcuVGVtcGxhdGVzWzFdLkNsaWVudERhdGFTb3VyY2UgPSBmaWVsZHNEYXRhO1xuXG4gICAgICAgICAgaWYgKCF0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdCkge1xuICAgICAgICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QgPSBPYmplY3QuY3JlYXRlKEVkaXRUYWJsZSk7XG4gICAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5Jbml0aWFsaXphdGlvbih0aGlzLmZpZWxkLmVkaXRUYWJsZUNvbmZpZyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhpcy5vbGRGb3JtSWQgPSB0aGlzLmZvcm1JZDtcblxuICAgICAgICAgIGlmIChvbGREYXRhKSB7XG4gICAgICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5Mb2FkSnNvbkRhdGEob2xkRGF0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB0aGlzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0KSB7XG4gICAgICAgIHRoaXMuZmllbGQuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZUFsbFJvdygpO1xuICAgICAgfVxuXG4gICAgICBpZiAob2xkRGF0YSAmJiB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdCkge1xuICAgICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5Mb2FkSnNvbkRhdGEob2xkRGF0YSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBhZGRGaWVsZDogZnVuY3Rpb24gYWRkRmllbGQoKSB7XG4gICAgICB0aGlzLmZpZWxkLmVkaXRUYWJsZU9iamVjdC5BZGRFZGl0aW5nUm93QnlUZW1wbGF0ZSgpO1xuICAgIH0sXG4gICAgcmVtb3ZlRmllbGQ6IGZ1bmN0aW9uIHJlbW92ZUZpZWxkKCkge1xuICAgICAgdGhpcy5maWVsZC5lZGl0VGFibGVPYmplY3QuQWRkRWRpdGluZ1Jvd0J5VGVtcGxhdGUoKTtcbiAgICB9LFxuICAgIGFkZElubmVyRm9ybUNsb3NlQnV0dG9uOiBmdW5jdGlvbiBhZGRJbm5lckZvcm1DbG9zZUJ1dHRvbigpIHtcbiAgICAgIHZhciBjbG9zZUJ1dHRvbkRhdGEgPSB7XG4gICAgICAgIGNhcHRpb246IFwi5YWz6ZetXCIsXG4gICAgICAgIGlkOiBcImlubmVyX2Nsb3NlX2J1dHRvbl9cIiArIFN0cmluZ1V0aWxpdHkuVGltZXN0YW1wKCksXG4gICAgICAgIGJ1dHRvblR5cGU6IFwi5YWz6Zet5oyJ6ZKuXCJcbiAgICAgIH07XG4gICAgICB0aGlzLnRhYmxlRGF0YS5wdXNoKGNsb3NlQnV0dG9uRGF0YSk7XG4gICAgfSxcbiAgICBiaW5kQVBJVHJlZUFuZEluaXRFZGl0VGFibGU6IGZ1bmN0aW9uIGJpbmRBUElUcmVlQW5kSW5pdEVkaXRUYWJsZShvbGREYXRhKSB7XG4gICAgICBpZiAoIXRoaXMuYXBpLmFwaURhdGEpIHtcbiAgICAgICAgQWpheFV0aWxpdHkuUG9zdCh0aGlzLmFwaS5hY0ludGVyZmFjZS5nZXRBUElEYXRhLCB7fSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgICAgdGhpcy5hcGkuYXBpRGF0YSA9IHJlc3VsdC5kYXRhO1xuXG4gICAgICAgICAgICBpZiAocmVzdWx0LmRhdGEgIT0gbnVsbCAmJiByZXN1bHQuZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0LmRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmRhdGFbaV0ubm9kZVR5cGVOYW1lID09IFwiR3JvdXBcIikge1xuICAgICAgICAgICAgICAgICAgcmVzdWx0LmRhdGFbaV0uaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvcGFja2FnZS5wbmdcIjtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgcmVzdWx0LmRhdGFbaV0uaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvYXBwbGljYXRpb25fdmlld19jb2x1bW5zLnBuZ1wiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFwaS5hcGlUcmVlT2JqID0gJC5mbi56VHJlZS5pbml0KCQoXCIjYXBpWlRyZWVVTFwiKSwgdGhpcy5hcGkuYXBpVHJlZVNldHRpbmcsIHJlc3VsdC5kYXRhKTtcbiAgICAgICAgICAgIHRoaXMuYXBpLmFwaVRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgICAgICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKHRoaXMuYXBpLmFwaVRyZWVPYmosIHRoaXMuJHJlZnMudHh0X3NlYXJjaF9hcGlfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCByZXN1bHQubWVzc2FnZSwgbnVsbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0ID0gT2JqZWN0LmNyZWF0ZShFZGl0VGFibGUpO1xuICAgICAgICB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QuSW5pdGlhbGl6YXRpb24odGhpcy5hcGkuZWRpdFRhYmxlQ29uZmlnKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZUFsbFJvdygpO1xuXG4gICAgICBpZiAob2xkRGF0YSkge1xuICAgICAgICB0aGlzLmFwaS5lZGl0VGFibGVPYmplY3QuTG9hZEpzb25EYXRhKG9sZERhdGEpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0QXBpQ29uZmlnQW5kQmluZFRvVGFibGU6IGZ1bmN0aW9uIGdldEFwaUNvbmZpZ0FuZEJpbmRUb1RhYmxlKCkge1xuICAgICAgcmV0dXJuO1xuXG4gICAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgICBBamF4VXRpbGl0eS5Qb3N0KHRoaXMuYXBpLmFjSW50ZXJmYWNlLmdldEJ1dHRvbkFwaUNvbmZpZywge30sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgdmFyIGFwaVNlbGVjdERhdGEgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdmFyIGdyb3VwID0ge1xuICAgICAgICAgICAgR3JvdXA6IHJlc3VsdC5kYXRhW2ldLm5hbWVcbiAgICAgICAgICB9O1xuICAgICAgICAgIHZhciBvcHRpb25zID0gW107XG5cbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlc3VsdC5kYXRhW2ldLmJ1dHRvbkFQSVZvTGlzdC5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgb3B0aW9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgVmFsdWU6IHJlc3VsdC5kYXRhW2ldLmJ1dHRvbkFQSVZvTGlzdFtqXS5pZCxcbiAgICAgICAgICAgICAgVGV4dDogcmVzdWx0LmRhdGFbaV0uYnV0dG9uQVBJVm9MaXN0W2pdLm5hbWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGdyb3VwW1wiT3B0aW9uc1wiXSA9IG9wdGlvbnM7XG4gICAgICAgICAgYXBpU2VsZWN0RGF0YS5wdXNoKGdyb3VwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9zZWxmLmFwaS5lZGl0VGFibGVDb25maWcuVGVtcGxhdGVzWzBdLkNsaWVudERhdGFTb3VyY2UgPSBhcGlTZWxlY3REYXRhO1xuICAgICAgICBfc2VsZi5hcGkuZWRpdFRhYmxlT2JqZWN0ID0gT2JqZWN0LmNyZWF0ZShFZGl0VGFibGUpO1xuXG4gICAgICAgIF9zZWxmLmFwaS5lZGl0VGFibGVPYmplY3QuSW5pdGlhbGl6YXRpb24oX3NlbGYuYXBpLmVkaXRUYWJsZUNvbmZpZyk7XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIGFkZEFQSTogZnVuY3Rpb24gYWRkQVBJKCkge1xuICAgICAgaWYgKHRoaXMuYXBpLmFwaVNlbGVjdERhdGEubm9kZVR5cGVOYW1lID09IFwiQVBJXCIpIHtcbiAgICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LkFkZEVkaXRpbmdSb3dCeVRlbXBsYXRlKFtdLCB7XG4gICAgICAgICAgVmFsdWU6IHRoaXMuYXBpLmFwaVNlbGVjdERhdGEudmFsdWUsXG4gICAgICAgICAgUnVuVGltZTogXCLkuYvlkI5cIlxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnRUZXh0KFwi6K+36YCJ5oup6ZyA6KaB5re75Yqg55qEQVBJIVwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHJlbW92ZUFQSTogZnVuY3Rpb24gcmVtb3ZlQVBJKCkge1xuICAgICAgdGhpcy5hcGkuZWRpdFRhYmxlT2JqZWN0LlJlbW92ZVJvdygpO1xuICAgIH0sXG4gICAgZ2V0QVBJVGV4dDogZnVuY3Rpb24gZ2V0QVBJVGV4dCh2YWx1ZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmFwaS5hcGlEYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLmFwaS5hcGlEYXRhW2ldLm5vZGVUeXBlTmFtZSA9PSBcIkFQSVwiKSB7XG4gICAgICAgICAgaWYgKHRoaXMuYXBpLmFwaURhdGFbaV0udmFsdWUgPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaS5hcGlEYXRhW2ldLnRleHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiBzdHlsZT1cXFwiaGVpZ2h0OiAyMTBweFxcXCIgY2xhc3M9XFxcIml2LWxpc3QtcGFnZS13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgcmVmPVxcXCJpbm5lckZvcm1CdXR0b25FZGl0XFxcIiBjbGFzcz1cXFwiaHRtbC1kZXNpZ24tcGx1Z2luLWRpYWxvZy13cmFwZXIgZ2VuZXJhbC1lZGl0LXBhZ2Utd3JhcFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IG5vbmU7bWFyZ2luLXRvcDogMHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGFicyBzaXplPVxcXCJzbWFsbFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWItcGFuZSBsYWJlbD1cXFwiXFx1N0VEMVxcdTVCOUFcXHU0RkUxXFx1NjA2RlxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogNjBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDIyMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTY4MDdcXHU5ODk4XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY2FwdGlvblxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NEZERFxcdTVCNThcXHU1RTc2XFx1NTE3M1xcdTk1RURcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8tZ3JvdXAgdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwibWFyZ2luOiBhdXRvXFxcIiB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5zYXZlQW5kQ2xvc2VcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcInRydWVcXFwiPlxcdTY2MkY8L3JhZGlvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmFkaW8gbGFiZWw9XFxcImZhbHNlXFxcIj5cXHU1NDI2PC9yYWRpbz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JhZGlvLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTVCNTdcXHU2QkI1XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiM1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiaGVpZ2h0OiAxNDBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiBsZWZ0O3dpZHRoOiA5NCVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cXFwiZmllbGRDb250YWluZXJcXFwiIGNsYXNzPVxcXCJlZGl0LXRhYmxlLXdyYXBcXFwiIHN0eWxlPVxcXCJoZWlnaHQ6IDMyMHB4O292ZXJmbG93OiBhdXRvO3dpZHRoOiA5OCU7bWFyZ2luOiBhdXRvXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiByaWdodDt3aWR0aDogNSVcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbi1ncm91cCB2ZXJ0aWNhbD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIGljb249XFxcIm1kLWFkZFxcXCIgQGNsaWNrPVxcXCJhZGRGaWVsZFxcXCI+PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIHR5cGU9XFxcInByaW1hcnlcXFwiIGljb249XFxcIm1kLWNsb3NlXFxcIiBAY2xpY2s9XFxcInJlbW92ZUZpZWxkXFxcIj48L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24tZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWItcGFuZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYi1wYW5lIGxhYmVsPVxcXCJBUElcXHU4QkJFXFx1N0Y2RVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMzIwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiA2MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9jb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwiYmFja2dyb3VuZDogI2ZmZmZmZlxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2VhcmNoIGNsYXNzPVxcXCJpbnB1dF9ib3JkZXJfYm90dG9tXFxcIiByZWY9XFxcInR4dF9zZWFyY2hfYXBpX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVBUElcXHU1NDBEXFx1NzlGMFxcXCI+PC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBpZD1cXFwiYXBpWlRyZWVVTFxcXCIgY2xhc3M9XFxcInp0cmVlXFxcIiBzdHlsZT1cXFwiaGVpZ2h0OiAzMjBweDtvdmVyZmxvdzogYXV0b1xcXCI+PC91bD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XFxcInRleHQtYWxpZ246IGNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwIHZlcnRpY2FsPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIGljb249XFxcIm1kLWFkZFxcXCIgQGNsaWNrPVxcXCJhZGRBUElcXFwiPjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiBzaXplPVxcXCJzbWFsbFxcXCIgdHlwZT1cXFwicHJpbWFyeVxcXCIgaWNvbj1cXFwibWQtY2xvc2VcXFwiIEBjbGljaz1cXFwicmVtb3ZlQVBJXFxcIj48L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cXFwiYmFja2dyb3VuZDogI2ZmZmZmZjtcXFwiIHZhbGlnbj1cXFwidG9wXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVxcXCJhcGlDb250YWluZXJcXFwiIGNsYXNzPVxcXCJlZGl0LXRhYmxlLXdyYXBcXFwiIHN0eWxlPVxcXCJoZWlnaHQ6IDM0MHB4O292ZXJmbG93OiBhdXRvO3dpZHRoOiA5OCU7bWFyZ2luOiBhdXRvXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFiLXBhbmU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWItcGFuZSBsYWJlbD1cXFwiXFx1NUYwMFxcdTUzRDFcXHU2MjY5XFx1NUM1NVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTUwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPklEXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuaWRcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTY3MERcXHU1MkExXFx1N0FFRlxcdTg5RTNcXHU2NzkwXFx1N0M3QlxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmN1c3RTZXJ2ZXJSZXNvbHZlTWV0aG9kXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTYzMDlcXHU5NEFFXFx1OEZEQlxcdTg4NENcXHU2NzBEXFx1NTJBMVxcdTdBRUZcXHU4OUUzXFx1Njc5MFxcdTY1RjYsXFx1N0M3QlxcdTUxNjhcXHU3OUYwLFxcdTVDMDZcXHU4QzAzXFx1NzUyOFxcdThCRTVcXHU3QzdCLFxcdTk3MDBcXHU4OTgxXFx1NUI5RVxcdTczQjBcXHU2M0E1XFx1NTNFM0lGb3JtQnV0dG9uQ3VzdFJlc29sdmVcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NTNDMlxcdTY1NzBcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5jdXN0U2VydmVyUmVzb2x2ZU1ldGhvZFBhcmFcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NjcwRFxcdTUyQTFcXHU3QUVGXFx1ODlFM1xcdTY3OTBcXHU3QzdCXFx1NzY4NFxcdTUzQzJcXHU2NTcwXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTZFMzJcXHU2N0QzXFx1NjVCOVxcdTZDRDVcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5jdXN0Q2xpZW50UmVuZGVyZXJNZXRob2RcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU2NUI5XFx1NkNENSxcXHU2MzA5XFx1OTRBRVxcdTVDMDZcXHU3RUNGXFx1NzUzMVxcdThCRTVcXHU2NUI5XFx1NkNENVxcdTZFMzJcXHU2N0QzLFxcdTY3MDBcXHU3RUM4XFx1NUY2MlxcdTYyMTBcXHU5ODc1XFx1OTc2MlxcdTUxNDNcXHU3RDIwLFxcdTk3MDBcXHU4OTgxXFx1OEZENFxcdTU2REVcXHU2NzAwXFx1N0VDOFxcdTUxNDNcXHU3RDIwXFx1NzY4NEhUTUxcXHU1QkY5XFx1OEM2MVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1M0MyXFx1NjU3MFxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmN1c3RDbGllbnRSZW5kZXJlck1ldGhvZFBhcmFcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwiXFx1NUJBMlxcdTYyMzdcXHU3QUVGXFx1NkUzMlxcdTY3RDNcXHU2NUI5XFx1NkNENVxcdTc2ODRcXHU1M0MyXFx1NjU3MFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXHU1QkEyXFx1NjIzN1xcdTdBRUZcXHU2RTMyXFx1NjdEM1xcdTU0MEVcXHU2NUI5XFx1NkNENVxcdUZGMUE8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHYtbW9kZWw9XFxcImlubmVyU2F2ZUJ1dHRvbkVkaXREYXRhLmN1c3RDbGllbnRSZW5kZXJlckFmdGVyTWV0aG9kXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTZFMzJcXHU2N0QzXFx1NTQwRVxcdThDMDNcXHU3NTI4XFx1NjVCOVxcdTZDRDUsXFx1N0VDRlxcdThGQzdcXHU5RUQ4XFx1OEJBNFxcdTc2ODRcXHU2RTMyXFx1NjdEMyxcXHU2NUUwXFx1OEZENFxcdTU2REVcXHU1MDNDXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTUzQzJcXHU2NTcwXFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY3VzdENsaWVudFJlbmRlcmVyQWZ0ZXJNZXRob2RQYXJhXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTZFMzJcXHU2N0QzXFx1NTQwRVxcdTY1QjlcXHU2Q0Q1XFx1NzY4NFxcdTUzQzJcXHU2NTcwXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTcwQjlcXHU1MUZCXFx1NTI0RFxcdTY1QjlcXHU2Q0Q1XFx1RkYxQTwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgdi1tb2RlbD1cXFwiaW5uZXJTYXZlQnV0dG9uRWRpdERhdGEuY3VzdENsaWVudENsaWNrQmVmb3JlTWV0aG9kXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTcwQjlcXHU1MUZCXFx1OEJFNVxcdTYzMDlcXHU5NEFFXFx1NjVGNlxcdTc2ODRcXHU1MjREXFx1N0Y2RVxcdTY1QjlcXHU2Q0Q1LFxcdTU5ODJcXHU2NzlDXFx1OEZENFxcdTU2REVmYWxzZVxcdTVDMDZcXHU5NjNCXFx1NkI2MlxcdTlFRDhcXHU4QkE0XFx1OEMwM1xcdTc1MjhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFx1NTNDMlxcdTY1NzBcXHVGRjFBPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCB2LW1vZGVsPVxcXCJpbm5lclNhdmVCdXR0b25FZGl0RGF0YS5jdXN0Q2xpZW50Q2xpY2tCZWZvcmVNZXRob2RQYXJhXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdTVCQTJcXHU2MjM3XFx1N0FFRlxcdTcwQjlcXHU1MUZCXFx1NTI0RFxcdTY1QjlcXHU2Q0Q1XFx1NzY4NFxcdTUzQzJcXHU2NTcwXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWItcGFuZT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RhYnM+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uLW91dGVyLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJidXR0b24taW5uZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcInNhdmVJbm5lclNhdmVCdXR0b25Ub0xpc3QoKVxcXCI+IFxcdTRGREQgXFx1NUI1ODwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIEBjbGljaz1cXFwiaGFuZGxlQ2xvc2UoJ2lubmVyRm9ybUJ1dHRvbkVkaXQnKVxcXCI+XFx1NTE3MyBcXHU5NUVEPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uLWdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiaGVpZ2h0OiAyMTBweDt3aWR0aDogMTAwJVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiZmxvYXQ6IGxlZnQ7d2lkdGg6IDg0JVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXRhYmxlIDpoZWlnaHQ9XFxcIjIxMFxcXCIgd2lkdGg9XFxcIjEwMCVcXFwiIHN0cmlwZSBib3JkZXIgOmNvbHVtbnM9XFxcImNvbHVtbnNDb25maWdcXFwiIDpkYXRhPVxcXCJ0YWJsZURhdGFcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cXFwiaXYtbGlzdC10YWJsZVxcXCIgOmhpZ2hsaWdodC1yb3c9XFxcInRydWVcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplPVxcXCJzbWFsbFxcXCI+PC9pLXRhYmxlPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImZsb2F0OiByaWdodDt3aWR0aDogMTUlXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbkdyb3VwIHZlcnRpY2FsPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInN1Y2Nlc3NcXFwiIEBjbGljaz1cXFwiYWRkSW5uZXJGb3JtU2F2ZUJ1dHRvbigpXFxcIiBpY29uPVxcXCJtZC1hZGRcXFwiPlxcdTRGRERcXHU1QjU4XFx1NjMwOVxcdTk0QUU8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIGljb249XFxcIm1kLWFkZFxcXCIgZGlzYWJsZWQ+XFx1NjEwRlxcdTg5QzFcXHU2MzA5XFx1OTRBRTwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJhZGRJbm5lckZvcm1DbG9zZUJ1dHRvbigpXFxcIiBpY29uPVxcXCJtZC1hZGRcXFwiPlxcdTUxNzNcXHU5NUVEXFx1NjMwOVxcdTk0QUU8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbkdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImxpc3Qtc2VhcmNoLWNvbnRyb2wtYmluZC10by1jb21wXCIsIHtcbiAgcHJvcHM6IFtcImJpbmRUb1NlYXJjaEZpZWxkUHJvcFwiLCBcImRhdGFTZXRJZFwiXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGJpbmRUb1NlYXJjaEZpZWxkOiB7XG4gICAgICAgIGNvbHVtblRpdGxlOiBcIlwiLFxuICAgICAgICBjb2x1bW5UYWJsZU5hbWU6IFwiXCIsXG4gICAgICAgIGNvbHVtbk5hbWU6IFwiXCIsXG4gICAgICAgIGNvbHVtbkNhcHRpb246IFwiXCIsXG4gICAgICAgIGNvbHVtbkRhdGFUeXBlTmFtZTogXCJcIixcbiAgICAgICAgY29sdW1uT3BlcmF0b3I6IFwi5Yy56YWNXCJcbiAgICAgIH0sXG4gICAgICBkZWZhdWx0VmFsdWU6IHtcbiAgICAgICAgZGVmYXVsdFR5cGU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogXCJcIixcbiAgICAgICAgZGVmYXVsdFRleHQ6IFwiXCJcbiAgICAgIH0sXG4gICAgICB0cmVlOiB7XG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIGNoa1N0eWxlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGlkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0Q29sdW1uKHRyZWVOb2RlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkRibENsaWNrOiBmdW5jdGlvbiBvbkRibENsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7fSxcbiAgICAgICAgICAgIG9uQXN5bmNTdWNjZXNzOiBmdW5jdGlvbiBvbkFzeW5jU3VjY2VzcyhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSwgbXNnKSB7fVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdHJlZURhdGE6IG51bGxcbiAgICAgIH0sXG4gICAgICB0ZW1wRGF0YToge1xuICAgICAgICBkZWZhdWx0RGlzcGxheVRleHQ6IFwiXCJcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICB3YXRjaDoge1xuICAgIGJpbmRUb1NlYXJjaEZpZWxkUHJvcDogZnVuY3Rpb24gYmluZFRvU2VhcmNoRmllbGRQcm9wKG5ld1ZhbHVlKSB7XG4gICAgICBjb25zb2xlLmxvZyhuZXdWYWx1ZSk7XG4gICAgfSxcbiAgICBkZWZhdWx0VmFsdWVQcm9wOiBmdW5jdGlvbiBkZWZhdWx0VmFsdWVQcm9wKG5ld1ZhbHVlKSB7XG4gICAgICB0aGlzLmRlZmF1bHRWYWx1ZSA9IG5ld1ZhbHVlO1xuXG4gICAgICBpZiAoIVN0cmluZ1V0aWxpdHkuSXNOdWxsT3JFbXB0eSh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSkpIHtcbiAgICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdGhpcy5iaW5kVG9GaWVsZCA9IHRoaXMuYmluZFRvRmllbGRQcm9wO1xuICB9LFxuICBtZXRob2RzOiB7XG4gICAgaW5pdDogZnVuY3Rpb24gaW5pdChkYXRhU2V0UE8pIHtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGFTZXRQTyk7XG4gICAgICB2YXIgdHJlZU5vZGVBcnJheSA9IFtdO1xuICAgICAgdmFyIHJvb3ROb2RlID0ge1xuICAgICAgICBwaWQ6IFwiLTFcIixcbiAgICAgICAgdGV4dDogZGF0YVNldFBPLmRzTmFtZSxcbiAgICAgICAgaWQ6IGRhdGFTZXRQTy5kc0lkLFxuICAgICAgICBub2RlVHlwZTogXCJEYXRhU2V0XCJcbiAgICAgIH07XG4gICAgICB0cmVlTm9kZUFycmF5LnB1c2gocm9vdE5vZGUpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdHJlZU5vZGVBcnJheS5wdXNoKHtcbiAgICAgICAgICBwaWQ6IGRhdGFTZXRQTy5kc0lkLFxuICAgICAgICAgIHRleHQ6IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3RbaV0ucnRUYWJsZUNhcHRpb24sXG4gICAgICAgICAgaWQ6IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3RbaV0ucnRUYWJsZUlkLFxuICAgICAgICAgIG5vZGVUeXBlOiBcIlRhYmxlXCJcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBkYXRhU2V0UE8ucmVsYXRlZFRhYmxlVm9MaXN0W2ldLnRhYmxlRmllbGRQT0xpc3QubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICB2YXIgc2luZ2xlTm9kZSA9IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3RbaV0udGFibGVGaWVsZFBPTGlzdFtqXTtcbiAgICAgICAgICBzaW5nbGVOb2RlLnBpZCA9IGRhdGFTZXRQTy5yZWxhdGVkVGFibGVWb0xpc3RbaV0ucnRUYWJsZUlkO1xuICAgICAgICAgIHNpbmdsZU5vZGUudGV4dCA9IHNpbmdsZU5vZGUuZmllbGRDYXB0aW9uICsgXCJbXCIgKyBzaW5nbGVOb2RlLmZpZWxkTmFtZSArIFwiXVwiO1xuICAgICAgICAgIHNpbmdsZU5vZGUubm9kZVR5cGUgPSBcIlRhYmxlRmllbGRcIjtcbiAgICAgICAgICBzaW5nbGVOb2RlLmlkID0gc2luZ2xlTm9kZS5maWVsZElkO1xuICAgICAgICAgIHNpbmdsZU5vZGUuaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvcGFnZS5wbmdcIjtcbiAgICAgICAgICB0cmVlTm9kZUFycmF5LnB1c2goc2luZ2xlTm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy50cmVlLnRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJCh0aGlzLiRyZWZzLnpUcmVlVUwpLCB0aGlzLnRyZWUudHJlZVNldHRpbmcsIHRyZWVOb2RlQXJyYXkpO1xuICAgICAgdGhpcy50cmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKHRoaXMudHJlZS50cmVlT2JqLCB0aGlzLiRyZWZzLnR4dF9zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgfSxcbiAgICBzZWxlY3RDb2x1bW46IGZ1bmN0aW9uIHNlbGVjdENvbHVtbihmaWVsZFBPKSB7XG4gICAgICBpZiAoZmllbGRQTy5ub2RlVHlwZSA9PSBcIlRhYmxlRmllbGRcIikge1xuICAgICAgICB0aGlzLmJpbmRUb1NlYXJjaEZpZWxkLmNvbHVtblRhYmxlTmFtZSA9IGZpZWxkUE8udGFibGVOYW1lO1xuICAgICAgICB0aGlzLmJpbmRUb1NlYXJjaEZpZWxkLmNvbHVtbk5hbWUgPSBmaWVsZFBPLmZpZWxkTmFtZTtcbiAgICAgICAgdGhpcy5iaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5DYXB0aW9uID0gZmllbGRQTy5maWVsZENhcHRpb247XG4gICAgICAgIHRoaXMuYmluZFRvU2VhcmNoRmllbGQuY29sdW1uRGF0YVR5cGVOYW1lID0gZmllbGRQTy5maWVsZERhdGFUeXBlO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHtcbiAgICAgIGNvbnNvbGUubG9nKHRoaXMuYmluZFRvU2VhcmNoRmllbGQpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYmluZFRvU2VhcmNoRmllbGQ6IHRoaXMuYmluZFRvU2VhcmNoRmllbGQsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogdGhpcy5kZWZhdWx0VmFsdWVcbiAgICAgIH07XG4gICAgfSxcbiAgICBzZXREYXRhOiBmdW5jdGlvbiBzZXREYXRhKGJpbmRUb1NlYXJjaEZpZWxkLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIGNvbnNvbGUubG9nKGJpbmRUb1NlYXJjaEZpZWxkKTtcbiAgICAgIHRoaXMuYmluZFRvU2VhcmNoRmllbGQgPSBiaW5kVG9TZWFyY2hGaWVsZDtcbiAgICAgIHRoaXMuZGVmYXVsdFZhbHVlID0gZGVmYXVsdFZhbHVlO1xuICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICB9LFxuICAgIHNlbGVjdERlZmF1bHRWYWx1ZVZpZXc6IGZ1bmN0aW9uIHNlbGVjdERlZmF1bHRWYWx1ZVZpZXcoKSB7XG4gICAgICB3aW5kb3cuX1NlbGVjdEJpbmRPYmogPSB0aGlzO1xuICAgICAgd2luZG93LnBhcmVudC5saXN0RGVzaWduLnNlbGVjdERlZmF1bHRWYWx1ZURpYWxvZ0JlZ2luKHdpbmRvdywgbnVsbCk7XG4gICAgfSxcbiAgICBzZXRTZWxlY3RFbnZWYXJpYWJsZVJlc3VsdFZhbHVlOiBmdW5jdGlvbiBzZXRTZWxlY3RFbnZWYXJpYWJsZVJlc3VsdFZhbHVlKHJlc3VsdCkge1xuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlID0gcmVzdWx0LlR5cGU7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRWYWx1ZSA9IHJlc3VsdC5WYWx1ZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQgPSByZXN1bHQuVGV4dDtcbiAgICAgICAgdGhpcy50ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHQgPSBEZWZhdWx0VmFsdWVVdGlsaXR5LmZvcm1hdFRleHQodGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUsIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUZXh0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlID0gXCJcIjtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFZhbHVlID0gXCJcIjtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQgPSBcIlwiO1xuICAgICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IFwiXCI7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8dGFibGUgY2VsbHBhZGRpbmc9XFxcIjBcXFwiIGNlbGxzcGFjaW5nPVxcXCIwXFxcIiBib3JkZXI9XFxcIjBcXFwiIGNsYXNzPVxcXCJodG1sLWRlc2lnbi1wbHVnaW4tZGlhbG9nLXRhYmxlLXdyYXBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8Y29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDEwMHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgc3R5bGU9XFxcIndpZHRoOiAyODBweFxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIC8+XFxuICAgICAgICAgICAgICAgICAgICA8L2NvbGdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NjgwN1xcdTk4OThcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVxcXCJ0ZXh0XFxcIiB2LW1vZGVsPVxcXCJiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5UaXRsZVxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHJvd3NwYW49XFxcIjlcXFwiIHZhbGlnbj1cXFwidG9wXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWlucHV0IHNlYXJjaCBjbGFzcz1cXFwiaW5wdXRfYm9yZGVyX2JvdHRvbVxcXCIgcmVmPVxcXCJ0eHRfc2VhcmNoX3RleHRcXFwiIHBsYWNlaG9sZGVyPVxcXCJcXHU4QkY3XFx1OEY5M1xcdTUxNjVcXHU1MjE3XFx1NTQwRFxcdTYyMTZcXHU4MDA1XFx1NjgwN1xcdTk4OThcXFwiPjwvaS1pbnB1dD4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCByZWY9XFxcInpUcmVlVUxcXFwiIGNsYXNzPVxcXCJ6dHJlZSBkaXYtY3VzdG9tLXNjcm9sbFxcXCIgc3R5bGU9XFxcImhlaWdodDogNDMwcHg7b3ZlcmZsb3cteDpoaWRkZW47b3ZlcmZsb3cteTogc2Nyb2xsXFxcIj48L3VsPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU2MjQwXFx1NUM1RVxcdTg4NjhcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7YmluZFRvU2VhcmNoRmllbGQuY29sdW1uVGFibGVOYW1lfX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1N0VEMVxcdTVCOUFcXHU1QjU3XFx1NkJCNVxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5DYXB0aW9ufX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NUI1N1xcdTZCQjVcXHU1NDBEXFx1NzlGMFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5OYW1lfX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NUI1N1xcdTZCQjVcXHU3QzdCXFx1NTc4QlxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5EYXRhVHlwZU5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU4RkQwXFx1N0I5N1xcdTdCMjZcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLXNlbGVjdCB2LW1vZGVsPVxcXCJiaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5PcGVyYXRvclxcXCIgc3R5bGU9XFxcIndpZHRoOjI2MHB4XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcImVxXFxcIj5cXHU3QjQ5XFx1NEU4RTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJsaWtlXFxcIj5cXHU1MzM5XFx1OTE0RDwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJub3RfZXFcXFwiPlxcdTRFMERcXHU3QjQ5XFx1NEU4RTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJndFxcXCI+XFx1NTkyN1xcdTRFOEU8L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2YWx1ZT1cXFwiZ3RfZXFcXFwiPlxcdTU5MjdcXHU0RThFXFx1N0I0OVxcdTRFOEU8L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLW9wdGlvbiB2YWx1ZT1cXFwibHRcXFwiPlxcdTVDMEZcXHU0RThFPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcImx0X2VxXFxcIj5cXHU1QzBGXFx1NEU4RVxcdTdCNDlcXHU0RThFPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcImxlZnRfbGlrZVxcXCI+XFx1NURFNlxcdTUzMzlcXHU5MTREPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcInJpZ2h0X2xpa2VcXFwiPlxcdTUzRjNcXHU1MzM5XFx1OTE0RDwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJpbmNsdWRlXFxcIj5cXHU1MzA1XFx1NTQyQltcXHU2NjgyXFx1NjVGNlxcdTRFMERcXHU2NTJGXFx1NjMwMV08L2ktb3B0aW9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLXNlbGVjdD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49XFxcIjJcXFwiPlxcdTlFRDhcXHU4QkE0XFx1NTAzQzxidXR0b24gY2xhc3M9XFxcImJ0bi1zZWxlY3QgZnJpZ2h0XFxcIiB2LW9uOmNsaWNrPVxcXCJzZWxlY3REZWZhdWx0VmFsdWVWaWV3XFxcIj4uLi48L2J1dHRvbj48L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHN0eWxlPVxcXCJoZWlnaHQ6IDM1cHhcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiMlxcXCIgc3R5bGU9XFxcImJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7dGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0fX1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXFx1NTkwN1xcdTZDRThcXHVGRjFBXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSByb3dzPVxcXCI4XFxcIj48L3RleHRhcmVhPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxcbiAgICAgICAgICAgICAgICA8L3RhYmxlPlwiXG59KTsiLCJcInVzZSBzdHJpY3RcIjtcblxuVnVlLmNvbXBvbmVudChcImxpc3QtdGFibGUtbGFiZWwtYmluZC10by1jb21wXCIsIHtcbiAgcHJvcHM6IFtcImJpbmRQcm9wUHJvcFwiLCBcImRhdGFTZXRJZFwiXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGJpbmRQcm9wOiB7XG4gICAgICAgIGNvbHVtblRhYmxlTmFtZTogXCJcIixcbiAgICAgICAgY29sdW1uTmFtZTogXCJcIixcbiAgICAgICAgY29sdW1uQ2FwdGlvbjogXCJcIixcbiAgICAgICAgY29sdW1uRGF0YVR5cGVOYW1lOiBcIlwiLFxuICAgICAgICB0YXJnZXRCdXR0b25JZDogXCJcIixcbiAgICAgICAgY29sdW1uQWxpZ246IFwi5bGF5Lit5a+56b2QXCJcbiAgICAgIH0sXG4gICAgICBkZWZhdWx0VmFsdWU6IHtcbiAgICAgICAgZGVmYXVsdFR5cGU6IFwiXCIsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogXCJcIixcbiAgICAgICAgZGVmYXVsdFRleHQ6IFwiXCJcbiAgICAgIH0sXG4gICAgICB0cmVlOiB7XG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIGNoa1N0eWxlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcInRleHRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJpZFwiLFxuICAgICAgICAgICAgICBwSWRLZXk6IFwicGlkXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgX3NlbGYuc2VsZWN0Q29sdW1uKHRyZWVOb2RlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkRibENsaWNrOiBmdW5jdGlvbiBvbkRibENsaWNrKGV2ZW50LCB0cmVlSWQsIHRyZWVOb2RlKSB7fSxcbiAgICAgICAgICAgIG9uQXN5bmNTdWNjZXNzOiBmdW5jdGlvbiBvbkFzeW5jU3VjY2VzcyhldmVudCwgdHJlZUlkLCB0cmVlTm9kZSwgbXNnKSB7fVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdHJlZURhdGE6IG51bGxcbiAgICAgIH0sXG4gICAgICB0ZW1wRGF0YToge1xuICAgICAgICBkZWZhdWx0RGlzcGxheVRleHQ6IFwiXCJcbiAgICAgIH0sXG4gICAgICBidXR0b25zOiBbXVxuICAgIH07XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgYmluZFByb3BQcm9wOiBmdW5jdGlvbiBiaW5kUHJvcFByb3AobmV3VmFsdWUpIHtcbiAgICAgIGNvbnNvbGUubG9nKG5ld1ZhbHVlKTtcbiAgICB9LFxuICAgIGRlZmF1bHRWYWx1ZVByb3A6IGZ1bmN0aW9uIGRlZmF1bHRWYWx1ZVByb3AobmV3VmFsdWUpIHtcbiAgICAgIHRoaXMuZGVmYXVsdFZhbHVlID0gbmV3VmFsdWU7XG5cbiAgICAgIGlmICghU3RyaW5nVXRpbGl0eS5Jc051bGxPckVtcHR5KHRoaXMuZGVmYXVsdFZhbHVlLmRlZmF1bHRUeXBlKSkge1xuICAgICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IERlZmF1bHRWYWx1ZVV0aWxpdHkuZm9ybWF0VGV4dCh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSwgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLmJpbmRUb0ZpZWxkID0gdGhpcy5iaW5kVG9GaWVsZFByb3A7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBpbml0OiBmdW5jdGlvbiBpbml0KGRhdGFTZXRWbywgYnV0dG9ucykge1xuICAgICAgY29uc29sZS5sb2coZGF0YVNldFZvKTtcbiAgICAgIHZhciB0cmVlTm9kZUFycmF5ID0gW107XG4gICAgICB2YXIgdHJlZU5vZGVEYXRhID0gZGF0YVNldFZvLmNvbHVtblZvTGlzdDtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0cmVlTm9kZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNpbmdsZU5vZGUgPSB0cmVlTm9kZURhdGFbaV07XG4gICAgICAgIHNpbmdsZU5vZGUucGlkID0gZGF0YVNldFZvLmRzSWQ7XG4gICAgICAgIHNpbmdsZU5vZGUudGV4dCA9IHNpbmdsZU5vZGUuY29sdW1uQ2FwdGlvbiArIFwiW1wiICsgc2luZ2xlTm9kZS5jb2x1bW5OYW1lICsgXCJdXCI7XG4gICAgICAgIHNpbmdsZU5vZGUubm9kZVR5cGUgPSBcIkRhdGFTZXRDb2x1bW5cIjtcbiAgICAgICAgc2luZ2xlTm9kZS5pZCA9IHNpbmdsZU5vZGUuY29sdW1uSWQ7XG4gICAgICAgIHNpbmdsZU5vZGUuaWNvbiA9IEJhc2VVdGlsaXR5LkdldFJvb3RQYXRoKCkgKyBcIi9UaGVtZXMvUG5nMTZYMTYvcGFnZS5wbmdcIjtcbiAgICAgICAgdHJlZU5vZGVBcnJheS5wdXNoKHNpbmdsZU5vZGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcm9vdE5vZGUgPSB7XG4gICAgICAgIHBpZDogXCItMVwiLFxuICAgICAgICB0ZXh0OiBkYXRhU2V0Vm8uZHNOYW1lLFxuICAgICAgICBpZDogZGF0YVNldFZvLmRzSWQsXG4gICAgICAgIG5vZGVUeXBlOiBcIkRhdGFTZXRcIlxuICAgICAgfTtcbiAgICAgIHRyZWVOb2RlQXJyYXkucHVzaChyb290Tm9kZSk7XG4gICAgICB0aGlzLnRyZWUudHJlZU9iaiA9ICQuZm4uelRyZWUuaW5pdCgkKHRoaXMuJHJlZnMuelRyZWVVTCksIHRoaXMudHJlZS50cmVlU2V0dGluZywgdHJlZU5vZGVBcnJheSk7XG4gICAgICB0aGlzLnRyZWUudHJlZU9iai5leHBhbmRBbGwodHJ1ZSk7XG4gICAgICB0aGlzLmJ1dHRvbnMgPSBidXR0b25zO1xuICAgIH0sXG4gICAgc2VsZWN0Q29sdW1uOiBmdW5jdGlvbiBzZWxlY3RDb2x1bW4oY29sdW1uVm8pIHtcbiAgICAgIHRoaXMuYmluZFByb3AuY29sdW1uVGFibGVOYW1lID0gY29sdW1uVm8uY29sdW1uVGFibGVOYW1lO1xuICAgICAgdGhpcy5iaW5kUHJvcC5jb2x1bW5OYW1lID0gY29sdW1uVm8uY29sdW1uTmFtZTtcbiAgICAgIHRoaXMuYmluZFByb3AuY29sdW1uQ2FwdGlvbiA9IGNvbHVtblZvLmNvbHVtbkNhcHRpb247XG4gICAgICB0aGlzLmJpbmRQcm9wLmNvbHVtbkRhdGFUeXBlTmFtZSA9IGNvbHVtblZvLmNvbHVtbkRhdGFUeXBlTmFtZTtcbiAgICB9LFxuICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmJpbmRQcm9wKTtcblxuICAgICAgaWYgKCF0aGlzLmJpbmRQcm9wLnRhcmdldEJ1dHRvbklkKSB7XG4gICAgICAgIHRoaXMuYmluZFByb3AudGFyZ2V0QnV0dG9uSWQgPSBcIlwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBiaW5kUHJvcDogdGhpcy5iaW5kUHJvcCxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiB0aGlzLmRlZmF1bHRWYWx1ZVxuICAgICAgfTtcbiAgICB9LFxuICAgIHNldERhdGE6IGZ1bmN0aW9uIHNldERhdGEoYmluZFByb3AsIGRlZmF1bHRWYWx1ZSkge1xuICAgICAgY29uc29sZS5sb2coYmluZFByb3ApO1xuICAgICAgdGhpcy5iaW5kUHJvcCA9IGJpbmRQcm9wO1xuICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPSBkZWZhdWx0VmFsdWU7XG4gICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IERlZmF1bHRWYWx1ZVV0aWxpdHkuZm9ybWF0VGV4dCh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSwgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpO1xuICAgIH0sXG4gICAgc2VsZWN0RGVmYXVsdFZhbHVlVmlldzogZnVuY3Rpb24gc2VsZWN0RGVmYXVsdFZhbHVlVmlldygpIHtcbiAgICAgIHdpbmRvdy5fU2VsZWN0QmluZE9iaiA9IHRoaXM7XG4gICAgICB3aW5kb3cucGFyZW50Lmxpc3REZXNpZ24uc2VsZWN0RGVmYXVsdFZhbHVlRGlhbG9nQmVnaW4od2luZG93LCBudWxsKTtcbiAgICB9LFxuICAgIHNldFNlbGVjdEVudlZhcmlhYmxlUmVzdWx0VmFsdWU6IGZ1bmN0aW9uIHNldFNlbGVjdEVudlZhcmlhYmxlUmVzdWx0VmFsdWUocmVzdWx0KSB7XG4gICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUgPSByZXN1bHQuVHlwZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFZhbHVlID0gcmVzdWx0LlZhbHVlO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCA9IHJlc3VsdC5UZXh0O1xuICAgICAgICB0aGlzLnRlbXBEYXRhLmRlZmF1bHREaXNwbGF5VGV4dCA9IERlZmF1bHRWYWx1ZVV0aWxpdHkuZm9ybWF0VGV4dCh0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VHlwZSwgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUgPSBcIlwiO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VmFsdWUgPSBcIlwiO1xuICAgICAgICB0aGlzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCA9IFwiXCI7XG4gICAgICAgIHRoaXMudGVtcERhdGEuZGVmYXVsdERpc3BsYXlUZXh0ID0gXCJcIjtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHRlbXBsYXRlOiBcIjx0YWJsZSBjZWxscGFkZGluZz1cXFwiMFxcXCIgY2VsbHNwYWNpbmc9XFxcIjBcXFwiIGJvcmRlcj1cXFwiMFxcXCIgY2xhc3M9XFxcImh0bWwtZGVzaWduLXBsdWdpbi1kaWFsb2ctdGFibGUtd3JhcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxjb2xncm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29sIHN0eWxlPVxcXCJ3aWR0aDogMTAwcHhcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvbCBzdHlsZT1cXFwid2lkdGg6IDI4MHB4XFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2wgLz5cXG4gICAgICAgICAgICAgICAgICAgIDwvY29sZ3JvdXA+XFxuICAgICAgICAgICAgICAgICAgICA8dGJvZHk+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1QkY5XFx1OUY1MFxcdTY1QjlcXHU1RjBGXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3Qgdi1tb2RlbD1cXFwiYmluZFByb3AuY29sdW1uQWxpZ25cXFwiIHN0eWxlPVxcXCJ3aWR0aDoyNjBweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJcXHU1REU2XFx1NUJGOVxcdTlGNTBcXFwiPlxcdTVERTZcXHU1QkY5XFx1OUY1MDwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIHZhbHVlPVxcXCJcXHU1QzQ1XFx1NEUyRFxcdTVCRjlcXHU5RjUwXFxcIj5cXHU1QzQ1XFx1NEUyRFxcdTVCRjlcXHU5RjUwPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1vcHRpb24gdmFsdWU9XFxcIlxcdTUzRjNcXHU1QkY5XFx1OUY1MFxcXCI+XFx1NTNGM1xcdTVCRjlcXHU5RjUwPC9pLW9wdGlvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1zZWxlY3Q+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCByb3dzcGFuPVxcXCI5XFxcIiB2YWxpZ249XFxcInRvcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgcmVmPVxcXCJ6VHJlZVVMXFxcIiBjbGFzcz1cXFwienRyZWVcXFwiPjwvdWw+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcdTYyNDBcXHU1QzVFXFx1ODg2OFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kUHJvcC5jb2x1bW5UYWJsZU5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU3RUQxXFx1NUI5QVxcdTVCNTdcXHU2QkI1XFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2JpbmRQcm9wLmNvbHVtbkNhcHRpb259fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1QjU3XFx1NkJCNVxcdTU0MERcXHU3OUYwXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2JpbmRQcm9wLmNvbHVtbk5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1QjU3XFx1NkJCNVxcdTdDN0JcXHU1NzhCXFx1RkYxQSBcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tiaW5kUHJvcC5jb2x1bW5EYXRhVHlwZU5hbWV9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU4OUU2XFx1NTNEMVxcdTYzMDlcXHU5NEFFXFx1RkYxQVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1zZWxlY3Qgdi1tb2RlbD1cXFwiYmluZFByb3AudGFyZ2V0QnV0dG9uSWRcXFwiIHN0eWxlPVxcXCJ3aWR0aDoyNjBweFxcXCIgOmNsZWFyYWJsZT1cXFwidHJ1ZVxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktb3B0aW9uIDp2YWx1ZT1cXFwiaXRlbS5idXR0b25JZFxcXCIgdi1mb3I9XFxcIml0ZW0gaW4gYnV0dG9uc1xcXCI+e3tpdGVtLmJ1dHRvbkNhcHRpb259fTwvaS1vcHRpb24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktc2VsZWN0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj1cXFwiMlxcXCI+XFx1OUVEOFxcdThCQTRcXHU1MDNDPGJ1dHRvbiBjbGFzcz1cXFwiYnRuLXNlbGVjdCBmcmlnaHRcXFwiIHYtb246Y2xpY2s9XFxcInNlbGVjdERlZmF1bHRWYWx1ZVZpZXdcXFwiPi4uLjwvYnV0dG9uPjwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHIgc3R5bGU9XFxcImhlaWdodDogMzVweFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPVxcXCIyXFxcIiBzdHlsZT1cXFwiYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3t0ZW1wRGF0YS5kZWZhdWx0RGlzcGxheVRleHR9fVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXHU1OTA3XFx1NkNFOFxcdUZGMUFcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHJvd3M9XFxcIjhcXFwiPjwvdGV4dGFyZWE+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cXG4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XFxuICAgICAgICAgICAgICAgIDwvdGFibGU+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwibW9kdWxlLWxpc3Qtd2ViZm9ybS1jb21wXCIsIHtcbiAgcHJvcHM6IFsnbGlzdEhlaWdodCcsICdtb2R1bGVEYXRhJywgJ2FjdGl2ZVRhYk5hbWUnXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGVkaXRWaWV3OiBcIi9IVE1ML0J1aWxkZXIvRm9ybS9Gb3JtRGVzaWduLmh0bWxcIixcbiAgICAgICAgcmVsb2FkRGF0YTogXCIvUmVzdC9CdWlsZGVyL0Zvcm0vR2V0TGlzdERhdGFcIixcbiAgICAgICAgXCJkZWxldGVcIjogXCIvUmVzdC9CdWlsZGVyL0Zvcm0vRGVsZXRlXCIsXG4gICAgICAgIG1vdmU6IFwiL1Jlc3QvQnVpbGRlci9Gb3JtL01vdmVcIlxuICAgICAgfSxcbiAgICAgIGlkRmllbGROYW1lOiBcImZvcm1JZFwiLFxuICAgICAgc2VhcmNoQ29uZGl0aW9uOiB7XG4gICAgICAgIGZvcm1Nb2R1bGVJZDoge1xuICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgIHR5cGU6IFNlYXJjaFV0aWxpdHkuU2VhcmNoRmllbGRUeXBlLlN0cmluZ1R5cGVcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgIHR5cGU6ICdzZWxlY3Rpb24nLFxuICAgICAgICB3aWR0aDogNjAsXG4gICAgICAgIGFsaWduOiAnY2VudGVyJ1xuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+e8luWPtycsXG4gICAgICAgIGtleTogJ2Zvcm1Db2RlJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHdpZHRoOiA4MFxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+ihqOWNleWQjeensCcsXG4gICAgICAgIGtleTogJ2Zvcm1OYW1lJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfllK/kuIDlkI0nLFxuICAgICAgICBrZXk6ICdmb3JtU2luZ2xlTmFtZScsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5aSH5rOoJyxcbiAgICAgICAga2V5OiAnZm9ybURlc2MnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+e8lui+keaXtumXtCcsXG4gICAgICAgIGtleTogJ2Zvcm1VcGRhdGVUaW1lJyxcbiAgICAgICAgd2lkdGg6IDEwMCxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIHBhcmFtcykge1xuICAgICAgICAgIHJldHVybiBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZVJlbmRlcmVyLlRvRGF0ZVlZWVlfTU1fREQoaCwgcGFyYW1zLnJvdy5mb3JtVXBkYXRlVGltZSk7XG4gICAgICAgIH1cbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfmk43kvZwnLFxuICAgICAgICBrZXk6ICdmb3JtSWQnLFxuICAgICAgICB3aWR0aDogMTIwLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgcGFyYW1zKSB7XG4gICAgICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgICAgIFwiY2xhc3NcIjogXCJsaXN0LXJvdy1idXR0b24td3JhcFwiXG4gICAgICAgICAgfSwgW0xpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uRWRpdEJ1dHRvbihoLCBwYXJhbXMsIF9zZWxmLmlkRmllbGROYW1lLCBfc2VsZiksIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uRGVsZXRlQnV0dG9uKGgsIHBhcmFtcywgX3NlbGYuaWRGaWVsZE5hbWUsIF9zZWxmKV0pO1xuICAgICAgICB9XG4gICAgICB9XSxcbiAgICAgIHRhYmxlRGF0YTogW10sXG4gICAgICB0YWJsZURhdGFPcmlnaW5hbDogW10sXG4gICAgICBzZWxlY3Rpb25Sb3dzOiBudWxsLFxuICAgICAgcGFnZVRvdGFsOiAwLFxuICAgICAgcGFnZVNpemU6IDUwMCxcbiAgICAgIHBhZ2VOdW06IDEsXG4gICAgICBzZWFyY2hUZXh0OiBcIlwiXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB3aW5kb3cuX21vZHVsZWxpc3R3ZWJmb3JtY29tcCA9IHRoaXM7XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgbW9kdWxlRGF0YTogZnVuY3Rpb24gbW9kdWxlRGF0YShuZXdWYWwpIHtcbiAgICAgIHRoaXMucmVsb2FkRGF0YSgpO1xuICAgIH0sXG4gICAgYWN0aXZlVGFiTmFtZTogZnVuY3Rpb24gYWN0aXZlVGFiTmFtZShuZXdWYWwpIHtcbiAgICAgIHRoaXMucmVsb2FkRGF0YSgpO1xuICAgIH0sXG4gICAgc2VhcmNoVGV4dDogZnVuY3Rpb24gc2VhcmNoVGV4dChuZXdWYWwpIHtcbiAgICAgIGlmIChuZXdWYWwpIHtcbiAgICAgICAgdmFyIGZpbHRlclRhYmxlRGF0YSA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50YWJsZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB2YXIgcm93ID0gdGhpcy50YWJsZURhdGFbaV07XG5cbiAgICAgICAgICBpZiAocm93LmZvcm1Db2RlLmluZGV4T2YobmV3VmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBmaWx0ZXJUYWJsZURhdGEucHVzaChyb3cpO1xuICAgICAgICAgIH0gZWxzZSBpZiAocm93LmZvcm1OYW1lLmluZGV4T2YobmV3VmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBmaWx0ZXJUYWJsZURhdGEucHVzaChyb3cpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudGFibGVEYXRhID0gZmlsdGVyVGFibGVEYXRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy50YWJsZURhdGEgPSB0aGlzLnRhYmxlRGF0YU9yaWdpbmFsO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGdldE1vZHVsZU5hbWU6IGZ1bmN0aW9uIGdldE1vZHVsZU5hbWUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tb2R1bGVEYXRhID09IG51bGwgPyBcIuivt+mAieS4reaooeWdl1wiIDogdGhpcy5tb2R1bGVEYXRhLm1vZHVsZVRleHQ7XG4gICAgfSxcbiAgICBzZWxlY3Rpb25DaGFuZ2U6IGZ1bmN0aW9uIHNlbGVjdGlvbkNoYW5nZShzZWxlY3Rpb24pIHtcbiAgICAgIHRoaXMuc2VsZWN0aW9uUm93cyA9IHNlbGVjdGlvbjtcbiAgICB9LFxuICAgIHJlbG9hZERhdGE6IGZ1bmN0aW9uIHJlbG9hZERhdGEoKSB7XG4gICAgICBpZiAodGhpcy5tb2R1bGVEYXRhICE9IG51bGwgJiYgdGhpcy5hY3RpdmVUYWJOYW1lID09IFwibGlzdC13ZWJmb3JtXCIpIHtcbiAgICAgICAgdGhpcy5zZWFyY2hDb25kaXRpb24uZm9ybU1vZHVsZUlkLnZhbHVlID0gdGhpcy5tb2R1bGVEYXRhLm1vZHVsZUlkO1xuICAgICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUJpbmREYXRhQnlTZWFyY2goe1xuICAgICAgICAgIHVybDogdGhpcy5hY0ludGVyZmFjZS5yZWxvYWREYXRhLFxuICAgICAgICAgIHBhZ2VOdW06IHRoaXMucGFnZU51bSxcbiAgICAgICAgICBwYWdlU2l6ZTogdGhpcy5wYWdlU2l6ZSxcbiAgICAgICAgICBzZWFyY2hDb25kaXRpb246IHRoaXMuc2VhcmNoQ29uZGl0aW9uLFxuICAgICAgICAgIHBhZ2VBcHBPYmo6IHRoaXMsXG4gICAgICAgICAgdGFibGVMaXN0OiB0aGlzLFxuICAgICAgICAgIGlkRmllbGQ6IHRoaXMuaWRGaWVsZE5hbWUsXG4gICAgICAgICAgYXV0b1NlbGVjdGVkT2xkUm93czogdHJ1ZSxcbiAgICAgICAgICBzdWNjZXNzRnVuYzogZnVuY3Rpb24gc3VjY2Vzc0Z1bmMocmVzdWx0LCBwYWdlQXBwT2JqKSB7XG4gICAgICAgICAgICBwYWdlQXBwT2JqLnRhYmxlRGF0YU9yaWdpbmFsID0gcmVzdWx0LmRhdGEubGlzdDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGxvYWREaWN0OiBmYWxzZSxcbiAgICAgICAgICBjdXN0UGFyYXM6IHt9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7XG4gICAgICBpZiAodGhpcy5tb2R1bGVEYXRhICE9IG51bGwpIHtcbiAgICAgICAgdmFyIHVybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyh0aGlzLmFjSW50ZXJmYWNlLmVkaXRWaWV3LCB7XG4gICAgICAgICAgXCJvcFwiOiBcImFkZFwiLFxuICAgICAgICAgIFwibW9kdWxlSWRcIjogdGhpcy5tb2R1bGVEYXRhLm1vZHVsZUlkXG4gICAgICAgIH0pO1xuICAgICAgICBEaWFsb2dVdGlsaXR5Lk9wZW5OZXdXaW5kb3cod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0lkLCB1cmwsIHtcbiAgICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgICBoZWlnaHQ6IDBcbiAgICAgICAgfSwgMik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgXCLor7fpgInmi6nmqKHlnZchXCIsIG51bGwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZWRpdDogZnVuY3Rpb24gZWRpdChyZWNvcmRJZCkge1xuICAgICAgdmFyIHVybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyh0aGlzLmFjSW50ZXJmYWNlLmVkaXRWaWV3LCB7XG4gICAgICAgIFwib3BcIjogXCJ1cGRhdGVcIixcbiAgICAgICAgXCJyZWNvcmRJZFwiOiByZWNvcmRJZFxuICAgICAgfSk7XG4gICAgICBEaWFsb2dVdGlsaXR5Lk9wZW5OZXdXaW5kb3cod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0lkLCB1cmwsIHtcbiAgICAgICAgd2lkdGg6IDAsXG4gICAgICAgIGhlaWdodDogMFxuICAgICAgfSwgMik7XG4gICAgfSxcbiAgICBkZWw6IGZ1bmN0aW9uIGRlbChyZWNvcmRJZCkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVEZWxldGVSb3codGhpcy5hY0ludGVyZmFjZVtcImRlbGV0ZVwiXSwgcmVjb3JkSWQsIHRoaXMpO1xuICAgIH0sXG4gICAgc3RhdHVzRW5hYmxlOiBmdW5jdGlvbiBzdGF0dXNFbmFibGUoc3RhdHVzTmFtZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3Q2hhbmdlU2VydmVyU3RhdHVzRmFjZSh0aGlzLmFjSW50ZXJmYWNlLnN0YXR1c0NoYW5nZSwgdGhpcy5zZWxlY3Rpb25Sb3dzLCBhcHBMaXN0LmlkRmllbGROYW1lLCBzdGF0dXNOYW1lLCBhcHBMaXN0KTtcbiAgICB9LFxuICAgIG1vdmU6IGZ1bmN0aW9uIG1vdmUodHlwZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3TW92ZUZhY2UodGhpcy5hY0ludGVyZmFjZS5tb3ZlLCB0aGlzLnNlbGVjdGlvblJvd3MsIHRoaXMuaWRGaWVsZE5hbWUsIHR5cGUsIHRoaXMpO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6IFwiPGRpdiBjbGFzcz1cXFwibW9kdWxlLWxpc3Qtd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVxcXCJsaXN0LWJ1dHRvbi13cmFwXFxcIiBjbGFzcz1cXFwibGlzdC1idXR0b24tb3V0ZXItd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibW9kdWxlLWxpc3QtbmFtZVxcXCI+PEljb24gdHlwZT1cXFwiaW9zLWFycm93LWRyb3ByaWdodC1jaXJjbGVcXFwiIC8+Jm5ic3A7XFx1NkEyMVxcdTU3NTdcXHUzMDEwe3tnZXRNb2R1bGVOYW1lKCl9fVxcdTMwMTE8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJsaXN0LWJ1dHRvbi1pbm5lci13cmFwXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbkdyb3VwPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uICB0eXBlPVxcXCJzdWNjZXNzXFxcIiBAY2xpY2s9XFxcImFkZCgpXFxcIiBpY29uPVxcXCJtZC1hZGRcXFwiPlxcdTY1QjBcXHU1ODlFPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBkaXNhYmxlZCBpY29uPVxcXCJtZC1hZGRcXFwiPlxcdTVGMTVcXHU1MTY1VVJMIDwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgZGlzYWJsZWQgaWNvbj1cXFwibWQtYWxidW1zXFxcIj5cXHU1OTBEXFx1NTIzNjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgZGlzYWJsZWQgaWNvbj1cXFwibWQtcHJpY2V0YWdcXFwiPlxcdTk4ODRcXHU4OUM4PC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBkaXNhYmxlZCBpY29uPVxcXCJtZC1ib29rbWFya3NcXFwiPlxcdTUzODZcXHU1M0YyXFx1NzI0OFxcdTY3MkM8L2ktYnV0dG9uPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIGRpc2FibGVkIGljb249XFxcIm1kLWJydXNoXFxcIj5cXHU1OTBEXFx1NTIzNklEPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBAY2xpY2s9XFxcIm1vdmUoJ3VwJylcXFwiIGljb249XFxcIm1kLWFycm93LXVwXFxcIj5cXHU0RTBBXFx1NzlGQjwvaS1idXR0b24+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgQGNsaWNrPVxcXCJtb3ZlKCdkb3duJylcXFwiIGljb249XFxcIm1kLWFycm93LWRvd25cXFwiPlxcdTRFMEJcXHU3OUZCPC9pLWJ1dHRvbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b25Hcm91cD5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cXFwiZmxvYXQ6IHJpZ2h0O3dpZHRoOiAyMDBweDttYXJnaW4tcmlnaHQ6IDEwcHg7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktaW5wdXQgc2VhcmNoIGNsYXNzPVxcXCJpbnB1dF9ib3JkZXJfYm90dG9tXFxcIiB2LW1vZGVsPVxcXCJzZWFyY2hUZXh0XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9pLWlucHV0PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XFxcImNsZWFyOiBib3RoXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGktdGFibGUgOmhlaWdodD1cXFwibGlzdEhlaWdodFxcXCIgc3RyaXBlIGJvcmRlciA6Y29sdW1ucz1cXFwiY29sdW1uc0NvbmZpZ1xcXCIgOmRhdGE9XFxcInRhYmxlRGF0YVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVxcXCJpdi1saXN0LXRhYmxlXFxcIiA6aGlnaGxpZ2h0LXJvdz1cXFwidHJ1ZVxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBvbi1zZWxlY3Rpb24tY2hhbmdlPVxcXCJzZWxlY3Rpb25DaGFuZ2VcXFwiPjwvaS10YWJsZT5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XCJcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwibW9kdWxlLWxpc3Qtd2VibGlzdC1jb21wXCIsIHtcbiAgcHJvcHM6IFsnbGlzdEhlaWdodCcsICdtb2R1bGVEYXRhJywgJ2FjdGl2ZVRhYk5hbWUnXSxcbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICB2YXIgX3NlbGYgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGVkaXRWaWV3OiBcIi9IVE1ML0J1aWxkZXIvTGlzdC9MaXN0RGVzaWduLmh0bWxcIixcbiAgICAgICAgcmVsb2FkRGF0YTogXCIvUmVzdC9CdWlsZGVyL0xpc3QvR2V0TGlzdERhdGFcIixcbiAgICAgICAgXCJkZWxldGVcIjogXCIvUmVzdC9CdWlsZGVyL0xpc3QvRGVsZXRlXCIsXG4gICAgICAgIG1vdmU6IFwiL1Jlc3QvQnVpbGRlci9MaXN0L01vdmVcIlxuICAgICAgfSxcbiAgICAgIGlkRmllbGROYW1lOiBcImxpc3RJZFwiLFxuICAgICAgc2VhcmNoQ29uZGl0aW9uOiB7XG4gICAgICAgIGxpc3RNb2R1bGVJZDoge1xuICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgIHR5cGU6IFNlYXJjaFV0aWxpdHkuU2VhcmNoRmllbGRUeXBlLlN0cmluZ1R5cGVcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNvbHVtbnNDb25maWc6IFt7XG4gICAgICAgIHR5cGU6ICdzZWxlY3Rpb24nLFxuICAgICAgICB3aWR0aDogNjAsXG4gICAgICAgIGFsaWduOiAnY2VudGVyJ1xuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+e8luWPtycsXG4gICAgICAgIGtleTogJ2xpc3RDb2RlJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHdpZHRoOiA4MFxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+WIl+ihqOWQjeensCcsXG4gICAgICAgIGtleTogJ2xpc3ROYW1lJyxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCJcbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfllK/kuIDlkI0nLFxuICAgICAgICBrZXk6ICdsaXN0U2luZ2xlTmFtZScsXG4gICAgICAgIGFsaWduOiBcImNlbnRlclwiXG4gICAgICB9LCB7XG4gICAgICAgIHRpdGxlOiAn5aSH5rOoJyxcbiAgICAgICAga2V5OiAnbGlzdERlc2MnLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIlxuICAgICAgfSwge1xuICAgICAgICB0aXRsZTogJ+e8lui+keaXtumXtCcsXG4gICAgICAgIGtleTogJ2xpc3RVcGRhdGVUaW1lJyxcbiAgICAgICAgd2lkdGg6IDEwMCxcbiAgICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgsIHBhcmFtcykge1xuICAgICAgICAgIHJldHVybiBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZVJlbmRlcmVyLlRvRGF0ZVlZWVlfTU1fREQoaCwgcGFyYW1zLnJvdy5saXN0VXBkYXRlVGltZSk7XG4gICAgICAgIH1cbiAgICAgIH0sIHtcbiAgICAgICAgdGl0bGU6ICfmk43kvZwnLFxuICAgICAgICBrZXk6ICdsaXN0SWQnLFxuICAgICAgICB3aWR0aDogMTIwLFxuICAgICAgICBhbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgcGFyYW1zKSB7XG4gICAgICAgICAgcmV0dXJuIGgoJ2RpdicsIHtcbiAgICAgICAgICAgIFwiY2xhc3NcIjogXCJsaXN0LXJvdy1idXR0b24td3JhcFwiXG4gICAgICAgICAgfSwgW0xpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uRWRpdEJ1dHRvbihoLCBwYXJhbXMsIF9zZWxmLmlkRmllbGROYW1lLCBfc2VsZiksIExpc3RQYWdlVXRpbGl0eS5JVmlld1RhYmxlSW5uZXJCdXR0b24uRGVsZXRlQnV0dG9uKGgsIHBhcmFtcywgX3NlbGYuaWRGaWVsZE5hbWUsIF9zZWxmKV0pO1xuICAgICAgICB9XG4gICAgICB9XSxcbiAgICAgIHRhYmxlRGF0YTogW10sXG4gICAgICB0YWJsZURhdGFPcmlnaW5hbDogW10sXG4gICAgICBzZWxlY3Rpb25Sb3dzOiBudWxsLFxuICAgICAgcGFnZVRvdGFsOiAwLFxuICAgICAgcGFnZVNpemU6IDUwMCxcbiAgICAgIHBhZ2VOdW06IDEsXG4gICAgICBzZWFyY2hUZXh0OiBcIlwiXG4gICAgfTtcbiAgfSxcbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB3aW5kb3cuX21vZHVsZWxpc3R3ZWJsaXN0Y29tcCA9IHRoaXM7XG4gIH0sXG4gIHdhdGNoOiB7XG4gICAgbW9kdWxlRGF0YTogZnVuY3Rpb24gbW9kdWxlRGF0YShuZXdWYWwpIHtcbiAgICAgIHRoaXMucmVsb2FkRGF0YSgpO1xuICAgIH0sXG4gICAgYWN0aXZlVGFiTmFtZTogZnVuY3Rpb24gYWN0aXZlVGFiTmFtZShuZXdWYWwpIHtcbiAgICAgIHRoaXMucmVsb2FkRGF0YSgpO1xuICAgIH0sXG4gICAgc2VhcmNoVGV4dDogZnVuY3Rpb24gc2VhcmNoVGV4dChuZXdWYWwpIHtcbiAgICAgIGlmIChuZXdWYWwpIHtcbiAgICAgICAgdmFyIGZpbHRlclRhYmxlRGF0YSA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50YWJsZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB2YXIgcm93ID0gdGhpcy50YWJsZURhdGFbaV07XG5cbiAgICAgICAgICBpZiAocm93LmZvcm1Db2RlLmluZGV4T2YobmV3VmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBmaWx0ZXJUYWJsZURhdGEucHVzaChyb3cpO1xuICAgICAgICAgIH0gZWxzZSBpZiAocm93LmZvcm1OYW1lLmluZGV4T2YobmV3VmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBmaWx0ZXJUYWJsZURhdGEucHVzaChyb3cpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudGFibGVEYXRhID0gZmlsdGVyVGFibGVEYXRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy50YWJsZURhdGEgPSB0aGlzLnRhYmxlRGF0YU9yaWdpbmFsO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGdldE1vZHVsZU5hbWU6IGZ1bmN0aW9uIGdldE1vZHVsZU5hbWUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tb2R1bGVEYXRhID09IG51bGwgPyBcIuivt+mAieS4reaooeWdl1wiIDogdGhpcy5tb2R1bGVEYXRhLm1vZHVsZVRleHQ7XG4gICAgfSxcbiAgICBzZWxlY3Rpb25DaGFuZ2U6IGZ1bmN0aW9uIHNlbGVjdGlvbkNoYW5nZShzZWxlY3Rpb24pIHtcbiAgICAgIHRoaXMuc2VsZWN0aW9uUm93cyA9IHNlbGVjdGlvbjtcbiAgICB9LFxuICAgIHJlbG9hZERhdGE6IGZ1bmN0aW9uIHJlbG9hZERhdGEoKSB7XG4gICAgICBpZiAodGhpcy5tb2R1bGVEYXRhICE9IG51bGwgJiYgdGhpcy5hY3RpdmVUYWJOYW1lID09IFwibGlzdC13ZWJsaXN0XCIpIHtcbiAgICAgICAgdGhpcy5zZWFyY2hDb25kaXRpb24ubGlzdE1vZHVsZUlkLnZhbHVlID0gdGhpcy5tb2R1bGVEYXRhLm1vZHVsZUlkO1xuICAgICAgICBMaXN0UGFnZVV0aWxpdHkuSVZpZXdUYWJsZUJpbmREYXRhQnlTZWFyY2goe1xuICAgICAgICAgIHVybDogdGhpcy5hY0ludGVyZmFjZS5yZWxvYWREYXRhLFxuICAgICAgICAgIHBhZ2VOdW06IHRoaXMucGFnZU51bSxcbiAgICAgICAgICBwYWdlU2l6ZTogdGhpcy5wYWdlU2l6ZSxcbiAgICAgICAgICBzZWFyY2hDb25kaXRpb246IHRoaXMuc2VhcmNoQ29uZGl0aW9uLFxuICAgICAgICAgIHBhZ2VBcHBPYmo6IHRoaXMsXG4gICAgICAgICAgdGFibGVMaXN0OiB0aGlzLFxuICAgICAgICAgIGlkRmllbGQ6IHRoaXMuaWRGaWVsZE5hbWUsXG4gICAgICAgICAgYXV0b1NlbGVjdGVkT2xkUm93czogdHJ1ZSxcbiAgICAgICAgICBzdWNjZXNzRnVuYzogZnVuY3Rpb24gc3VjY2Vzc0Z1bmMocmVzdWx0LCBwYWdlQXBwT2JqKSB7XG4gICAgICAgICAgICBwYWdlQXBwT2JqLnRhYmxlRGF0YU9yaWdpbmFsID0gcmVzdWx0LmRhdGEubGlzdDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGxvYWREaWN0OiBmYWxzZSxcbiAgICAgICAgICBjdXN0UGFyYXM6IHt9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7XG4gICAgICBpZiAodGhpcy5tb2R1bGVEYXRhICE9IG51bGwpIHtcbiAgICAgICAgdmFyIHVybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyh0aGlzLmFjSW50ZXJmYWNlLmVkaXRWaWV3LCB7XG4gICAgICAgICAgXCJvcFwiOiBcImFkZFwiLFxuICAgICAgICAgIFwibW9kdWxlSWRcIjogdGhpcy5tb2R1bGVEYXRhLm1vZHVsZUlkXG4gICAgICAgIH0pO1xuICAgICAgICBEaWFsb2dVdGlsaXR5Lk9wZW5OZXdXaW5kb3cod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0lkLCB1cmwsIHtcbiAgICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgICBoZWlnaHQ6IDBcbiAgICAgICAgfSwgMik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBEaWFsb2dVdGlsaXR5LkFsZXJ0KHdpbmRvdywgRGlhbG9nVXRpbGl0eS5EaWFsb2dBbGVydElkLCB7fSwgXCLor7fpgInmi6nmqKHlnZchXCIsIG51bGwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZWRpdDogZnVuY3Rpb24gZWRpdChyZWNvcmRJZCkge1xuICAgICAgdmFyIHVybCA9IEJhc2VVdGlsaXR5LkJ1aWxkVmlldyh0aGlzLmFjSW50ZXJmYWNlLmVkaXRWaWV3LCB7XG4gICAgICAgIFwib3BcIjogXCJ1cGRhdGVcIixcbiAgICAgICAgXCJyZWNvcmRJZFwiOiByZWNvcmRJZFxuICAgICAgfSk7XG4gICAgICBEaWFsb2dVdGlsaXR5Lk9wZW5OZXdXaW5kb3cod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0lkLCB1cmwsIHtcbiAgICAgICAgd2lkdGg6IDAsXG4gICAgICAgIGhlaWdodDogMFxuICAgICAgfSwgMik7XG4gICAgfSxcbiAgICBkZWw6IGZ1bmN0aW9uIGRlbChyZWNvcmRJZCkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3VGFibGVEZWxldGVSb3codGhpcy5hY0ludGVyZmFjZVtcImRlbGV0ZVwiXSwgcmVjb3JkSWQsIHRoaXMpO1xuICAgIH0sXG4gICAgc3RhdHVzRW5hYmxlOiBmdW5jdGlvbiBzdGF0dXNFbmFibGUoc3RhdHVzTmFtZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3Q2hhbmdlU2VydmVyU3RhdHVzRmFjZSh0aGlzLmFjSW50ZXJmYWNlLnN0YXR1c0NoYW5nZSwgdGhpcy5zZWxlY3Rpb25Sb3dzLCBhcHBMaXN0LmlkRmllbGROYW1lLCBzdGF0dXNOYW1lLCBhcHBMaXN0KTtcbiAgICB9LFxuICAgIG1vdmU6IGZ1bmN0aW9uIG1vdmUodHlwZSkge1xuICAgICAgTGlzdFBhZ2VVdGlsaXR5LklWaWV3TW92ZUZhY2UodGhpcy5hY0ludGVyZmFjZS5tb3ZlLCB0aGlzLnNlbGVjdGlvblJvd3MsIHRoaXMuaWRGaWVsZE5hbWUsIHR5cGUsIHRoaXMpO1xuICAgIH1cbiAgfSxcbiAgdGVtcGxhdGU6ICc8ZGl2IGNsYXNzPVwibW9kdWxlLWxpc3Qtd3JhcFwiPlxcXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJsaXN0LWJ1dHRvbi13cmFwXCIgY2xhc3M9XCJsaXN0LWJ1dHRvbi1vdXRlci13cmFwXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2R1bGUtbGlzdC1uYW1lXCI+PEljb24gdHlwZT1cImlvcy1hcnJvdy1kcm9wcmlnaHQtY2lyY2xlXCIgLz4mbmJzcDvmqKHlnZfjgJB7e2dldE1vZHVsZU5hbWUoKX1944CRPC9kaXY+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsaXN0LWJ1dHRvbi1pbm5lci13cmFwXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uR3JvdXA+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uICB0eXBlPVwic3VjY2Vzc1wiIEBjbGljaz1cImFkZCgpXCIgaWNvbj1cIm1kLWFkZFwiPuaWsOWinjwvaS1idXR0b24+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGktYnV0dG9uIHR5cGU9XCJlcnJvclwiIGljb249XCJtZC1hbGJ1bXNcIj7lpI3liLY8L2ktYnV0dG9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVwiZXJyb3JcIiBpY29uPVwibWQtcHJpY2V0YWdcIj7pooTop4g8L2ktYnV0dG9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVwiZXJyb3JcIiBpY29uPVwibWQtYm9va21hcmtzXCI+5Y6G5Y+y54mI5pysPC9pLWJ1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cImVycm9yXCIgaWNvbj1cIm1kLWJydXNoXCI+5aSN5Yi2SUQ8L2ktYnV0dG9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpLWJ1dHRvbiB0eXBlPVwicHJpbWFyeVwiIEBjbGljaz1cIm1vdmUoXFwndXBcXCcpXCIgaWNvbj1cIm1kLWFycm93LXVwXCI+5LiK56e7PC9pLWJ1dHRvbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1idXR0b24gdHlwZT1cInByaW1hcnlcIiBAY2xpY2s9XCJtb3ZlKFxcJ2Rvd25cXCcpXCIgaWNvbj1cIm1kLWFycm93LWRvd25cIj7kuIvnp7s8L2ktYnV0dG9uPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b25Hcm91cD5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiZmxvYXQ6IHJpZ2h0O3dpZHRoOiAyMDBweDttYXJnaW4tcmlnaHQ6IDEwcHg7XCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XCJpbnB1dF9ib3JkZXJfYm90dG9tXCIgdi1tb2RlbD1cInNlYXJjaFRleHRcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaS1pbnB1dD5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJjbGVhcjogYm90aFwiPjwvZGl2PlxcXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcXG4gICAgICAgICAgICAgICAgICAgIDxpLXRhYmxlIDpoZWlnaHQ9XCJsaXN0SGVpZ2h0XCIgc3RyaXBlIGJvcmRlciA6Y29sdW1ucz1cImNvbHVtbnNDb25maWdcIiA6ZGF0YT1cInRhYmxlRGF0YVwiXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJpdi1saXN0LXRhYmxlXCIgOmhpZ2hsaWdodC1yb3c9XCJ0cnVlXCJcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAb24tc2VsZWN0aW9uLWNoYW5nZT1cInNlbGVjdGlvbkNoYW5nZVwiPjwvaS10YWJsZT5cXFxuICAgICAgICAgICAgICAgIDwvZGl2Pidcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5WdWUuY29tcG9uZW50KFwic2VsZWN0LWRibGluay1zaW5nbGUtY29tcFwiLCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjSW50ZXJmYWNlOiB7XG4gICAgICAgIGdldERCTGlua0RhdGFVcmw6IFwiL1Jlc3QvQnVpbGRlci9EYXRhU3RvcmFnZS9EQkxpbmsvR2V0RnVsbERCTGlua1wiLFxuICAgICAgICBnZXRTaW5nbGVEQkxpbmtEYXRhVXJsOiBcIi9SZXN0L0J1aWxkZXIvRGF0YVN0b3JhZ2UvREJMaW5rL0dldERldGFpbERhdGFcIlxuICAgICAgfSxcbiAgICAgIGpzRWRpdG9ySW5zdGFuY2U6IG51bGwsXG4gICAgICBkYkxpbmtUcmVlOiB7XG4gICAgICAgIHRyZWVPYmo6IG51bGwsXG4gICAgICAgIHRyZWVTZXR0aW5nOiB7XG4gICAgICAgICAgdmlldzoge1xuICAgICAgICAgICAgZGJsQ2xpY2tFeHBhbmQ6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0xpbmU6IHRydWUsXG4gICAgICAgICAgICBmb250Q3NzOiB7XG4gICAgICAgICAgICAgICdjb2xvcic6ICdibGFjaycsXG4gICAgICAgICAgICAgICdmb250LXdlaWdodCc6ICdub3JtYWwnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGVjazoge1xuICAgICAgICAgICAgZW5hYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG5vY2hlY2tJbmhlcml0OiBmYWxzZSxcbiAgICAgICAgICAgIGNoa1N0eWxlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICByYWRpb1R5cGU6IFwiYWxsXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGtleToge1xuICAgICAgICAgICAgICBuYW1lOiBcImRiTGlua05hbWVcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXBsZURhdGE6IHtcbiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAgICAgICBpZEtleTogXCJkYklkXCIsXG4gICAgICAgICAgICAgIHBJZEtleTogXCJkYk9yZGVyTnVtXCIsXG4gICAgICAgICAgICAgIHJvb3RQSWQ6IFwiLTFcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY2FsbGJhY2s6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQsIHRyZWVJZCwgdHJlZU5vZGUpIHtcbiAgICAgICAgICAgICAgdmFyIF9zZWxmID0gdGhpcy5nZXRaVHJlZU9iaih0cmVlSWQpLl9ob3N0O1xuXG4gICAgICAgICAgICAgIF9zZWxmLnNlbGVjdGVkREJMaW5rKHRyZWVOb2RlKTtcblxuICAgICAgICAgICAgICBfc2VsZi5oYW5kbGVDbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdHJlZURhdGE6IG51bGwsXG4gICAgICAgIGNsaWNrTm9kZTogbnVsbFxuICAgICAgfSxcbiAgICAgIHNlbGVjdGVkREJMaW5rRGF0YTogbnVsbFxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSxcbiAgbWV0aG9kczoge1xuICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZSgpIHtcbiAgICAgIERpYWxvZ1V0aWxpdHkuQ2xvc2VEaWFsb2dFbGVtKHRoaXMuJHJlZnMuc2VsZWN0REJMaW5rTW9kZWxEaWFsb2dXcmFwKTtcbiAgICB9LFxuICAgIGJlZ2luU2VsZWN0REJMaW5rOiBmdW5jdGlvbiBiZWdpblNlbGVjdERCTGluaygpIHtcbiAgICAgIHZhciBlbGVtID0gdGhpcy4kcmVmcy5zZWxlY3REQkxpbmtNb2RlbERpYWxvZ1dyYXA7XG4gICAgICB0aGlzLmdldERCTGlua0RhdGFJbml0VHJlZSgpO1xuICAgICAgRGlhbG9nVXRpbGl0eS5EaWFsb2dFbGVtT2JqKGVsZW0sIHtcbiAgICAgICAgbW9kYWw6IHRydWUsXG4gICAgICAgIHdpZHRoOiA0NzAsXG4gICAgICAgIGhlaWdodDogNTAwLFxuICAgICAgICB0aXRsZTogXCLpgInmi6nmlbDmja7lupPov57mjqVcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXREQkxpbmtEYXRhSW5pdFRyZWU6IGZ1bmN0aW9uIGdldERCTGlua0RhdGFJbml0VHJlZSgpIHtcbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXREQkxpbmtEYXRhVXJsLCB7fSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBfc2VsZi5kYkxpbmtUcmVlLnRyZWVEYXRhID0gcmVzdWx0LmRhdGE7XG5cbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IF9zZWxmLmRiTGlua1RyZWUudHJlZURhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIF9zZWxmLmRiTGlua1RyZWUudHJlZURhdGFbaV0uaWNvbiA9IFwiLi4vLi4vLi4vLi4vVGhlbWVzL1BuZzE2WDE2L2RhdGFiYXNlX2Nvbm5lY3QucG5nXCI7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3NlbGYuJHJlZnMuZGJMaW5rWlRyZWVVTC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInNlbGVjdC1kYkxpbmstc2luZ2xlLWNvbXAtXCIgKyBTdHJpbmdVdGlsaXR5Lkd1aWQoKSk7XG5cbiAgICAgICAgICBfc2VsZi5kYkxpbmtUcmVlLnRyZWVPYmogPSAkLmZuLnpUcmVlLmluaXQoJChfc2VsZi4kcmVmcy5kYkxpbmtaVHJlZVVMKSwgX3NlbGYuZGJMaW5rVHJlZS50cmVlU2V0dGluZywgX3NlbGYuZGJMaW5rVHJlZS50cmVlRGF0YSk7XG5cbiAgICAgICAgICBfc2VsZi5kYkxpbmtUcmVlLnRyZWVPYmouZXhwYW5kQWxsKHRydWUpO1xuXG4gICAgICAgICAgX3NlbGYuZGJMaW5rVHJlZS50cmVlT2JqLl9ob3N0ID0gX3NlbGY7XG4gICAgICAgICAgZnV6enlTZWFyY2hUcmVlT2JqKF9zZWxmLmRiTGlua1RyZWUudHJlZU9iaiwgX3NlbGYuJHJlZnMudHh0X2RiTGlua19zZWFyY2hfdGV4dC4kcmVmcy5pbnB1dCwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfSxcbiAgICBzZWxlY3RlZERCTGluazogZnVuY3Rpb24gc2VsZWN0ZWREQkxpbmsoZGJMaW5rRGF0YSkge1xuICAgICAgdGhpcy5zZWxlY3RlZERCTGlua0RhdGEgPSBkYkxpbmtEYXRhO1xuICAgICAgdGhpcy4kZW1pdCgnb24tc2VsZWN0ZWQtZGJsaW5rJywgZGJMaW5rRGF0YSk7XG4gICAgfSxcbiAgICBnZXRTZWxlY3RlZERCTGlua05hbWU6IGZ1bmN0aW9uIGdldFNlbGVjdGVkREJMaW5rTmFtZSgpIHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGVkREJMaW5rRGF0YSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBcIuivt+mAieaLqeaVsOaNruW6k+i/nuaOpVwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWREQkxpbmtEYXRhLmRiTGlua05hbWU7XG4gICAgICB9XG4gICAgfSxcbiAgICBzZXRPbGRTZWxlY3RlZERCTGluazogZnVuY3Rpb24gc2V0T2xkU2VsZWN0ZWREQkxpbmsoZGJMaW5rSWQpIHtcbiAgICAgIHZhciBfc2VsZiA9IHRoaXM7XG5cbiAgICAgIEFqYXhVdGlsaXR5LlBvc3QodGhpcy5hY0ludGVyZmFjZS5nZXRTaW5nbGVEQkxpbmtEYXRhVXJsLCB7XG4gICAgICAgIFwicmVjb3JkSWRcIjogZGJMaW5rSWRcbiAgICAgIH0sIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgICAgX3NlbGYuc2VsZWN0ZWREQkxpbmtEYXRhID0gcmVzdWx0LmRhdGE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgRGlhbG9nVXRpbGl0eS5BbGVydCh3aW5kb3csIERpYWxvZ1V0aWxpdHkuRGlhbG9nQWxlcnRJZCwge30sIHJlc3VsdC5tZXNzYWdlLCBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcyk7XG4gICAgfVxuICB9LFxuICB0ZW1wbGF0ZTogXCI8ZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic2VsZWN0LXZpZXctZGJsaW5rLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInRleHRcXFwiPnt7Z2V0U2VsZWN0ZWREQkxpbmtOYW1lKCl9fTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInZhbHVlXFxcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJpZFxcXCI+PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnV0dG9uXFxcIiBAY2xpY2s9XFxcImJlZ2luU2VsZWN0REJMaW5rKClcXFwiPjxJY29uIHR5cGU9XFxcImlvcy1mdW5uZWxcXFwiIC8+Jm5ic3A7XFx1OTAwOVxcdTYyRTk8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiByZWY9XFxcInNlbGVjdERCTGlua01vZGVsRGlhbG9nV3JhcFxcXCIgY2xhc3M9XFxcImMxLXNlbGVjdC1tb2RlbC13cmFwIGdlbmVyYWwtZWRpdC1wYWdlLXdyYXBcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBub25lXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJjMS1zZWxlY3QtbW9kZWwtc291cmNlLXdyYXBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aS1pbnB1dCBzZWFyY2ggY2xhc3M9XFxcImlucHV0X2JvcmRlcl9ib3R0b21cXFwiIHJlZj1cXFwidHh0X2RiTGlua19zZWFyY2hfdGV4dFxcXCIgcGxhY2Vob2xkZXI9XFxcIlxcdThCRjdcXHU4RjkzXFx1NTE2NVxcdTY1NzBcXHU2MzZFXFx1NUU5M1xcdThGREVcXHU2M0E1XFx1NTQwRFxcdTc5RjBcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ktaW5wdXQ+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImlubmVyLXdyYXAgZGl2LWN1c3RvbS1zY3JvbGxcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIHJlZj1cXFwiZGJMaW5rWlRyZWVVTFxcXCIgY2xhc3M9XFxcInp0cmVlXFxcIj48L3VsPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cIlxufSk7Il19
