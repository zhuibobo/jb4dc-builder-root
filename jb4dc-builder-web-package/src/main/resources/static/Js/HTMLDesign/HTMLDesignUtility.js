"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var CKEditorPluginUtility=function(){function s(){_classCallCheck(this,s)}return _createClass(s,null,[{key:"AddPluginsServerConfig",value:function(e,t,i,n,o,l,r,a,s,u,d,c,m,f){this.PluginsServerConfig[e]={SingleName:e,ToolbarLocation:t,ToolbarLabel:i,ClientResolve:n,ServerResolve:o,ClientResolveJs:l,DialogWidth:r,DialogHeight:a,IsJBuild4DCData:s,ControlCategory:u,ServerDynamicBind:d,ShowRemoveButton:c,ShowInEditorToolbar:m,EnableChildControls:f}}},{key:"_UseServerConfigCoverEmptyPluginProp",value:function(e){var t=this.PluginsServerConfig[e.SingleName];if(t){for(var i in e)"function"!=typeof e[i]&&(""!=e[i]&&null!=e[i]||t[i]&&(e[i]=t[i]));return e}return null}},{key:"GetGeneralPluginInstance",value:function(e,t){var i={SingleName:e,DialogName:"",DialogWidth:null,DialogHeight:null,DialogPageUrl:BaseUtility.AppendTimeStampUrl("Dialog.html"),DialogTitle:"DIV",ToolbarCommand:"",ToolbarIcon:"Icon.png",ToolbarLabel:"",ToolbarLocation:"",IFrameWindow:null,IFrameExecuteActionName:"Insert",DesignModalInputCss:"",ClientResolve:"",ServerResolve:"",IsJBuild4DCData:"",ControlCategory:"",ServerDynamicBind:"",ShowRemoveButton:"",ShowInEditorToolbar:"",EnableChildControls:""};return i=$.extend(!0,{},i,t),null!=(i=s._UseServerConfigCoverEmptyPluginProp(i))?(i.DialogName=i.SingleName,i.ToolbarCommand="JBuild4DC.FormDesign.Plugins."+i.SingleName,i.DialogSettingTitle=i.ToolbarLabel+"Web控件",{Setting:i}):{}}},{key:"GetEnableChildControls",value:function(e){return this.Plugins[e].Setting.EnableChildControls}},{key:"GetPlugins",value:function(){return this.Plugins}},{key:"RegGeneralPluginToEditor",value:function(t,e,i,n){console.log(i),CKEDITOR.dialog.addIframe(i.DialogName,i.DialogSettingTitle,e+i.DialogPageUrl,i.DialogWidth,i.DialogHeight,function(){var e=document.getElementById(this._.frameId);i.IFrameWindow=e,s.SetElemPropsInEditDialog(i.IFrameWindow,i.IFrameExecuteActionName)},{onOk:function(){var e=i.IFrameWindow.contentWindow.DialogApp.getControlProps();if(0==e.success)return!1;n(t,i,e,i.IFrameWindow.contentWindow),i.IFrameExecuteActionName=s.DialogExecuteInsertActionName},onCancel:function(){i.IFrameExecuteActionName=s.DialogExecuteInsertActionName}}),t.addCommand(i.ToolbarCommand,new CKEDITOR.dialogCommand(i.DialogName)),"true"==i.ShowInEditorToolbar&&t.ui.addButton(i.SingleName,{label:i.ToolbarLabel,icon:e+i.ToolbarIcon,command:i.ToolbarCommand,toolbar:i.ToolbarLocation}),t.on("doubleclick",function(e){s.OnCKWysiwygElemDBClickEvent(e,i)})}},{key:"OnCKWysiwygElemDBClickEvent",value:function(e,t){var i=e.data.element;"true"==i.getAttribute("runtime_auto_remove")&&(i=e.data.element.getParent()),i.getAttribute("singleName")==t.SingleName&&(CKEditorUtility.SetSelectedElem(i.getOuterHtml()),e.data.dialog=t.DialogName,t.IFrameExecuteActionName=s.DialogExecuteEditActionName)}},{key:"SerializePropsToElem",value:function(e,t,i){if(e.setAttribute("jbuild4dc_custom","true"),e.setAttribute("singlename",i.SingleName),e.setAttribute("is_jbuild4dc_data",i.IsJBuild4DCData),e.setAttribute("control_category",i.ControlCategory),e.setAttribute("show_remove_button",i.ShowRemoveButton),t.baseInfo)for(var n in t.baseInfo)"readonly"==n?"readonly"==t.baseInfo[n]?e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]):e.removeAttribute("readonly"):"disabled"==n?"disabled"==t.baseInfo[n]?e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]):e.removeAttribute("disabled"):e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]);if(t.bindToField)for(var n in t.bindToField)e.setAttribute(n.toLocaleLowerCase(),t.bindToField[n]);if(t.defaultValue)for(var n in t.defaultValue)e.setAttribute(n.toLocaleLowerCase(),t.defaultValue[n]);if(t.validateRules&&t.validateRules.rules&&0<t.validateRules.rules.length&&e.setAttribute("validaterules",encodeURIComponent(JsonUtility.JsonToString(t.validateRules))),t.normalProps)for(var n in t.normalProps)e.setAttribute(n.toLocaleLowerCase(),t.normalProps[n]);if(t.bindToSearchField)for(var n in t.bindToSearchField)e.setAttribute(n.toLocaleLowerCase(),t.bindToSearchField[n]);if(t.normalDataSource)for(var n in t.normalDataSource)e.setAttribute(n.toLocaleLowerCase(),t.normalDataSource[n]);if(t.multilevelProps)for(var n in t.multilevelProps)e.setAttribute(n.toLocaleLowerCase(),t.multilevelProps[n]);return e}},{key:"DeserializePropsFromElem",value:function(e){var t={},o=$(e);function i(e,t){var i={};for(var n in this.DefaultProps[t])o.attr(n)?i[n]=o.attr(n):i[n]=this.DefaultProps[t][n];return e[t]=i,e}return t=i.call(this,t,"baseInfo"),t=i.call(this,t,"bindToField"),t=i.call(this,t,"defaultValue"),t=i.call(this,t,"bindToSearchField"),t=i.call(this,t,"normalDataSource"),t=i.call(this,t,"multilevelProps"),o.attr("validateRules")&&(t.validateRules=JsonUtility.StringToJson(decodeURIComponent(o.attr("validateRules")))),t}},{key:"BuildGeneralElemToCKWysiwyg",value:function(e,t,i,n){if(this.ValidateBuildEnable(e,t,i,n))if(console.log("IFrameExecuteActionName:"+t.IFrameExecuteActionName),t.IFrameExecuteActionName==s.DialogExecuteInsertActionName){var o=CKEDITOR.dom.element.createFromHtml(e);this.SerializePropsToElem(o,i,t),CKEditorUtility.GetCKEditorInst().insertElement(o),CKEditorUtility.SingleElemBindDefaultEvent(o)}else{var l=CKEditorUtility.GetSelectedCKEditorElem();if(l){var r=new CKEDITOR.dom.element.createFromHtml(l.getOuterHtml());if("InputControl"==r.getAttribute("control_category")){var a=$(e).html();r.setHtml(a)}l.copyAttributes(r,{temp:"temp"}),this.SerializePropsToElem(r,i,t),r.replace(l),CKEditorUtility.SingleElemBindDefaultEvent(r)}}}},{key:"ValidateBuildEnable",value:function(e,t,i,n){return!0}},{key:"ValidateSerializeControlDialogCompletedEnable",value:function(e){return"true"==e.baseInfo.serialize&&""==e.bindToField.fieldName?(DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"序列化的控件必须绑定字段!",null),{success:!1}):e}},{key:"SetElemPropsInEditDialog",value:function(e,t){var i=CKEditorUtility.GetCKEditorInst().getSelection().getStartElement(),n=null;if(i&&(n=i.getParents()),e.contentWindow.DialogApp.ready(t,i,n),t==this.DialogExecuteEditActionName){var o=CKEditorUtility.GetSelectedElem().outerHTML(),l=this.DeserializePropsFromElem(o);e.contentWindow.DialogApp.setControlProps($(o),l)}}},{key:"GetControlDescText",value:function(e,t){console.log(t);var i="类型:【"+e.ToolbarLabel+"】<br />绑定:【"+t.bindToField.tableCaption+"-"+t.bindToField.fieldCaption+"】";if(t.defaultValue&&t.defaultValue.defaultText&&(i+="<br />默认:【"+t.defaultValue.defaultType+":"+t.defaultValue.defaultText+"】"),t.validateRules&&t.validateRules.rules&&0<t.validateRules.rules.length){i+="<br />验证:【";for(var n=0;n<t.validateRules.rules.length;n++)i+=t.validateRules.rules[n].validateType+";";i=StringUtility.RemoveLastChar(i),i+="】"}return i}},{key:"GetSearchControlDescText",value:function(e,t){return"["+e.ToolbarLabel+"] 绑定:["+t.bindToSearchField.columnCaption+"]("+t.bindToSearchField.columnOperator+")"}},{key:"GetAutoRemoveTipLabel",value:function(e){return e||(e="双击编辑该部件"),'<div runtime_auto_remove="true" class="wysiwyg-auto-remove-tip">'+e+"</div>"}},{key:"TryGetListButtonsInPluginPage",value:function(){var i=[],e=CKEditorUtility.GetCKEditorHTMLInPluginPage();return $(e).find("[buttoncaption]").each(function(){var e=$(this).attr("buttoncaption"),t=$(this).attr("id");i.push({buttonCaption:e,buttonId:t})}),i}},{key:"TryGetDataSetId",value:function(e,t){if(e)for(var i=t.length-1;i--;0<=i)if(null!=t[i].getAttribute("datasetid")&&""!=t[i].getAttribute("datasetid"))return t[i].getAttribute("datasetid");return this.dataSetId?null:window.parent.listDesign.listResourceEntity.listDatasetId}},{key:"TemplateAddDefProp",value:function(e,t,i,n,o){e.attr("classname",""),e.attr("control_category","ContainerControl"),e.attr("custdisabled","nodisabled"),e.attr("custreadonly","noreadonly"),e.attr("desc",""),e.attr("id",t),e.attr("is_jbuild4dc_data","false"),e.attr("jbuild4dc_custom","true"),e.attr("name",t),e.attr("placeholder",""),e.attr("serialize","false"),e.attr("show_remove_button",i),e.attr("singlename",n),e.attr("style",""),e.attr("status",o)}}]),s}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(CKEditorPluginUtility,"PluginsServerConfig",{}),_defineProperty(CKEditorPluginUtility,"Plugins",{}),_defineProperty(CKEditorPluginUtility,"DefaultProps",{bindToField:{relationId:"",tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},validateRules:{msg:"",rules:[]},baseInfo:{id:"",serialize:"true",name:"",className:"",placeholder:"",custReadonly:"noreadonly",custDisabled:"nodisabled",style:"",desc:"",status:"enable",groupName:""},bindToSearchField:{columnTitle:"",columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",columnOperator:"匹配"},normalDataSource:{defaultIsNull:"true",sqlDataSource:"",dictionaryGroupDataSourceId:"",dictionaryGroupDataSourceText:"",restDataSource:"",interfaceDataSource:"",staticDataSource:"",defaultSelected:"",layoutDirection:"vertical",rowNum:"0",displayValueInText:"false"},multilevelProps:{level2BindControlId:""}}),_defineProperty(CKEditorPluginUtility,"DialogExecuteEditActionName","Edit"),_defineProperty(CKEditorPluginUtility,"DialogExecuteInsertActionName","Insert");var CKEditorUtility=function(){function D(){_classCallCheck(this,D)}return _createClass(D,null,[{key:"SetSelectedElem",value:function(e){this._$CKEditorSelectElem=$(e)}},{key:"GetSelectedElem",value:function(){return this._$CKEditorSelectElem&&0<this._$CKEditorSelectElem.length?this._$CKEditorSelectElem:null}},{key:"GetSelectedCKEditorElem",value:function(){if(this.GetSelectedElem()){var e=this.GetSelectedElem().attr("id");return this.GetCKEditorInst().document.getById(e)}return null}},{key:"SetLastSelectedTempHTML",value:function(e){this._LastSelectedTempHTML=e}},{key:"GetLastSelectedTempHTML",value:function(){return this._LastSelectedTempHTML}},{key:"TryGetIdFromLastSelectedTempHTML",value:function(e){return this._LastSelectedTempHTML&&$(e).attr("name")==$(this.GetLastSelectedTempHTML()).attr("name")?$(this.GetLastSelectedTempHTML()).attr("id"):""}},{key:"GetCKEditorInst",value:function(){return this._CKEditorInst}},{key:"SetCKEditorInst",value:function(e){this._CKEditorInst=e}},{key:"GetCKEditorHTML",value:function(){return this.ClearALLForDivElemButton(),this.ClearALLPluginInnerPanel(),this.GetCKEditorInst().getData()}},{key:"SetCKEditorHTML",value:function(e){this.GetCKEditorInst().setData(e),window.setTimeout(function(){D.ALLElemBindDefaultEvent()},500)}},{key:"GetCKEditorHTMLInPluginPage",value:function(){return window.parent.CKEditorUtility.GetCKEditorHTML()}},{key:"InitializeCKEditor",value:function(e,t,i,n,o,l){for(var r=new Array,a=0;a<t.length;a++){var s=t[a],u=s.singleName,d=s.toolbarLocation,c=s.text,m=s.serverResolve,f=s.clientResolve,g=s.clientResolveJs,C=s.dialogWidth,v=s.dialogHeight,E=s.isJBuild4DCData,p=s.controlCategory,y=s.serverDynamicBind,h=s.showRemoveButton,b=s.showInEditorToolbar,T=s.enableChildControls,I=u+"Plugin.js",S=o+u+"/";CKEDITOR.plugins.addExternal(u,S,I),r.push(u),CKEditorPluginUtility.AddPluginsServerConfig(u,d,c,f,m,g,C,v,E,p,y,h,b,T)}this.SetThemeVo(l);var P=BaseUtility.AppendTimeStampUrl(n);CKEDITOR.replace(e,{customConfig:P,extraPlugins:r.join(",")}),CKEDITOR.instances.html_design.on("beforePaste",function(e){}),CKEDITOR.instances.html_design.on("paste",function(t){var i=t.data.dataValue;console.log(i);try{var e=$(i);if(e.find(".pluginInnerPanelWrap").remove(),1==e.find("div").length){var n=$(e.find("div").eq(0)),o=D.TryGetIdFromLastSelectedTempHTML(n);if(console.log(o),o)D.GetCKEditorInst().document.getById(o)&&(o="ct_copy_"+StringUtility.Timestamp());else o="ct_copy_"+StringUtility.Timestamp();t.data.dataValue=n.attr("id",o).outerHTML()}}catch(e){console.log("黏贴异常,还原HTML"),t.data.dataValue=i}}),CKEDITOR.instances.html_design.on("afterPaste",function(e){}),CKEDITOR.instances.html_design.on("insertElement",function(e){}),CKEDITOR.instances.html_design.on("insertHtml",function(e){}),CKEDITOR.instances.html_design.on("selectionChange",function(e){for(var t=e.data.selection.getSelectedElement(),i="",n=0;n<e.data.path.elements.length;n++){var o=(t=e.data.path.elements[n]).getAttribute("singlename"),l=t.getHtml();if(o){i=o,D.SetSelectedElem(t.getOuterHtml()),D.SetLastSelectedTempHTML(t.getOuterHtml());var r=t.getHtml();(r=r.replace(/<br \/>/g,"").replace(/<br>/g,"")).indexOf("<")<0&&(console.log(t),D.GetCKEditorInst().getSelection().selectElement(t)),"WFDCT_Template"!=i&&D.CreatePluginInnerPanel(t);break}if("td"==t.getName()&&"&nbsp;"==l){D.GetCKEditorInst().getSelection().selectElement(t.getChild(0));break}}i&&D.DisplayPluginControls(CKEditorPluginUtility.GetEnableChildControls(i))}),this.SetCKEditorInst(CKEDITOR.instances.html_design),CKEDITOR.on("instanceReady",function(e){"function"==typeof i&&i()})}},{key:"DisplayPluginControls",value:function(e){if($(".cke_button").show(),"*"!=e){var t=CKEditorPluginUtility.GetPlugins();for(var i in t){var n=t[i].Setting.SingleName;$(".cke_button__"+StringUtility.ToLowerCase(n)).hide()}for(var o=e.split(";"),l=0;l<o.length;l++){n=o[l];$(".cke_button__"+StringUtility.ToLowerCase(n)).show()}}}},{key:"GetThemeVo",value:function(){return this._ThemeVo}},{key:"SetThemeVo",value:function(e){this._ThemeVo=e,this.ResetRootElemTheme(e)}},{key:"ResetRootElemTheme",value:function(e){if(this.GetCKEditorInst()){var t=this.GetCKEditorHTML();if(null!=t&&""!=t){var i=$(t);if(0<i.length){var n=i.attr("class").split(/\s+/);$.each(n,function(e,t){0<=t.indexOf("html-design-theme-")&&i.removeClass(t)}),i.addClass(e.rootElemClass),this.SetCKEditorHTML(i.outerHTML())}}}}},{key:"ClearALLForDivElemButton",value:function(){for(var e=D.GetCKEditorInst().document.find(".del-button"),t=0;t<e.count();t++)e.getItem(t).remove()}},{key:"CreatePluginInnerPanel",value:function(n){D.ClearALLPluginInnerPanel();var e=new CKEDITOR.dom.element("div");e.addClass("pluginInnerPanelWrap"),n.append(e);var t=new CKEDITOR.dom.element("div");t.addClass("button"),t.addClass("select-img"),t.setAttribute("title","选中"),e.append(t),t.on("click",function(e){alert("暂不支持!");var t=e.data;t.preventDefault(),t.stopPropagation()});var i=new CKEDITOR.dom.element("div");i.addClass("button"),i.addClass("del-img"),i.setAttribute("title","删除"),e.append(i),i.on("click",function(e){n.remove();var t=e.data;t.preventDefault(),t.stopPropagation()});var o=new CKEDITOR.dom.element("div");o.addClass("button"),o.addClass("copy-id-img"),o.setAttribute("title","复制ID"),e.append(o),o.on("click",function(e){var t=n.getAttribute("id");BaseUtility.CopyValueClipboard(t);var i=e.data;i.preventDefault(),i.stopPropagation()})}},{key:"ClearALLPluginInnerPanel",value:function(){for(var e=D.GetCKEditorInst().document.find(".pluginInnerPanelWrap"),t=0;t<e.count();t++)e.getItem(t).remove()}},{key:"SingleElemBindDefaultEvent",value:function(e){var t=e.getAttribute("singlename"),i=e.getHtml();(i=i.replace(/<br \/>/g,"")).indexOf("<")<0&&t&&e.on("click",function(e){console.log(this),D.GetCKEditorInst().getSelection().selectElement(this),D.SetSelectedElem(this.getOuterHtml());var t=e.data;t.preventDefault(),t.stopPropagation()})}},{key:"ALLElemBindDefaultEvent",value:function(){console.log("取消使用点击进行元素选择和删除的功能,迁移为selectionChange事件进行!")}}]),D}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(CKEditorUtility,"_$CKEditorSelectElem",null),_defineProperty(CKEditorUtility,"_LastSelectedTempHTML",null),_defineProperty(CKEditorUtility,"_CKEditorInst",null),_defineProperty(CKEditorUtility,"_ThemeVo",null);var HTMLEditorUtility=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"GetHTMLEditorInst",value:function(){return this._HTMLEditorInst}},{key:"SetHTMLEditorHTML",value:function(e){if(!StringUtility.IsNullOrEmpty(e)){this.GetHTMLEditorInst().setValue(e),CodeMirror.commands.selectAll(this.GetHTMLEditorInst());var t={from:this.GetHTMLEditorInst().getCursor(!0),to:this.GetHTMLEditorInst().getCursor(!1)};this.GetHTMLEditorInst().autoFormatRange(t.from,t.to);this.GetHTMLEditorInst().getDoc().eachLine(function(e){});var i=CKEditorUtility.GetSelectedElem(),n="";i&&(n=i.outerHTML().split(">")[0]);var o=this.GetHTMLEditorInst().getSearchCursor(n);o.findNext(),o.from()&&o.to()&&this.GetHTMLEditorInst().getDoc().setSelection(o.from(),o.to())}}},{key:"GetHtmlEditorHTML",value:function(){return this.GetHTMLEditorInst().getValue()}},{key:"InitializeHTMLCodeDesign",value:function(){this._HTMLEditorInst=CodeMirror.fromTextArea(document.getElementById("TextAreaHTMLEditor"),{mode:{name:"htmlmixed",scriptTypes:[{matches:/\/x-handlebars-template|\/x-mustache/i,mode:null},{matches:/(text|application)\/(x-)?vb(a|script)/i,mode:"vbscript"}]},selectionPointer:!0,theme:"monokai",foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],lineNumbers:!0,lineWrapping:!0}),this._HTMLEditorInst.setSize("100%",PageStyleUtility.GetPageHeight()-85)}}]),e}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(HTMLEditorUtility,"_HTMLEditorInst",null);var JsEditorUtility=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"_GetNewFormJsString",value:function(){return"<script>var FormPageObjectInstance={data:{userEntity:{},organEntity:{},formPO:[],formRecordComplexPO:[],webFormRTParas:{},config:[]},pageReady:function(){},bindRecordDataReady:function(){},validateEveryFromControl:function(validateResult){return validateResult;}}<\/script>"}},{key:"GetJsEditorInst",value:function(){return this._JsEditorInst}},{key:"SetJsEditorJs",value:function(e){this.GetJsEditorInst().setValue(e)}},{key:"GetJsEditorJs",value:function(){return this.GetJsEditorInst().getValue()}},{key:"InitializeJsCodeDesign",value:function(e){if(this._JsEditorInst=CodeMirror.fromTextArea($("#TextAreaJsEditor")[0],{mode:"application/ld+json",lineNumbers:!0,lineWrapping:!0,extraKeys:{"Ctrl-Q":function(e){e.foldCode(e.getCursor())}},foldGutter:!0,smartIndent:!0,matchBrackets:!0,theme:"monokai",gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"]}),this._JsEditorInst.setSize("100%",PageStyleUtility.GetPageHeight()-85),"add"==e){this.SetJsEditorJs(this._GetNewFormJsString()),CodeMirror.commands.selectAll(this.GetJsEditorInst());var t={from:this.GetJsEditorInst().getCursor(!0),to:this.GetJsEditorInst().getCursor(!1)};this.GetJsEditorInst().autoFormatRange(t.from,t.to)}}}]),e}();_defineProperty(JsEditorUtility,"_JsEditorInst",null);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNLRWRpdG9yUGx1Z2luVXRpbGl0eS5qcyIsIkNLRWRpdG9yVXRpbGl0eS5qcyIsIkhUTUxFZGl0b3JVdGlsaXR5LmpzIiwiSnNFZGl0b3JVdGlsaXR5LmpzIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImtleSIsIl9jcmVhdGVDbGFzcyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsInZhbHVlIiwiQ0tFZGl0b3JQbHVnaW5VdGlsaXR5IiwidGhpcyIsInNpbmdsZU5hbWUiLCJ0b29sYmFyTG9jYXRpb24iLCJ0ZXh0IiwiY2xpZW50UmVzb2x2ZSIsInNlcnZlclJlc29sdmUiLCJjbGllbnRSZXNvbHZlSnMiLCJkaWFsb2dXaWR0aCIsImRpYWxvZ0hlaWdodCIsImlzSkJ1aWxkNERDRGF0YSIsImNvbnRyb2xDYXRlZ29yeSIsInNlcnZlckR5bmFtaWNCaW5kIiwic2hvd1JlbW92ZUJ1dHRvbiIsInNob3dJbkVkaXRvclRvb2xiYXIiLCJlbmFibGVDaGlsZENvbnRyb2xzIiwiUGx1Z2luc1NlcnZlckNvbmZpZyIsIlNpbmdsZU5hbWUiLCJUb29sYmFyTG9jYXRpb24iLCJUb29sYmFyTGFiZWwiLCJDbGllbnRSZXNvbHZlIiwiU2VydmVyUmVzb2x2ZSIsIkNsaWVudFJlc29sdmVKcyIsIkRpYWxvZ1dpZHRoIiwiRGlhbG9nSGVpZ2h0IiwiSXNKQnVpbGQ0RENEYXRhIiwiQ29udHJvbENhdGVnb3J5IiwiU2VydmVyRHluYW1pY0JpbmQiLCJTaG93UmVtb3ZlQnV0dG9uIiwiU2hvd0luRWRpdG9yVG9vbGJhciIsIkVuYWJsZUNoaWxkQ29udHJvbHMiLCJjb3Zlck9iaiIsInByb3AiLCJwbHVnaW5TaW5nbGVOYW1lIiwiZXhDb25maWciLCJkZWZhdWx0U2V0dGluZyIsIkRpYWxvZ05hbWUiLCJEaWFsb2dQYWdlVXJsIiwiQmFzZVV0aWxpdHkiLCJBcHBlbmRUaW1lU3RhbXBVcmwiLCJEaWFsb2dUaXRsZSIsIlRvb2xiYXJDb21tYW5kIiwiVG9vbGJhckljb24iLCJJRnJhbWVXaW5kb3ciLCJJRnJhbWVFeGVjdXRlQWN0aW9uTmFtZSIsIkRlc2lnbk1vZGFsSW5wdXRDc3MiLCIkIiwiZXh0ZW5kIiwiX1VzZVNlcnZlckNvbmZpZ0NvdmVyRW1wdHlQbHVnaW5Qcm9wIiwiRGlhbG9nU2V0dGluZ1RpdGxlIiwiU2V0dGluZyIsIlBsdWdpbnMiLCJja0VkaXRvciIsInBhdGgiLCJwbHVnaW5TZXR0aW5nIiwib2tGdW5jIiwiY29uc29sZSIsImxvZyIsIkNLRURJVE9SIiwiZGlhbG9nIiwiYWRkSWZyYW1lIiwiaWZyYW1lIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIl8iLCJmcmFtZUlkIiwiU2V0RWxlbVByb3BzSW5FZGl0RGlhbG9nIiwib25PayIsImNvbnRlbnRXaW5kb3ciLCJEaWFsb2dBcHAiLCJnZXRDb250cm9sUHJvcHMiLCJzdWNjZXNzIiwiRGlhbG9nRXhlY3V0ZUluc2VydEFjdGlvbk5hbWUiLCJvbkNhbmNlbCIsImFkZENvbW1hbmQiLCJkaWFsb2dDb21tYW5kIiwidWkiLCJhZGRCdXR0b24iLCJsYWJlbCIsImljb24iLCJjb21tYW5kIiwidG9vbGJhciIsIm9uIiwiZXZlbnQiLCJPbkNLV3lzaXd5Z0VsZW1EQkNsaWNrRXZlbnQiLCJjb250cm9sU2V0dGluZyIsImVsZW1lbnQiLCJkYXRhIiwiZ2V0QXR0cmlidXRlIiwiZ2V0UGFyZW50IiwiQ0tFZGl0b3JVdGlsaXR5IiwiU2V0U2VsZWN0ZWRFbGVtIiwiZ2V0T3V0ZXJIdG1sIiwiRGlhbG9nRXhlY3V0ZUVkaXRBY3Rpb25OYW1lIiwiZWxlbSIsInNldEF0dHJpYnV0ZSIsInRvTG9jYWxlTG93ZXJDYXNlIiwicmVtb3ZlQXR0cmlidXRlIiwicnVsZXMiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKc29uVXRpbGl0eSIsIkpzb25Ub1N0cmluZyIsIiRlbGVtIiwiYXR0clRvUHJvcCIsImdyb3VwTmFtZSIsImdyb3VwUHJvcCIsIkRlZmF1bHRQcm9wcyIsImF0dHIiLCJjYWxsIiwidmFsaWRhdGVSdWxlcyIsIlN0cmluZ1RvSnNvbiIsImRlY29kZVVSSUNvbXBvbmVudCIsImh0bWwiLCJjb250cm9sUHJvcHMiLCJfaWZyYW1lIiwiVmFsaWRhdGVCdWlsZEVuYWJsZSIsImRvbSIsImNyZWF0ZUZyb21IdG1sIiwiU2VyaWFsaXplUHJvcHNUb0VsZW0iLCJHZXRDS0VkaXRvckluc3QiLCJpbnNlcnRFbGVtZW50IiwiU2luZ2xlRWxlbUJpbmREZWZhdWx0RXZlbnQiLCJzZWxlY3RlZEVsZW0iLCJHZXRTZWxlY3RlZENLRWRpdG9yRWxlbSIsInJlRnJlc2hFbGVtIiwibmV3VGV4dCIsInNldEh0bWwiLCJjb3B5QXR0cmlidXRlcyIsInRlbXAiLCJyZXBsYWNlIiwicmV0dXJuUmVzdWx0IiwiYmFzZUluZm8iLCJzZXJpYWxpemUiLCJiaW5kVG9GaWVsZCIsImZpZWxkTmFtZSIsIkRpYWxvZ1V0aWxpdHkiLCJBbGVydCIsIndpbmRvdyIsIkRpYWxvZ0FsZXJ0SWQiLCJpZnJhbWVPYmoiLCJhY3Rpb25OYW1lIiwic2VsIiwiZ2V0U2VsZWN0aW9uIiwiZ2V0U3RhcnRFbGVtZW50IiwicGFyZW50cyIsImdldFBhcmVudHMiLCJyZWFkeSIsIkdldFNlbGVjdGVkRWxlbSIsIm91dGVySFRNTCIsIkRlc2VyaWFsaXplUHJvcHNGcm9tRWxlbSIsInNldENvbnRyb2xQcm9wcyIsInJlc3VsdCIsInRhYmxlQ2FwdGlvbiIsImZpZWxkQ2FwdGlvbiIsImRlZmF1bHRWYWx1ZSIsImRlZmF1bHRUZXh0IiwiZGVmYXVsdFR5cGUiLCJ2YWxpZGF0ZVR5cGUiLCJTdHJpbmdVdGlsaXR5IiwiUmVtb3ZlTGFzdENoYXIiLCJiaW5kVG9TZWFyY2hGaWVsZCIsImNvbHVtbkNhcHRpb24iLCJjb2x1bW5PcGVyYXRvciIsInRpcE1zZyIsImJ1dHRvbnMiLCJHZXRDS0VkaXRvckhUTUxJblBsdWdpblBhZ2UiLCJmaW5kIiwiZWFjaCIsImJ1dHRvbkNhcHRpb24iLCJidXR0b25JZCIsInB1c2giLCJkYXRhU2V0SWQiLCJwYXJlbnQiLCJsaXN0RGVzaWduIiwibGlzdFJlc291cmNlRW50aXR5IiwibGlzdERhdGFzZXRJZCIsIiR0ZW1wbGF0ZUVsZW0iLCJpZCIsInNob3dfcmVtb3ZlX2J1dHRvbiIsInN0YXR1cyIsInJlbGF0aW9uSWQiLCJ0YWJsZUlkIiwidGFibGVOYW1lIiwiZmllbGREYXRhVHlwZSIsImZpZWxkTGVuZ3RoIiwibXNnIiwibmFtZSIsImNsYXNzTmFtZSIsInBsYWNlaG9sZGVyIiwiY3VzdFJlYWRvbmx5IiwiY3VzdERpc2FibGVkIiwic3R5bGUiLCJkZXNjIiwiY29sdW1uVGl0bGUiLCJjb2x1bW5UYWJsZU5hbWUiLCJjb2x1bW5OYW1lIiwiY29sdW1uRGF0YVR5cGVOYW1lIiwibm9ybWFsRGF0YVNvdXJjZSIsImRlZmF1bHRJc051bGwiLCJzcWxEYXRhU291cmNlIiwiZGljdGlvbmFyeUdyb3VwRGF0YVNvdXJjZUlkIiwiZGljdGlvbmFyeUdyb3VwRGF0YVNvdXJjZVRleHQiLCJyZXN0RGF0YVNvdXJjZSIsImludGVyZmFjZURhdGFTb3VyY2UiLCJzdGF0aWNEYXRhU291cmNlIiwiZGVmYXVsdFNlbGVjdGVkIiwibGF5b3V0RGlyZWN0aW9uIiwicm93TnVtIiwiZGlzcGxheVZhbHVlSW5UZXh0IiwibXVsdGlsZXZlbFByb3BzIiwibGV2ZWwyQmluZENvbnRyb2xJZCIsImVsZW1IdG1sIiwiXyRDS0VkaXRvclNlbGVjdEVsZW0iLCJnZXRCeUlkIiwiX0xhc3RTZWxlY3RlZFRlbXBIVE1MIiwibmV3SFRNTCIsIkdldExhc3RTZWxlY3RlZFRlbXBIVE1MIiwiX0NLRWRpdG9ySW5zdCIsImluc3QiLCJDbGVhckFMTEZvckRpdkVsZW1CdXR0b24iLCJDbGVhckFMTFBsdWdpbklubmVyUGFuZWwiLCJnZXREYXRhIiwic2V0RGF0YSIsInNldFRpbWVvdXQiLCJBTExFbGVtQmluZERlZmF1bHRFdmVudCIsIkdldENLRWRpdG9ySFRNTCIsInRleHRBcmVhRWxlbUlkIiwicGx1Z2luc0NvbmZpZyIsImxvYWRDb21wbGV0ZWRGdW5jIiwiY2tlZGl0b3JDb25maWdGdWxsUGF0aCIsInBsdWdpbkJhc2VQYXRoIiwidGhlbWVWbyIsImV4dHJhUGx1Z2lucyIsIkFycmF5Iiwic2luZ2xlUGx1Z2luQ29uZmlnIiwicGx1Z2luRmlsZU5hbWUiLCJwbHVnaW5Gb2xkZXJOYW1lIiwicGx1Z2lucyIsImFkZEV4dGVybmFsIiwiQWRkUGx1Z2luc1NlcnZlckNvbmZpZyIsIlNldFRoZW1lVm8iLCJlZGl0b3JDb25maWdVcmwiLCJjdXN0b21Db25maWciLCJqb2luIiwiaW5zdGFuY2VzIiwiaHRtbF9kZXNpZ24iLCJzb3VyY2VIVE1MIiwiZGF0YVZhbHVlIiwiJHNvdXJjZUhUTUwiLCJyZW1vdmUiLCIkaW5uZXJFbGVtIiwiZXEiLCJUcnlHZXRJZEZyb21MYXN0U2VsZWN0ZWRUZW1wSFRNTCIsIlRpbWVzdGFtcCIsImUiLCJzZWxlY3Rpb24iLCJnZXRTZWxlY3RlZEVsZW1lbnQiLCJsYXN0Q3VzdFNpbmdsZU5hbWUiLCJlbGVtZW50cyIsImVsZW1Jbm5lckhUTUwiLCJnZXRIdG1sIiwiU2V0TGFzdFNlbGVjdGVkVGVtcEhUTUwiLCJpbm5lckh0bWwiLCJpbmRleE9mIiwic2VsZWN0RWxlbWVudCIsIkNyZWF0ZVBsdWdpbklubmVyUGFuZWwiLCJnZXROYW1lIiwiZ2V0Q2hpbGQiLCJEaXNwbGF5UGx1Z2luQ29udHJvbHMiLCJHZXRFbmFibGVDaGlsZENvbnRyb2xzIiwiU2V0Q0tFZGl0b3JJbnN0Iiwic2hvdyIsIkdldFBsdWdpbnMiLCJUb0xvd2VyQ2FzZSIsImhpZGUiLCJlbmFibGVQbHVnaW5zIiwic3BsaXQiLCJfVGhlbWVWbyIsIl90aGVtZVZvIiwiUmVzZXRSb290RWxlbVRoZW1lIiwicm9vdEVsZW0iLCJjbGFzc0xpc3QiLCJpbmRleCIsIml0ZW0iLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwicm9vdEVsZW1DbGFzcyIsIlNldENLRWRpdG9ySFRNTCIsIm9sZERlbEJ1dHRvbnMiLCJjb3VudCIsImdldEl0ZW0iLCJwbHVnaW5Jbm5lclBhbmVsIiwiYXBwZW5kIiwic2VsZWN0QWxsQnV0dG9uIiwiZXYiLCJhbGVydCIsImRvbUV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJkZWxCdXR0b24iLCJjb3B5SWRCdXR0b24iLCJDb3B5VmFsdWVDbGlwYm9hcmQiLCJIVE1MRWRpdG9yVXRpbGl0eSIsIl9IVE1MRWRpdG9ySW5zdCIsIklzTnVsbE9yRW1wdHkiLCJHZXRIVE1MRWRpdG9ySW5zdCIsInNldFZhbHVlIiwiQ29kZU1pcnJvciIsImNvbW1hbmRzIiwicmFuZ2UiLCJmcm9tIiwiZ2V0Q3Vyc29yIiwidG8iLCJhdXRvRm9ybWF0UmFuZ2UiLCJnZXREb2MiLCJlYWNoTGluZSIsImxpbmUiLCJzZWFyY2hIVE1MIiwiY3Vyc29yIiwiZ2V0U2VhcmNoQ3Vyc29yIiwiZmluZE5leHQiLCJzZXRTZWxlY3Rpb24iLCJnZXRWYWx1ZSIsImZyb21UZXh0QXJlYSIsIm1vZGUiLCJzY3JpcHRUeXBlcyIsIm1hdGNoZXMiLCJzZWxlY3Rpb25Qb2ludGVyIiwidGhlbWUiLCJmb2xkR3V0dGVyIiwiZ3V0dGVycyIsImxpbmVOdW1iZXJzIiwibGluZVdyYXBwaW5nIiwic2V0U2l6ZSIsIlBhZ2VTdHlsZVV0aWxpdHkiLCJHZXRQYWdlSGVpZ2h0IiwiSnNFZGl0b3JVdGlsaXR5IiwiX0pzRWRpdG9ySW5zdCIsImpzIiwiR2V0SnNFZGl0b3JJbnN0IiwiZXh0cmFLZXlzIiwiQ3RybC1RIiwiY20iLCJmb2xkQ29kZSIsInNtYXJ0SW5kZW50IiwibWF0Y2hCcmFja2V0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V0FDQSxTQUFBQSxJQUNBdlcsZ0JBQUF3QixLQUFBK1UsR0F3REEsT0FyREF2VixhQUFBdVYsRUFBQSxLQUFBLENBQUEsQ0FDQXhWLElBQUEsc0JBQ0FPLE1BQUEsV0FDQSxNQUFBLHNSQUVBLENBQ0FQLElBQUEsa0JBQ0FPLE1BQUEsV0FDQSxPQUFBRSxLQUFBZ1YsZ0JBRUEsQ0FDQXpWLElBQUEsZ0JBQ0FPLE1BQUEsU0FBQW1WLEdBQ0FqVixLQUFBa1Ysa0JBQUFqQyxTQUFBZ0MsS0FFQSxDQUNBMVYsSUFBQSxnQkFDQU8sTUFBQSxXQUNBLE9BQUFFLEtBQUFrVixrQkFBQWpCLGFBRUEsQ0FDQTFVLElBQUEseUJBQ0FPLE1BQUEsU0FBQW9MLEdBbUJBLEdBbEJBbEwsS0FBQWdWLGNBQUE5QixXQUFBZ0IsYUFBQXJSLEVBQUEscUJBQUEsR0FBQSxDQUNBc1IsS0FBQSxzQkFDQU8sYUFBQSxFQUNBQyxjQUFBLEVBQ0FRLFVBQUEsQ0FDQUMsU0FBQSxTQUFBQyxHQUNBQSxFQUFBQyxTQUFBRCxFQUFBL0IsZUFHQWtCLFlBQUEsRUFDQWUsYUFBQSxFQUNBQyxlQUFBLEVBQ0FqQixNQUFBLFVBQ0FFLFFBQUEsQ0FBQSx5QkFBQSwyQkFHQXpVLEtBQUFnVixjQUFBSixRQUFBLE9BQUFDLGlCQUFBQyxnQkFBQSxJQUVBLE9BQUE1SixFQUFBLENBQ0FsTCxLQUFBeVYsY0FBQXpWLEtBQUEwVix1QkFDQXhDLFdBQUFDLFNBQUEsVUFBQW5ULEtBQUFrVixtQkFDQSxJQUFBOUIsRUFBQSxDQUNBQyxLQUFBclQsS0FBQWtWLGtCQUFBNUIsV0FBQSxHQUNBQyxHQUFBdlQsS0FBQWtWLGtCQUFBNUIsV0FBQSxJQUVBdFQsS0FBQWtWLGtCQUFBMUIsZ0JBQUFKLEVBQUFDLEtBQUFELEVBQUFHLFNBS0F3QixFQTFEQSxHQTZEQW5WLGdCQUFBbVYsZ0JBQUEsZ0JBQUEiLCJmaWxlIjoiSFRNTERlc2lnblV0aWxpdHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgQ0tFZGl0b3JQbHVnaW5VdGlsaXR5ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBDS0VkaXRvclBsdWdpblV0aWxpdHkoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENLRWRpdG9yUGx1Z2luVXRpbGl0eSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LCBudWxsLCBbe1xuICAgIGtleTogXCJBZGRQbHVnaW5zU2VydmVyQ29uZmlnXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEFkZFBsdWdpbnNTZXJ2ZXJDb25maWcoc2luZ2xlTmFtZSwgdG9vbGJhckxvY2F0aW9uLCB0ZXh0LCBjbGllbnRSZXNvbHZlLCBzZXJ2ZXJSZXNvbHZlLCBjbGllbnRSZXNvbHZlSnMsIGRpYWxvZ1dpZHRoLCBkaWFsb2dIZWlnaHQsIGlzSkJ1aWxkNERDRGF0YSwgY29udHJvbENhdGVnb3J5LCBzZXJ2ZXJEeW5hbWljQmluZCwgc2hvd1JlbW92ZUJ1dHRvbiwgc2hvd0luRWRpdG9yVG9vbGJhciwgZW5hYmxlQ2hpbGRDb250cm9scykge1xuICAgICAgdGhpcy5QbHVnaW5zU2VydmVyQ29uZmlnW3NpbmdsZU5hbWVdID0ge1xuICAgICAgICBTaW5nbGVOYW1lOiBzaW5nbGVOYW1lLFxuICAgICAgICBUb29sYmFyTG9jYXRpb246IHRvb2xiYXJMb2NhdGlvbixcbiAgICAgICAgVG9vbGJhckxhYmVsOiB0ZXh0LFxuICAgICAgICBDbGllbnRSZXNvbHZlOiBjbGllbnRSZXNvbHZlLFxuICAgICAgICBTZXJ2ZXJSZXNvbHZlOiBzZXJ2ZXJSZXNvbHZlLFxuICAgICAgICBDbGllbnRSZXNvbHZlSnM6IGNsaWVudFJlc29sdmVKcyxcbiAgICAgICAgRGlhbG9nV2lkdGg6IGRpYWxvZ1dpZHRoLFxuICAgICAgICBEaWFsb2dIZWlnaHQ6IGRpYWxvZ0hlaWdodCxcbiAgICAgICAgSXNKQnVpbGQ0RENEYXRhOiBpc0pCdWlsZDREQ0RhdGEsXG4gICAgICAgIENvbnRyb2xDYXRlZ29yeTogY29udHJvbENhdGVnb3J5LFxuICAgICAgICBTZXJ2ZXJEeW5hbWljQmluZDogc2VydmVyRHluYW1pY0JpbmQsXG4gICAgICAgIFNob3dSZW1vdmVCdXR0b246IHNob3dSZW1vdmVCdXR0b24sXG4gICAgICAgIFNob3dJbkVkaXRvclRvb2xiYXI6IHNob3dJbkVkaXRvclRvb2xiYXIsXG4gICAgICAgIEVuYWJsZUNoaWxkQ29udHJvbHM6IGVuYWJsZUNoaWxkQ29udHJvbHNcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9Vc2VTZXJ2ZXJDb25maWdDb3ZlckVtcHR5UGx1Z2luUHJvcFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfVXNlU2VydmVyQ29uZmlnQ292ZXJFbXB0eVBsdWdpblByb3Aob2JqKSB7XG4gICAgICB2YXIgY292ZXJPYmogPSB0aGlzLlBsdWdpbnNTZXJ2ZXJDb25maWdbb2JqLlNpbmdsZU5hbWVdO1xuXG4gICAgICBpZiAoY292ZXJPYmopIHtcbiAgICAgICAgZm9yICh2YXIgcHJvcCBpbiBvYmopIHtcbiAgICAgICAgICBpZiAodHlwZW9mIG9ialtwcm9wXSAhPSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGlmIChvYmpbcHJvcF0gPT0gXCJcIiB8fCBvYmpbcHJvcF0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICBpZiAoY292ZXJPYmpbcHJvcF0pIHtcbiAgICAgICAgICAgICAgICBvYmpbcHJvcF0gPSBjb3Zlck9ialtwcm9wXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRHZW5lcmFsUGx1Z2luSW5zdGFuY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0R2VuZXJhbFBsdWdpbkluc3RhbmNlKHBsdWdpblNpbmdsZU5hbWUsIGV4Q29uZmlnKSB7XG4gICAgICB2YXIgZGVmYXVsdFNldHRpbmcgPSB7XG4gICAgICAgIFNpbmdsZU5hbWU6IHBsdWdpblNpbmdsZU5hbWUsXG4gICAgICAgIERpYWxvZ05hbWU6ICcnLFxuICAgICAgICBEaWFsb2dXaWR0aDogbnVsbCxcbiAgICAgICAgRGlhbG9nSGVpZ2h0OiBudWxsLFxuICAgICAgICBEaWFsb2dQYWdlVXJsOiBCYXNlVXRpbGl0eS5BcHBlbmRUaW1lU3RhbXBVcmwoJ0RpYWxvZy5odG1sJyksXG4gICAgICAgIERpYWxvZ1RpdGxlOiBcIkRJVlwiLFxuICAgICAgICBUb29sYmFyQ29tbWFuZDogJycsXG4gICAgICAgIFRvb2xiYXJJY29uOiAnSWNvbi5wbmcnLFxuICAgICAgICBUb29sYmFyTGFiZWw6IFwiXCIsXG4gICAgICAgIFRvb2xiYXJMb2NhdGlvbjogJycsXG4gICAgICAgIElGcmFtZVdpbmRvdzogbnVsbCxcbiAgICAgICAgSUZyYW1lRXhlY3V0ZUFjdGlvbk5hbWU6IFwiSW5zZXJ0XCIsXG4gICAgICAgIERlc2lnbk1vZGFsSW5wdXRDc3M6IFwiXCIsXG4gICAgICAgIENsaWVudFJlc29sdmU6IFwiXCIsXG4gICAgICAgIFNlcnZlclJlc29sdmU6IFwiXCIsXG4gICAgICAgIElzSkJ1aWxkNERDRGF0YTogXCJcIixcbiAgICAgICAgQ29udHJvbENhdGVnb3J5OiBcIlwiLFxuICAgICAgICBTZXJ2ZXJEeW5hbWljQmluZDogXCJcIixcbiAgICAgICAgU2hvd1JlbW92ZUJ1dHRvbjogXCJcIixcbiAgICAgICAgU2hvd0luRWRpdG9yVG9vbGJhcjogXCJcIixcbiAgICAgICAgRW5hYmxlQ2hpbGRDb250cm9sczogXCJcIlxuICAgICAgfTtcbiAgICAgIGRlZmF1bHRTZXR0aW5nID0gJC5leHRlbmQodHJ1ZSwge30sIGRlZmF1bHRTZXR0aW5nLCBleENvbmZpZyk7XG4gICAgICBkZWZhdWx0U2V0dGluZyA9IENLRWRpdG9yUGx1Z2luVXRpbGl0eS5fVXNlU2VydmVyQ29uZmlnQ292ZXJFbXB0eVBsdWdpblByb3AoZGVmYXVsdFNldHRpbmcpO1xuXG4gICAgICBpZiAoZGVmYXVsdFNldHRpbmcgIT0gbnVsbCkge1xuICAgICAgICBkZWZhdWx0U2V0dGluZy5EaWFsb2dOYW1lID0gZGVmYXVsdFNldHRpbmcuU2luZ2xlTmFtZTtcbiAgICAgICAgZGVmYXVsdFNldHRpbmcuVG9vbGJhckNvbW1hbmQgPSBcIkpCdWlsZDREQy5Gb3JtRGVzaWduLlBsdWdpbnMuXCIgKyBkZWZhdWx0U2V0dGluZy5TaW5nbGVOYW1lO1xuICAgICAgICBkZWZhdWx0U2V0dGluZy5EaWFsb2dTZXR0aW5nVGl0bGUgPSBkZWZhdWx0U2V0dGluZy5Ub29sYmFyTGFiZWwgKyBcIldlYuaOp+S7tlwiO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIFNldHRpbmc6IGRlZmF1bHRTZXR0aW5nXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0RW5hYmxlQ2hpbGRDb250cm9sc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRFbmFibGVDaGlsZENvbnRyb2xzKHNpbmdsZU5hbWUpIHtcbiAgICAgIHJldHVybiB0aGlzLlBsdWdpbnNbc2luZ2xlTmFtZV0uU2V0dGluZy5FbmFibGVDaGlsZENvbnRyb2xzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRQbHVnaW5zXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldFBsdWdpbnMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5QbHVnaW5zO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJSZWdHZW5lcmFsUGx1Z2luVG9FZGl0b3JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gUmVnR2VuZXJhbFBsdWdpblRvRWRpdG9yKGNrRWRpdG9yLCBwYXRoLCBwbHVnaW5TZXR0aW5nLCBva0Z1bmMpIHtcbiAgICAgIGNvbnNvbGUubG9nKHBsdWdpblNldHRpbmcpO1xuICAgICAgQ0tFRElUT1IuZGlhbG9nLmFkZElmcmFtZShwbHVnaW5TZXR0aW5nLkRpYWxvZ05hbWUsIHBsdWdpblNldHRpbmcuRGlhbG9nU2V0dGluZ1RpdGxlLCBwYXRoICsgcGx1Z2luU2V0dGluZy5EaWFsb2dQYWdlVXJsLCBwbHVnaW5TZXR0aW5nLkRpYWxvZ1dpZHRoLCBwbHVnaW5TZXR0aW5nLkRpYWxvZ0hlaWdodCwgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaWZyYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5fLmZyYW1lSWQpO1xuICAgICAgICBwbHVnaW5TZXR0aW5nLklGcmFtZVdpbmRvdyA9IGlmcmFtZTtcbiAgICAgICAgQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LlNldEVsZW1Qcm9wc0luRWRpdERpYWxvZyhwbHVnaW5TZXR0aW5nLklGcmFtZVdpbmRvdywgcGx1Z2luU2V0dGluZy5JRnJhbWVFeGVjdXRlQWN0aW9uTmFtZSk7XG4gICAgICB9LCB7XG4gICAgICAgIG9uT2s6IGZ1bmN0aW9uIG9uT2soKSB7XG4gICAgICAgICAgdmFyIHByb3BzID0gcGx1Z2luU2V0dGluZy5JRnJhbWVXaW5kb3cuY29udGVudFdpbmRvdy5EaWFsb2dBcHAuZ2V0Q29udHJvbFByb3BzKCk7XG5cbiAgICAgICAgICBpZiAocHJvcHMuc3VjY2VzcyA9PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIG9rRnVuYyhja0VkaXRvciwgcGx1Z2luU2V0dGluZywgcHJvcHMsIHBsdWdpblNldHRpbmcuSUZyYW1lV2luZG93LmNvbnRlbnRXaW5kb3cpO1xuICAgICAgICAgIHBsdWdpblNldHRpbmcuSUZyYW1lRXhlY3V0ZUFjdGlvbk5hbWUgPSBDS0VkaXRvclBsdWdpblV0aWxpdHkuRGlhbG9nRXhlY3V0ZUluc2VydEFjdGlvbk5hbWU7XG4gICAgICAgIH0sXG4gICAgICAgIG9uQ2FuY2VsOiBmdW5jdGlvbiBvbkNhbmNlbCgpIHtcbiAgICAgICAgICBwbHVnaW5TZXR0aW5nLklGcmFtZUV4ZWN1dGVBY3Rpb25OYW1lID0gQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LkRpYWxvZ0V4ZWN1dGVJbnNlcnRBY3Rpb25OYW1lO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGNrRWRpdG9yLmFkZENvbW1hbmQocGx1Z2luU2V0dGluZy5Ub29sYmFyQ29tbWFuZCwgbmV3IENLRURJVE9SLmRpYWxvZ0NvbW1hbmQocGx1Z2luU2V0dGluZy5EaWFsb2dOYW1lKSk7XG5cbiAgICAgIGlmIChwbHVnaW5TZXR0aW5nLlNob3dJbkVkaXRvclRvb2xiYXIgPT0gXCJ0cnVlXCIpIHtcbiAgICAgICAgY2tFZGl0b3IudWkuYWRkQnV0dG9uKHBsdWdpblNldHRpbmcuU2luZ2xlTmFtZSwge1xuICAgICAgICAgIGxhYmVsOiBwbHVnaW5TZXR0aW5nLlRvb2xiYXJMYWJlbCxcbiAgICAgICAgICBpY29uOiBwYXRoICsgcGx1Z2luU2V0dGluZy5Ub29sYmFySWNvbixcbiAgICAgICAgICBjb21tYW5kOiBwbHVnaW5TZXR0aW5nLlRvb2xiYXJDb21tYW5kLFxuICAgICAgICAgIHRvb2xiYXI6IHBsdWdpblNldHRpbmcuVG9vbGJhckxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBja0VkaXRvci5vbignZG91YmxlY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgQ0tFZGl0b3JQbHVnaW5VdGlsaXR5Lk9uQ0tXeXNpd3lnRWxlbURCQ2xpY2tFdmVudChldmVudCwgcGx1Z2luU2V0dGluZyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiT25DS1d5c2l3eWdFbGVtREJDbGlja0V2ZW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIE9uQ0tXeXNpd3lnRWxlbURCQ2xpY2tFdmVudChldmVudCwgY29udHJvbFNldHRpbmcpIHtcbiAgICAgIHZhciBlbGVtZW50ID0gZXZlbnQuZGF0YS5lbGVtZW50O1xuXG4gICAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJydW50aW1lX2F1dG9fcmVtb3ZlXCIpID09IFwidHJ1ZVwiKSB7XG4gICAgICAgIGVsZW1lbnQgPSBldmVudC5kYXRhLmVsZW1lbnQuZ2V0UGFyZW50KCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBzaW5nbGVOYW1lID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJzaW5nbGVOYW1lXCIpO1xuXG4gICAgICBpZiAoc2luZ2xlTmFtZSA9PSBjb250cm9sU2V0dGluZy5TaW5nbGVOYW1lKSB7XG4gICAgICAgIENLRWRpdG9yVXRpbGl0eS5TZXRTZWxlY3RlZEVsZW0oZWxlbWVudC5nZXRPdXRlckh0bWwoKSk7XG4gICAgICAgIGV2ZW50LmRhdGEuZGlhbG9nID0gY29udHJvbFNldHRpbmcuRGlhbG9nTmFtZTtcbiAgICAgICAgY29udHJvbFNldHRpbmcuSUZyYW1lRXhlY3V0ZUFjdGlvbk5hbWUgPSBDS0VkaXRvclBsdWdpblV0aWxpdHkuRGlhbG9nRXhlY3V0ZUVkaXRBY3Rpb25OYW1lO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJTZXJpYWxpemVQcm9wc1RvRWxlbVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBTZXJpYWxpemVQcm9wc1RvRWxlbShlbGVtLCBwcm9wcywgY29udHJvbFNldHRpbmcpIHtcbiAgICAgIGVsZW0uc2V0QXR0cmlidXRlKFwiamJ1aWxkNGRjX2N1c3RvbVwiLCBcInRydWVcIik7XG4gICAgICBlbGVtLnNldEF0dHJpYnV0ZShcInNpbmdsZW5hbWVcIiwgY29udHJvbFNldHRpbmcuU2luZ2xlTmFtZSk7XG4gICAgICBlbGVtLnNldEF0dHJpYnV0ZShcImlzX2pidWlsZDRkY19kYXRhXCIsIGNvbnRyb2xTZXR0aW5nLklzSkJ1aWxkNERDRGF0YSk7XG4gICAgICBlbGVtLnNldEF0dHJpYnV0ZShcImNvbnRyb2xfY2F0ZWdvcnlcIiwgY29udHJvbFNldHRpbmcuQ29udHJvbENhdGVnb3J5KTtcbiAgICAgIGVsZW0uc2V0QXR0cmlidXRlKFwic2hvd19yZW1vdmVfYnV0dG9uXCIsIGNvbnRyb2xTZXR0aW5nLlNob3dSZW1vdmVCdXR0b24pO1xuXG4gICAgICBpZiAocHJvcHNbXCJiYXNlSW5mb1wiXSkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHNbXCJiYXNlSW5mb1wiXSkge1xuICAgICAgICAgIGlmIChrZXkgPT0gXCJyZWFkb25seVwiKSB7XG4gICAgICAgICAgICBpZiAocHJvcHNbXCJiYXNlSW5mb1wiXVtrZXldID09IFwicmVhZG9ubHlcIikge1xuICAgICAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShrZXkudG9Mb2NhbGVMb3dlckNhc2UoKSwgcHJvcHNbXCJiYXNlSW5mb1wiXVtrZXldKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGVsZW0ucmVtb3ZlQXR0cmlidXRlKFwicmVhZG9ubHlcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT0gXCJkaXNhYmxlZFwiKSB7XG4gICAgICAgICAgICBpZiAocHJvcHNbXCJiYXNlSW5mb1wiXVtrZXldID09IFwiZGlzYWJsZWRcIikge1xuICAgICAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShrZXkudG9Mb2NhbGVMb3dlckNhc2UoKSwgcHJvcHNbXCJiYXNlSW5mb1wiXVtrZXldKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGVsZW0ucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKGtleS50b0xvY2FsZUxvd2VyQ2FzZSgpLCBwcm9wc1tcImJhc2VJbmZvXCJdW2tleV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAocHJvcHNbXCJiaW5kVG9GaWVsZFwiXSkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHNbXCJiaW5kVG9GaWVsZFwiXSkge1xuICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKGtleS50b0xvY2FsZUxvd2VyQ2FzZSgpLCBwcm9wc1tcImJpbmRUb0ZpZWxkXCJdW2tleV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9wc1tcImRlZmF1bHRWYWx1ZVwiXSkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHNbXCJkZWZhdWx0VmFsdWVcIl0pIHtcbiAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShrZXkudG9Mb2NhbGVMb3dlckNhc2UoKSwgcHJvcHNbXCJkZWZhdWx0VmFsdWVcIl1ba2V5XSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHByb3BzW1widmFsaWRhdGVSdWxlc1wiXSkge1xuICAgICAgICBpZiAocHJvcHNbXCJ2YWxpZGF0ZVJ1bGVzXCJdLnJ1bGVzKSB7XG4gICAgICAgICAgaWYgKHByb3BzW1widmFsaWRhdGVSdWxlc1wiXS5ydWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShcInZhbGlkYXRlcnVsZXNcIiwgZW5jb2RlVVJJQ29tcG9uZW50KEpzb25VdGlsaXR5Lkpzb25Ub1N0cmluZyhwcm9wc1tcInZhbGlkYXRlUnVsZXNcIl0pKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9wc1tcIm5vcm1hbFByb3BzXCJdKSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBwcm9wc1tcIm5vcm1hbFByb3BzXCJdKSB7XG4gICAgICAgICAgZWxlbS5zZXRBdHRyaWJ1dGUoa2V5LnRvTG9jYWxlTG93ZXJDYXNlKCksIHByb3BzW1wibm9ybWFsUHJvcHNcIl1ba2V5XSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHByb3BzW1wiYmluZFRvU2VhcmNoRmllbGRcIl0pIHtcbiAgICAgICAgZm9yICh2YXIga2V5IGluIHByb3BzW1wiYmluZFRvU2VhcmNoRmllbGRcIl0pIHtcbiAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShrZXkudG9Mb2NhbGVMb3dlckNhc2UoKSwgcHJvcHNbXCJiaW5kVG9TZWFyY2hGaWVsZFwiXVtrZXldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAocHJvcHNbXCJub3JtYWxEYXRhU291cmNlXCJdKSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBwcm9wc1tcIm5vcm1hbERhdGFTb3VyY2VcIl0pIHtcbiAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShrZXkudG9Mb2NhbGVMb3dlckNhc2UoKSwgcHJvcHNbXCJub3JtYWxEYXRhU291cmNlXCJdW2tleV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9wc1tcIm11bHRpbGV2ZWxQcm9wc1wiXSkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcHNbXCJtdWx0aWxldmVsUHJvcHNcIl0pIHtcbiAgICAgICAgICBlbGVtLnNldEF0dHJpYnV0ZShrZXkudG9Mb2NhbGVMb3dlckNhc2UoKSwgcHJvcHNbXCJtdWx0aWxldmVsUHJvcHNcIl1ba2V5XSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGVsZW07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkRlc2VyaWFsaXplUHJvcHNGcm9tRWxlbVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBEZXNlcmlhbGl6ZVByb3BzRnJvbUVsZW0oZWxlbSkge1xuICAgICAgdmFyIHByb3BzID0ge307XG4gICAgICB2YXIgJGVsZW0gPSAkKGVsZW0pO1xuXG4gICAgICBmdW5jdGlvbiBhdHRyVG9Qcm9wKHByb3BzLCBncm91cE5hbWUpIHtcbiAgICAgICAgdmFyIGdyb3VwUHJvcCA9IHt9O1xuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLkRlZmF1bHRQcm9wc1tncm91cE5hbWVdKSB7XG4gICAgICAgICAgaWYgKCRlbGVtLmF0dHIoa2V5KSkge1xuICAgICAgICAgICAgZ3JvdXBQcm9wW2tleV0gPSAkZWxlbS5hdHRyKGtleSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdyb3VwUHJvcFtrZXldID0gdGhpcy5EZWZhdWx0UHJvcHNbZ3JvdXBOYW1lXVtrZXldO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByb3BzW2dyb3VwTmFtZV0gPSBncm91cFByb3A7XG4gICAgICAgIHJldHVybiBwcm9wcztcbiAgICAgIH1cblxuICAgICAgcHJvcHMgPSBhdHRyVG9Qcm9wLmNhbGwodGhpcywgcHJvcHMsIFwiYmFzZUluZm9cIik7XG4gICAgICBwcm9wcyA9IGF0dHJUb1Byb3AuY2FsbCh0aGlzLCBwcm9wcywgXCJiaW5kVG9GaWVsZFwiKTtcbiAgICAgIHByb3BzID0gYXR0clRvUHJvcC5jYWxsKHRoaXMsIHByb3BzLCBcImRlZmF1bHRWYWx1ZVwiKTtcbiAgICAgIHByb3BzID0gYXR0clRvUHJvcC5jYWxsKHRoaXMsIHByb3BzLCBcImJpbmRUb1NlYXJjaEZpZWxkXCIpO1xuICAgICAgcHJvcHMgPSBhdHRyVG9Qcm9wLmNhbGwodGhpcywgcHJvcHMsIFwibm9ybWFsRGF0YVNvdXJjZVwiKTtcbiAgICAgIHByb3BzID0gYXR0clRvUHJvcC5jYWxsKHRoaXMsIHByb3BzLCBcIm11bHRpbGV2ZWxQcm9wc1wiKTtcblxuICAgICAgaWYgKCRlbGVtLmF0dHIoXCJ2YWxpZGF0ZVJ1bGVzXCIpKSB7XG4gICAgICAgIHByb3BzLnZhbGlkYXRlUnVsZXMgPSBKc29uVXRpbGl0eS5TdHJpbmdUb0pzb24oZGVjb2RlVVJJQ29tcG9uZW50KCRlbGVtLmF0dHIoXCJ2YWxpZGF0ZVJ1bGVzXCIpKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwcm9wcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiQnVpbGRHZW5lcmFsRWxlbVRvQ0tXeXNpd3lnXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEJ1aWxkR2VuZXJhbEVsZW1Ub0NLV3lzaXd5ZyhodG1sLCBjb250cm9sU2V0dGluZywgY29udHJvbFByb3BzLCBfaWZyYW1lKSB7XG4gICAgICBpZiAodGhpcy5WYWxpZGF0ZUJ1aWxkRW5hYmxlKGh0bWwsIGNvbnRyb2xTZXR0aW5nLCBjb250cm9sUHJvcHMsIF9pZnJhbWUpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiSUZyYW1lRXhlY3V0ZUFjdGlvbk5hbWU6XCIgKyBjb250cm9sU2V0dGluZy5JRnJhbWVFeGVjdXRlQWN0aW9uTmFtZSk7XG5cbiAgICAgICAgaWYgKGNvbnRyb2xTZXR0aW5nLklGcmFtZUV4ZWN1dGVBY3Rpb25OYW1lID09IENLRWRpdG9yUGx1Z2luVXRpbGl0eS5EaWFsb2dFeGVjdXRlSW5zZXJ0QWN0aW9uTmFtZSkge1xuICAgICAgICAgIHZhciBlbGVtID0gQ0tFRElUT1IuZG9tLmVsZW1lbnQuY3JlYXRlRnJvbUh0bWwoaHRtbCk7XG4gICAgICAgICAgdGhpcy5TZXJpYWxpemVQcm9wc1RvRWxlbShlbGVtLCBjb250cm9sUHJvcHMsIGNvbnRyb2xTZXR0aW5nKTtcbiAgICAgICAgICBDS0VkaXRvclV0aWxpdHkuR2V0Q0tFZGl0b3JJbnN0KCkuaW5zZXJ0RWxlbWVudChlbGVtKTtcbiAgICAgICAgICBDS0VkaXRvclV0aWxpdHkuU2luZ2xlRWxlbUJpbmREZWZhdWx0RXZlbnQoZWxlbSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHNlbGVjdGVkRWxlbSA9IENLRWRpdG9yVXRpbGl0eS5HZXRTZWxlY3RlZENLRWRpdG9yRWxlbSgpO1xuXG4gICAgICAgICAgaWYgKHNlbGVjdGVkRWxlbSkge1xuICAgICAgICAgICAgdmFyIHJlRnJlc2hFbGVtID0gbmV3IENLRURJVE9SLmRvbS5lbGVtZW50LmNyZWF0ZUZyb21IdG1sKHNlbGVjdGVkRWxlbS5nZXRPdXRlckh0bWwoKSk7XG5cbiAgICAgICAgICAgIGlmIChyZUZyZXNoRWxlbS5nZXRBdHRyaWJ1dGUoXCJjb250cm9sX2NhdGVnb3J5XCIpID09IFwiSW5wdXRDb250cm9sXCIpIHtcbiAgICAgICAgICAgICAgdmFyIG5ld1RleHQgPSAkKGh0bWwpLmh0bWwoKTtcbiAgICAgICAgICAgICAgcmVGcmVzaEVsZW0uc2V0SHRtbChuZXdUZXh0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2VsZWN0ZWRFbGVtLmNvcHlBdHRyaWJ1dGVzKHJlRnJlc2hFbGVtLCB7XG4gICAgICAgICAgICAgIHRlbXA6IFwidGVtcFwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuU2VyaWFsaXplUHJvcHNUb0VsZW0ocmVGcmVzaEVsZW0sIGNvbnRyb2xQcm9wcywgY29udHJvbFNldHRpbmcpO1xuICAgICAgICAgICAgcmVGcmVzaEVsZW0ucmVwbGFjZShzZWxlY3RlZEVsZW0pO1xuICAgICAgICAgICAgQ0tFZGl0b3JVdGlsaXR5LlNpbmdsZUVsZW1CaW5kRGVmYXVsdEV2ZW50KHJlRnJlc2hFbGVtKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiVmFsaWRhdGVCdWlsZEVuYWJsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBWYWxpZGF0ZUJ1aWxkRW5hYmxlKGh0bWwsIGNvbnRyb2xTZXR0aW5nLCBjb250cm9sUHJvcHMsIF9pZnJhbWUpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJWYWxpZGF0ZVNlcmlhbGl6ZUNvbnRyb2xEaWFsb2dDb21wbGV0ZWRFbmFibGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gVmFsaWRhdGVTZXJpYWxpemVDb250cm9sRGlhbG9nQ29tcGxldGVkRW5hYmxlKHJldHVyblJlc3VsdCkge1xuICAgICAgaWYgKHJldHVyblJlc3VsdC5iYXNlSW5mby5zZXJpYWxpemUgPT0gXCJ0cnVlXCIgJiYgcmV0dXJuUmVzdWx0LmJpbmRUb0ZpZWxkLmZpZWxkTmFtZSA9PSBcIlwiKSB7XG4gICAgICAgIERpYWxvZ1V0aWxpdHkuQWxlcnQod2luZG93LCBEaWFsb2dVdGlsaXR5LkRpYWxvZ0FsZXJ0SWQsIHt9LCBcIuW6j+WIl+WMlueahOaOp+S7tuW/hemhu+e7keWumuWtl+autSFcIiwgbnVsbCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc3VjY2VzczogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJldHVyblJlc3VsdDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiU2V0RWxlbVByb3BzSW5FZGl0RGlhbG9nXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFNldEVsZW1Qcm9wc0luRWRpdERpYWxvZyhpZnJhbWVPYmosIGFjdGlvbk5hbWUpIHtcbiAgICAgIHZhciBzZWwgPSBDS0VkaXRvclV0aWxpdHkuR2V0Q0tFZGl0b3JJbnN0KCkuZ2V0U2VsZWN0aW9uKCkuZ2V0U3RhcnRFbGVtZW50KCk7XG4gICAgICB2YXIgcGFyZW50cyA9IG51bGw7XG5cbiAgICAgIGlmIChzZWwpIHtcbiAgICAgICAgcGFyZW50cyA9IHNlbC5nZXRQYXJlbnRzKCk7XG4gICAgICB9XG5cbiAgICAgIGlmcmFtZU9iai5jb250ZW50V2luZG93LkRpYWxvZ0FwcC5yZWFkeShhY3Rpb25OYW1lLCBzZWwsIHBhcmVudHMpO1xuXG4gICAgICBpZiAoYWN0aW9uTmFtZSA9PSB0aGlzLkRpYWxvZ0V4ZWN1dGVFZGl0QWN0aW9uTmFtZSkge1xuICAgICAgICB2YXIgZWxlbSA9IENLRWRpdG9yVXRpbGl0eS5HZXRTZWxlY3RlZEVsZW0oKS5vdXRlckhUTUwoKTtcbiAgICAgICAgdmFyIHByb3BzID0gdGhpcy5EZXNlcmlhbGl6ZVByb3BzRnJvbUVsZW0oZWxlbSk7XG4gICAgICAgIGlmcmFtZU9iai5jb250ZW50V2luZG93LkRpYWxvZ0FwcC5zZXRDb250cm9sUHJvcHMoJChlbGVtKSwgcHJvcHMpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRDb250cm9sRGVzY1RleHRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0Q29udHJvbERlc2NUZXh0KHBsdWdpblNldHRpbmcsIHByb3BzKSB7XG4gICAgICBjb25zb2xlLmxvZyhwcm9wcyk7XG4gICAgICB2YXIgcmVzdWx0ID0gXCLnsbvlnos644CQXCIgKyBwbHVnaW5TZXR0aW5nLlRvb2xiYXJMYWJlbCArIFwi44CRPGJyIC8+57uR5a6aOuOAkFwiICsgcHJvcHMuYmluZFRvRmllbGQudGFibGVDYXB0aW9uICsgXCItXCIgKyBwcm9wcy5iaW5kVG9GaWVsZC5maWVsZENhcHRpb24gKyBcIuOAkVwiO1xuXG4gICAgICBpZiAocHJvcHMuZGVmYXVsdFZhbHVlKSB7XG4gICAgICAgIGlmIChwcm9wcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFRleHQpIHtcbiAgICAgICAgICByZXN1bHQgKz0gXCI8YnIgLz7pu5jorqQ644CQXCIgKyBwcm9wcy5kZWZhdWx0VmFsdWUuZGVmYXVsdFR5cGUgKyBcIjpcIiArIHByb3BzLmRlZmF1bHRWYWx1ZS5kZWZhdWx0VGV4dCArIFwi44CRXCI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHByb3BzLnZhbGlkYXRlUnVsZXMpIHtcbiAgICAgICAgaWYgKHByb3BzLnZhbGlkYXRlUnVsZXMucnVsZXMpIHtcbiAgICAgICAgICBpZiAocHJvcHMudmFsaWRhdGVSdWxlcy5ydWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gXCI8YnIgLz7pqozor4E644CQXCI7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMudmFsaWRhdGVSdWxlcy5ydWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICByZXN1bHQgKz0gcHJvcHMudmFsaWRhdGVSdWxlcy5ydWxlc1tpXS52YWxpZGF0ZVR5cGUgKyBcIjtcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVzdWx0ID0gU3RyaW5nVXRpbGl0eS5SZW1vdmVMYXN0Q2hhcihyZXN1bHQpO1xuICAgICAgICAgICAgcmVzdWx0ICs9IFwi44CRXCI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldFNlYXJjaENvbnRyb2xEZXNjVGV4dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRTZWFyY2hDb250cm9sRGVzY1RleHQocGx1Z2luU2V0dGluZywgcHJvcHMpIHtcbiAgICAgIHJldHVybiBcIltcIiArIHBsdWdpblNldHRpbmcuVG9vbGJhckxhYmVsICsgXCJdIOe7keWumjpbXCIgKyBwcm9wcy5iaW5kVG9TZWFyY2hGaWVsZC5jb2x1bW5DYXB0aW9uICsgXCJdKFwiICsgcHJvcHMuYmluZFRvU2VhcmNoRmllbGQuY29sdW1uT3BlcmF0b3IgKyBcIilcIjtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0QXV0b1JlbW92ZVRpcExhYmVsXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldEF1dG9SZW1vdmVUaXBMYWJlbCh0aXBNc2cpIHtcbiAgICAgIGlmICghdGlwTXNnKSB7XG4gICAgICAgIHRpcE1zZyA9IFwi5Y+M5Ye757yW6L6R6K+l6YOo5Lu2XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAnPGRpdiBydW50aW1lX2F1dG9fcmVtb3ZlPVwidHJ1ZVwiIGNsYXNzPVwid3lzaXd5Zy1hdXRvLXJlbW92ZS10aXBcIj4nICsgdGlwTXNnICsgJzwvZGl2Pic7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlRyeUdldExpc3RCdXR0b25zSW5QbHVnaW5QYWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFRyeUdldExpc3RCdXR0b25zSW5QbHVnaW5QYWdlKCkge1xuICAgICAgdmFyIGJ1dHRvbnMgPSBbXTtcbiAgICAgIHZhciBodG1sID0gQ0tFZGl0b3JVdGlsaXR5LkdldENLRWRpdG9ySFRNTEluUGx1Z2luUGFnZSgpO1xuICAgICAgdmFyICRidXR0b25zID0gJChodG1sKS5maW5kKFwiW2J1dHRvbmNhcHRpb25dXCIpO1xuICAgICAgJGJ1dHRvbnMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBidXR0b25DYXB0aW9uID0gJCh0aGlzKS5hdHRyKFwiYnV0dG9uY2FwdGlvblwiKTtcbiAgICAgICAgdmFyIGJ1dHRvbklkID0gJCh0aGlzKS5hdHRyKFwiaWRcIik7XG4gICAgICAgIGJ1dHRvbnMucHVzaCh7XG4gICAgICAgICAgYnV0dG9uQ2FwdGlvbjogYnV0dG9uQ2FwdGlvbixcbiAgICAgICAgICBidXR0b25JZDogYnV0dG9uSWRcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBidXR0b25zO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJUcnlHZXREYXRhU2V0SWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gVHJ5R2V0RGF0YVNldElkKHNlbCwgcGFyZW50cykge1xuICAgICAgaWYgKHNlbCkge1xuICAgICAgICBmb3IgKHZhciBpID0gcGFyZW50cy5sZW5ndGggLSAxOyBpLS07IGkgPj0gMCkge1xuICAgICAgICAgIGlmIChwYXJlbnRzW2ldLmdldEF0dHJpYnV0ZShcImRhdGFzZXRpZFwiKSAhPSBudWxsICYmIHBhcmVudHNbaV0uZ2V0QXR0cmlidXRlKFwiZGF0YXNldGlkXCIpICE9IFwiXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnRzW2ldLmdldEF0dHJpYnV0ZShcImRhdGFzZXRpZFwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLmRhdGFTZXRJZCkge1xuICAgICAgICByZXR1cm4gd2luZG93LnBhcmVudC5saXN0RGVzaWduLmxpc3RSZXNvdXJjZUVudGl0eS5saXN0RGF0YXNldElkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiVGVtcGxhdGVBZGREZWZQcm9wXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFRlbXBsYXRlQWRkRGVmUHJvcCgkdGVtcGxhdGVFbGVtLCBpZCwgc2hvd19yZW1vdmVfYnV0dG9uLCBzaW5nbGVOYW1lLCBzdGF0dXMpIHtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcImNsYXNzbmFtZVwiLCBcIlwiKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcImNvbnRyb2xfY2F0ZWdvcnlcIiwgXCJDb250YWluZXJDb250cm9sXCIpO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwiY3VzdGRpc2FibGVkXCIsIFwibm9kaXNhYmxlZFwiKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcImN1c3RyZWFkb25seVwiLCBcIm5vcmVhZG9ubHlcIik7XG4gICAgICAkdGVtcGxhdGVFbGVtLmF0dHIoXCJkZXNjXCIsIFwiXCIpO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwiaWRcIiwgaWQpO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwiaXNfamJ1aWxkNGRjX2RhdGFcIiwgXCJmYWxzZVwiKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcImpidWlsZDRkY19jdXN0b21cIiwgXCJ0cnVlXCIpO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwibmFtZVwiLCBpZCk7XG4gICAgICAkdGVtcGxhdGVFbGVtLmF0dHIoXCJwbGFjZWhvbGRlclwiLCBcIlwiKTtcbiAgICAgICR0ZW1wbGF0ZUVsZW0uYXR0cihcInNlcmlhbGl6ZVwiLCBcImZhbHNlXCIpO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwic2hvd19yZW1vdmVfYnV0dG9uXCIsIHNob3dfcmVtb3ZlX2J1dHRvbik7XG4gICAgICAkdGVtcGxhdGVFbGVtLmF0dHIoXCJzaW5nbGVuYW1lXCIsIHNpbmdsZU5hbWUpO1xuICAgICAgJHRlbXBsYXRlRWxlbS5hdHRyKFwic3R5bGVcIiwgXCJcIik7XG4gICAgICAkdGVtcGxhdGVFbGVtLmF0dHIoXCJzdGF0dXNcIiwgc3RhdHVzKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ0tFZGl0b3JQbHVnaW5VdGlsaXR5O1xufSgpO1xuXG5fZGVmaW5lUHJvcGVydHkoQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LCBcIlBsdWdpbnNTZXJ2ZXJDb25maWdcIiwge30pO1xuXG5fZGVmaW5lUHJvcGVydHkoQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LCBcIlBsdWdpbnNcIiwge30pO1xuXG5fZGVmaW5lUHJvcGVydHkoQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LCBcIkRlZmF1bHRQcm9wc1wiLCB7XG4gIGJpbmRUb0ZpZWxkOiB7XG4gICAgcmVsYXRpb25JZDogXCJcIixcbiAgICB0YWJsZUlkOiBcIlwiLFxuICAgIHRhYmxlTmFtZTogXCJcIixcbiAgICB0YWJsZUNhcHRpb246IFwiXCIsXG4gICAgZmllbGROYW1lOiBcIlwiLFxuICAgIGZpZWxkQ2FwdGlvbjogXCJcIixcbiAgICBmaWVsZERhdGFUeXBlOiBcIlwiLFxuICAgIGZpZWxkTGVuZ3RoOiBcIlwiXG4gIH0sXG4gIGRlZmF1bHRWYWx1ZToge1xuICAgIGRlZmF1bHRUeXBlOiBcIlwiLFxuICAgIGRlZmF1bHRWYWx1ZTogXCJcIixcbiAgICBkZWZhdWx0VGV4dDogXCJcIlxuICB9LFxuICB2YWxpZGF0ZVJ1bGVzOiB7XG4gICAgbXNnOiBcIlwiLFxuICAgIHJ1bGVzOiBbXVxuICB9LFxuICBiYXNlSW5mbzoge1xuICAgIGlkOiBcIlwiLFxuICAgIHNlcmlhbGl6ZTogXCJ0cnVlXCIsXG4gICAgbmFtZTogXCJcIixcbiAgICBjbGFzc05hbWU6IFwiXCIsXG4gICAgcGxhY2Vob2xkZXI6IFwiXCIsXG4gICAgY3VzdFJlYWRvbmx5OiBcIm5vcmVhZG9ubHlcIixcbiAgICBjdXN0RGlzYWJsZWQ6IFwibm9kaXNhYmxlZFwiLFxuICAgIHN0eWxlOiBcIlwiLFxuICAgIGRlc2M6IFwiXCIsXG4gICAgc3RhdHVzOiBcImVuYWJsZVwiLFxuICAgIGdyb3VwTmFtZTogXCJcIlxuICB9LFxuICBiaW5kVG9TZWFyY2hGaWVsZDoge1xuICAgIGNvbHVtblRpdGxlOiBcIlwiLFxuICAgIGNvbHVtblRhYmxlTmFtZTogXCJcIixcbiAgICBjb2x1bW5OYW1lOiBcIlwiLFxuICAgIGNvbHVtbkNhcHRpb246IFwiXCIsXG4gICAgY29sdW1uRGF0YVR5cGVOYW1lOiBcIlwiLFxuICAgIGNvbHVtbk9wZXJhdG9yOiBcIuWMuemFjVwiXG4gIH0sXG4gIG5vcm1hbERhdGFTb3VyY2U6IHtcbiAgICBkZWZhdWx0SXNOdWxsOiBcInRydWVcIixcbiAgICBzcWxEYXRhU291cmNlOiBcIlwiLFxuICAgIGRpY3Rpb25hcnlHcm91cERhdGFTb3VyY2VJZDogXCJcIixcbiAgICBkaWN0aW9uYXJ5R3JvdXBEYXRhU291cmNlVGV4dDogXCJcIixcbiAgICByZXN0RGF0YVNvdXJjZTogXCJcIixcbiAgICBpbnRlcmZhY2VEYXRhU291cmNlOiBcIlwiLFxuICAgIHN0YXRpY0RhdGFTb3VyY2U6IFwiXCIsXG4gICAgZGVmYXVsdFNlbGVjdGVkOiBcIlwiLFxuICAgIGxheW91dERpcmVjdGlvbjogXCJ2ZXJ0aWNhbFwiLFxuICAgIHJvd051bTogXCIwXCIsXG4gICAgZGlzcGxheVZhbHVlSW5UZXh0OiBcImZhbHNlXCJcbiAgfSxcbiAgbXVsdGlsZXZlbFByb3BzOiB7XG4gICAgbGV2ZWwyQmluZENvbnRyb2xJZDogXCJcIlxuICB9XG59KTtcblxuX2RlZmluZVByb3BlcnR5KENLRWRpdG9yUGx1Z2luVXRpbGl0eSwgXCJEaWFsb2dFeGVjdXRlRWRpdEFjdGlvbk5hbWVcIiwgXCJFZGl0XCIpO1xuXG5fZGVmaW5lUHJvcGVydHkoQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LCBcIkRpYWxvZ0V4ZWN1dGVJbnNlcnRBY3Rpb25OYW1lXCIsIFwiSW5zZXJ0XCIpOyIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBDS0VkaXRvclV0aWxpdHkgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIENLRWRpdG9yVXRpbGl0eSgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ0tFZGl0b3JVdGlsaXR5KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDS0VkaXRvclV0aWxpdHksIG51bGwsIFt7XG4gICAga2V5OiBcIlNldFNlbGVjdGVkRWxlbVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBTZXRTZWxlY3RlZEVsZW0oZWxlbUh0bWwpIHtcbiAgICAgIHRoaXMuXyRDS0VkaXRvclNlbGVjdEVsZW0gPSAkKGVsZW1IdG1sKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0U2VsZWN0ZWRFbGVtXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldFNlbGVjdGVkRWxlbSgpIHtcbiAgICAgIGlmICh0aGlzLl8kQ0tFZGl0b3JTZWxlY3RFbGVtKSB7XG4gICAgICAgIGlmICh0aGlzLl8kQ0tFZGl0b3JTZWxlY3RFbGVtLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5fJENLRWRpdG9yU2VsZWN0RWxlbTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0U2VsZWN0ZWRDS0VkaXRvckVsZW1cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0U2VsZWN0ZWRDS0VkaXRvckVsZW0oKSB7XG4gICAgICBpZiAodGhpcy5HZXRTZWxlY3RlZEVsZW0oKSkge1xuICAgICAgICB2YXIgaWQgPSB0aGlzLkdldFNlbGVjdGVkRWxlbSgpLmF0dHIoXCJpZFwiKTtcbiAgICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzLkdldENLRWRpdG9ySW5zdCgpLmRvY3VtZW50LmdldEJ5SWQoaWQpO1xuICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlNldExhc3RTZWxlY3RlZFRlbXBIVE1MXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFNldExhc3RTZWxlY3RlZFRlbXBIVE1MKGh0bWwpIHtcbiAgICAgIHRoaXMuX0xhc3RTZWxlY3RlZFRlbXBIVE1MID0gaHRtbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0TGFzdFNlbGVjdGVkVGVtcEhUTUxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0TGFzdFNlbGVjdGVkVGVtcEhUTUwoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fTGFzdFNlbGVjdGVkVGVtcEhUTUw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlRyeUdldElkRnJvbUxhc3RTZWxlY3RlZFRlbXBIVE1MXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFRyeUdldElkRnJvbUxhc3RTZWxlY3RlZFRlbXBIVE1MKG5ld0hUTUwpIHtcbiAgICAgIGlmICghdGhpcy5fTGFzdFNlbGVjdGVkVGVtcEhUTUwpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgbmFtZSA9ICQobmV3SFRNTCkuYXR0cihcIm5hbWVcIik7XG4gICAgICAgIHZhciBsYXN0SHRtbE5hbWUgPSAkKHRoaXMuR2V0TGFzdFNlbGVjdGVkVGVtcEhUTUwoKSkuYXR0cihcIm5hbWVcIik7XG5cbiAgICAgICAgaWYgKG5hbWUgPT0gbGFzdEh0bWxOYW1lKSB7XG4gICAgICAgICAgcmV0dXJuICQodGhpcy5HZXRMYXN0U2VsZWN0ZWRUZW1wSFRNTCgpKS5hdHRyKFwiaWRcIik7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldENLRWRpdG9ySW5zdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRDS0VkaXRvckluc3QoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fQ0tFZGl0b3JJbnN0O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJTZXRDS0VkaXRvckluc3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gU2V0Q0tFZGl0b3JJbnN0KGluc3QpIHtcbiAgICAgIHRoaXMuX0NLRWRpdG9ySW5zdCA9IGluc3Q7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldENLRWRpdG9ySFRNTFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRDS0VkaXRvckhUTUwoKSB7XG4gICAgICB0aGlzLkNsZWFyQUxMRm9yRGl2RWxlbUJ1dHRvbigpO1xuICAgICAgdGhpcy5DbGVhckFMTFBsdWdpbklubmVyUGFuZWwoKTtcbiAgICAgIHJldHVybiB0aGlzLkdldENLRWRpdG9ySW5zdCgpLmdldERhdGEoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiU2V0Q0tFZGl0b3JIVE1MXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFNldENLRWRpdG9ySFRNTChodG1sKSB7XG4gICAgICB0aGlzLkdldENLRWRpdG9ySW5zdCgpLnNldERhdGEoaHRtbCk7XG4gICAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIENLRWRpdG9yVXRpbGl0eS5BTExFbGVtQmluZERlZmF1bHRFdmVudCgpO1xuICAgICAgfSwgNTAwKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0Q0tFZGl0b3JIVE1MSW5QbHVnaW5QYWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldENLRWRpdG9ySFRNTEluUGx1Z2luUGFnZSgpIHtcbiAgICAgIHJldHVybiB3aW5kb3cucGFyZW50LkNLRWRpdG9yVXRpbGl0eS5HZXRDS0VkaXRvckhUTUwoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiSW5pdGlhbGl6ZUNLRWRpdG9yXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEluaXRpYWxpemVDS0VkaXRvcih0ZXh0QXJlYUVsZW1JZCwgcGx1Z2luc0NvbmZpZywgbG9hZENvbXBsZXRlZEZ1bmMsIGNrZWRpdG9yQ29uZmlnRnVsbFBhdGgsIHBsdWdpbkJhc2VQYXRoLCB0aGVtZVZvKSB7XG4gICAgICB2YXIgZXh0cmFQbHVnaW5zID0gbmV3IEFycmF5KCk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGx1Z2luc0NvbmZpZy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgc2luZ2xlUGx1Z2luQ29uZmlnID0gcGx1Z2luc0NvbmZpZ1tpXTtcbiAgICAgICAgdmFyIHNpbmdsZU5hbWUgPSBzaW5nbGVQbHVnaW5Db25maWcuc2luZ2xlTmFtZTtcbiAgICAgICAgdmFyIHRvb2xiYXJMb2NhdGlvbiA9IHNpbmdsZVBsdWdpbkNvbmZpZy50b29sYmFyTG9jYXRpb247XG4gICAgICAgIHZhciB0ZXh0ID0gc2luZ2xlUGx1Z2luQ29uZmlnLnRleHQ7XG4gICAgICAgIHZhciBzZXJ2ZXJSZXNvbHZlID0gc2luZ2xlUGx1Z2luQ29uZmlnLnNlcnZlclJlc29sdmU7XG4gICAgICAgIHZhciBjbGllbnRSZXNvbHZlID0gc2luZ2xlUGx1Z2luQ29uZmlnLmNsaWVudFJlc29sdmU7XG4gICAgICAgIHZhciBjbGllbnRSZXNvbHZlSnMgPSBzaW5nbGVQbHVnaW5Db25maWcuY2xpZW50UmVzb2x2ZUpzO1xuICAgICAgICB2YXIgZGlhbG9nV2lkdGggPSBzaW5nbGVQbHVnaW5Db25maWcuZGlhbG9nV2lkdGg7XG4gICAgICAgIHZhciBkaWFsb2dIZWlnaHQgPSBzaW5nbGVQbHVnaW5Db25maWcuZGlhbG9nSGVpZ2h0O1xuICAgICAgICB2YXIgaXNKQnVpbGQ0RENEYXRhID0gc2luZ2xlUGx1Z2luQ29uZmlnLmlzSkJ1aWxkNERDRGF0YTtcbiAgICAgICAgdmFyIGNvbnRyb2xDYXRlZ29yeSA9IHNpbmdsZVBsdWdpbkNvbmZpZy5jb250cm9sQ2F0ZWdvcnk7XG4gICAgICAgIHZhciBzZXJ2ZXJEeW5hbWljQmluZCA9IHNpbmdsZVBsdWdpbkNvbmZpZy5zZXJ2ZXJEeW5hbWljQmluZDtcbiAgICAgICAgdmFyIHNob3dSZW1vdmVCdXR0b24gPSBzaW5nbGVQbHVnaW5Db25maWcuc2hvd1JlbW92ZUJ1dHRvbjtcbiAgICAgICAgdmFyIHNob3dJbkVkaXRvclRvb2xiYXIgPSBzaW5nbGVQbHVnaW5Db25maWcuc2hvd0luRWRpdG9yVG9vbGJhcjtcbiAgICAgICAgdmFyIGVuYWJsZUNoaWxkQ29udHJvbHMgPSBzaW5nbGVQbHVnaW5Db25maWcuZW5hYmxlQ2hpbGRDb250cm9scztcbiAgICAgICAgdmFyIHBsdWdpbkZpbGVOYW1lID0gc2luZ2xlTmFtZSArIFwiUGx1Z2luLmpzXCI7XG4gICAgICAgIHZhciBwbHVnaW5Gb2xkZXJOYW1lID0gcGx1Z2luQmFzZVBhdGggKyBzaW5nbGVOYW1lICsgXCIvXCI7XG4gICAgICAgIENLRURJVE9SLnBsdWdpbnMuYWRkRXh0ZXJuYWwoc2luZ2xlTmFtZSwgcGx1Z2luRm9sZGVyTmFtZSwgcGx1Z2luRmlsZU5hbWUpO1xuICAgICAgICBleHRyYVBsdWdpbnMucHVzaChzaW5nbGVOYW1lKTtcbiAgICAgICAgQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LkFkZFBsdWdpbnNTZXJ2ZXJDb25maWcoc2luZ2xlTmFtZSwgdG9vbGJhckxvY2F0aW9uLCB0ZXh0LCBjbGllbnRSZXNvbHZlLCBzZXJ2ZXJSZXNvbHZlLCBjbGllbnRSZXNvbHZlSnMsIGRpYWxvZ1dpZHRoLCBkaWFsb2dIZWlnaHQsIGlzSkJ1aWxkNERDRGF0YSwgY29udHJvbENhdGVnb3J5LCBzZXJ2ZXJEeW5hbWljQmluZCwgc2hvd1JlbW92ZUJ1dHRvbiwgc2hvd0luRWRpdG9yVG9vbGJhciwgZW5hYmxlQ2hpbGRDb250cm9scyk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuU2V0VGhlbWVWbyh0aGVtZVZvKTtcbiAgICAgIHZhciBlZGl0b3JDb25maWdVcmwgPSBCYXNlVXRpbGl0eS5BcHBlbmRUaW1lU3RhbXBVcmwoY2tlZGl0b3JDb25maWdGdWxsUGF0aCk7XG4gICAgICBDS0VESVRPUi5yZXBsYWNlKHRleHRBcmVhRWxlbUlkLCB7XG4gICAgICAgIGN1c3RvbUNvbmZpZzogZWRpdG9yQ29uZmlnVXJsLFxuICAgICAgICBleHRyYVBsdWdpbnM6IGV4dHJhUGx1Z2lucy5qb2luKFwiLFwiKVxuICAgICAgfSk7XG4gICAgICBDS0VESVRPUi5pbnN0YW5jZXMuaHRtbF9kZXNpZ24ub24oXCJiZWZvcmVQYXN0ZVwiLCBmdW5jdGlvbiAoZXZlbnQpIHt9KTtcbiAgICAgIENLRURJVE9SLmluc3RhbmNlcy5odG1sX2Rlc2lnbi5vbihcInBhc3RlXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgc291cmNlSFRNTCA9IGV2ZW50LmRhdGEuZGF0YVZhbHVlO1xuICAgICAgICBjb25zb2xlLmxvZyhzb3VyY2VIVE1MKTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIHZhciAkc291cmNlSFRNTCA9ICQoc291cmNlSFRNTCk7XG4gICAgICAgICAgJHNvdXJjZUhUTUwuZmluZChcIi5wbHVnaW5Jbm5lclBhbmVsV3JhcFwiKS5yZW1vdmUoKTtcblxuICAgICAgICAgIGlmICgkc291cmNlSFRNTC5maW5kKFwiZGl2XCIpLmxlbmd0aCA9PSAxKSB7XG4gICAgICAgICAgICB2YXIgJGlubmVyRWxlbSA9ICQoJHNvdXJjZUhUTUwuZmluZChcImRpdlwiKS5lcSgwKSk7XG4gICAgICAgICAgICB2YXIgaWQgPSBDS0VkaXRvclV0aWxpdHkuVHJ5R2V0SWRGcm9tTGFzdFNlbGVjdGVkVGVtcEhUTUwoJGlubmVyRWxlbSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhpZCk7XG5cbiAgICAgICAgICAgIGlmIChpZCkge1xuICAgICAgICAgICAgICB2YXIgb2xkRWxlbSA9IENLRWRpdG9yVXRpbGl0eS5HZXRDS0VkaXRvckluc3QoKS5kb2N1bWVudC5nZXRCeUlkKGlkKTtcblxuICAgICAgICAgICAgICBpZiAob2xkRWxlbSkge1xuICAgICAgICAgICAgICAgIGlkID0gXCJjdF9jb3B5X1wiICsgU3RyaW5nVXRpbGl0eS5UaW1lc3RhbXAoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWQgPSBcImN0X2NvcHlfXCIgKyBTdHJpbmdVdGlsaXR5LlRpbWVzdGFtcCgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBldmVudC5kYXRhLmRhdGFWYWx1ZSA9ICRpbm5lckVsZW0uYXR0cihcImlkXCIsIGlkKS5vdXRlckhUTUwoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIum7j+i0tOW8guW4uCzov5jljp9IVE1MXCIpO1xuICAgICAgICAgIGV2ZW50LmRhdGEuZGF0YVZhbHVlID0gc291cmNlSFRNTDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBDS0VESVRPUi5pbnN0YW5jZXMuaHRtbF9kZXNpZ24ub24oXCJhZnRlclBhc3RlXCIsIGZ1bmN0aW9uIChldmVudCkge30pO1xuICAgICAgQ0tFRElUT1IuaW5zdGFuY2VzLmh0bWxfZGVzaWduLm9uKCdpbnNlcnRFbGVtZW50JywgZnVuY3Rpb24gKGV2ZW50KSB7fSk7XG4gICAgICBDS0VESVRPUi5pbnN0YW5jZXMuaHRtbF9kZXNpZ24ub24oJ2luc2VydEh0bWwnLCBmdW5jdGlvbiAoZXZlbnQpIHt9KTtcbiAgICAgIENLRURJVE9SLmluc3RhbmNlcy5odG1sX2Rlc2lnbi5vbignc2VsZWN0aW9uQ2hhbmdlJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHZhciBlbGVtID0gZXZlbnQuZGF0YS5zZWxlY3Rpb24uZ2V0U2VsZWN0ZWRFbGVtZW50KCk7XG4gICAgICAgIHZhciBsYXN0Q3VzdFNpbmdsZU5hbWUgPSBcIlwiO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXZlbnQuZGF0YS5wYXRoLmVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdmFyIGVsZW0gPSBldmVudC5kYXRhLnBhdGguZWxlbWVudHNbaV07XG4gICAgICAgICAgdmFyIHNpbmdsZU5hbWUgPSBlbGVtLmdldEF0dHJpYnV0ZShcInNpbmdsZW5hbWVcIik7XG4gICAgICAgICAgdmFyIGVsZW1Jbm5lckhUTUwgPSBlbGVtLmdldEh0bWwoKTtcblxuICAgICAgICAgIGlmIChzaW5nbGVOYW1lKSB7XG4gICAgICAgICAgICBsYXN0Q3VzdFNpbmdsZU5hbWUgPSBzaW5nbGVOYW1lO1xuICAgICAgICAgICAgQ0tFZGl0b3JVdGlsaXR5LlNldFNlbGVjdGVkRWxlbShlbGVtLmdldE91dGVySHRtbCgpKTtcbiAgICAgICAgICAgIENLRWRpdG9yVXRpbGl0eS5TZXRMYXN0U2VsZWN0ZWRUZW1wSFRNTChlbGVtLmdldE91dGVySHRtbCgpKTtcbiAgICAgICAgICAgIHZhciBpbm5lckh0bWwgPSBlbGVtLmdldEh0bWwoKTtcbiAgICAgICAgICAgIGlubmVySHRtbCA9IGlubmVySHRtbC5yZXBsYWNlKC88YnIgXFwvPi9nLCBcIlwiKS5yZXBsYWNlKC88YnI+L2csIFwiXCIpO1xuXG4gICAgICAgICAgICBpZiAoaW5uZXJIdG1sLmluZGV4T2YoXCI8XCIpIDwgMCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlbGVtKTtcbiAgICAgICAgICAgICAgQ0tFZGl0b3JVdGlsaXR5LkdldENLRWRpdG9ySW5zdCgpLmdldFNlbGVjdGlvbigpLnNlbGVjdEVsZW1lbnQoZWxlbSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChsYXN0Q3VzdFNpbmdsZU5hbWUgIT0gXCJXRkRDVF9UZW1wbGF0ZVwiKSB7XG4gICAgICAgICAgICAgIENLRWRpdG9yVXRpbGl0eS5DcmVhdGVQbHVnaW5Jbm5lclBhbmVsKGVsZW0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoZWxlbS5nZXROYW1lKCkgPT0gXCJ0ZFwiICYmIGVsZW1Jbm5lckhUTUwgPT0gXCImbmJzcDtcIikge1xuICAgICAgICAgICAgQ0tFZGl0b3JVdGlsaXR5LkdldENLRWRpdG9ySW5zdCgpLmdldFNlbGVjdGlvbigpLnNlbGVjdEVsZW1lbnQoZWxlbS5nZXRDaGlsZCgwKSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobGFzdEN1c3RTaW5nbGVOYW1lKSB7XG4gICAgICAgICAgQ0tFZGl0b3JVdGlsaXR5LkRpc3BsYXlQbHVnaW5Db250cm9scyhDS0VkaXRvclBsdWdpblV0aWxpdHkuR2V0RW5hYmxlQ2hpbGRDb250cm9scyhsYXN0Q3VzdFNpbmdsZU5hbWUpKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0aGlzLlNldENLRWRpdG9ySW5zdChDS0VESVRPUi5pbnN0YW5jZXMuaHRtbF9kZXNpZ24pO1xuICAgICAgQ0tFRElUT1Iub24oJ2luc3RhbmNlUmVhZHknLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAodHlwZW9mIGxvYWRDb21wbGV0ZWRGdW5jID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgIGxvYWRDb21wbGV0ZWRGdW5jKCk7XG4gICAgICAgICAgO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiRGlzcGxheVBsdWdpbkNvbnRyb2xzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIERpc3BsYXlQbHVnaW5Db250cm9scyhlbmFibGVDaGlsZENvbnRyb2xzKSB7XG4gICAgICAkKFwiLmNrZV9idXR0b25cIikuc2hvdygpO1xuXG4gICAgICBpZiAoZW5hYmxlQ2hpbGRDb250cm9scyA9PSBcIipcIikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBwbHVnaW5zID0gQ0tFZGl0b3JQbHVnaW5VdGlsaXR5LkdldFBsdWdpbnMoKTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHBsdWdpbnMpIHtcbiAgICAgICAgdmFyIHBsdWdpbiA9IHBsdWdpbnNba2V5XTtcbiAgICAgICAgdmFyIHNpbmdsZU5hbWUgPSBwbHVnaW4uU2V0dGluZy5TaW5nbGVOYW1lO1xuICAgICAgICAkKFwiLmNrZV9idXR0b25fX1wiICsgU3RyaW5nVXRpbGl0eS5Ub0xvd2VyQ2FzZShzaW5nbGVOYW1lKSkuaGlkZSgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgZW5hYmxlUGx1Z2lucyA9IGVuYWJsZUNoaWxkQ29udHJvbHMuc3BsaXQoXCI7XCIpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVuYWJsZVBsdWdpbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNpbmdsZU5hbWUgPSBlbmFibGVQbHVnaW5zW2ldO1xuICAgICAgICAkKFwiLmNrZV9idXR0b25fX1wiICsgU3RyaW5nVXRpbGl0eS5Ub0xvd2VyQ2FzZShzaW5nbGVOYW1lKSkuc2hvdygpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRUaGVtZVZvXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldFRoZW1lVm8oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fVGhlbWVWbztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiU2V0VGhlbWVWb1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBTZXRUaGVtZVZvKF90aGVtZVZvKSB7XG4gICAgICB0aGlzLl9UaGVtZVZvID0gX3RoZW1lVm87XG4gICAgICB0aGlzLlJlc2V0Um9vdEVsZW1UaGVtZShfdGhlbWVWbyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlJlc2V0Um9vdEVsZW1UaGVtZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBSZXNldFJvb3RFbGVtVGhlbWUoX3RoZW1lVm8pIHtcbiAgICAgIGlmICh0aGlzLkdldENLRWRpdG9ySW5zdCgpKSB7XG4gICAgICAgIHZhciBzb3VyY2VIVE1MID0gdGhpcy5HZXRDS0VkaXRvckhUTUwoKTtcblxuICAgICAgICBpZiAoc291cmNlSFRNTCAhPSBudWxsICYmIHNvdXJjZUhUTUwgIT0gXCJcIikge1xuICAgICAgICAgIHZhciByb290RWxlbSA9ICQoc291cmNlSFRNTCk7XG5cbiAgICAgICAgICBpZiAocm9vdEVsZW0ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdmFyIGNsYXNzTGlzdCA9IHJvb3RFbGVtLmF0dHIoJ2NsYXNzJykuc3BsaXQoL1xccysvKTtcbiAgICAgICAgICAgIHZhciBjbGFzc2FyeSA9IFtdO1xuICAgICAgICAgICAgJC5lYWNoKGNsYXNzTGlzdCwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XG4gICAgICAgICAgICAgIGlmIChpdGVtLmluZGV4T2YoJ2h0bWwtZGVzaWduLXRoZW1lLScpID49IDApIHtcbiAgICAgICAgICAgICAgICByb290RWxlbS5yZW1vdmVDbGFzcyhpdGVtKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByb290RWxlbS5hZGRDbGFzcyhfdGhlbWVWby5yb290RWxlbUNsYXNzKTtcbiAgICAgICAgICAgIHRoaXMuU2V0Q0tFZGl0b3JIVE1MKHJvb3RFbGVtLm91dGVySFRNTCgpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiQ2xlYXJBTExGb3JEaXZFbGVtQnV0dG9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIENsZWFyQUxMRm9yRGl2RWxlbUJ1dHRvbigpIHtcbiAgICAgIHZhciBvbGREZWxCdXR0b25zID0gQ0tFZGl0b3JVdGlsaXR5LkdldENLRWRpdG9ySW5zdCgpLmRvY3VtZW50LmZpbmQoXCIuZGVsLWJ1dHRvblwiKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvbGREZWxCdXR0b25zLmNvdW50KCk7IGkrKykge1xuICAgICAgICBvbGREZWxCdXR0b25zLmdldEl0ZW0oaSkucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkNyZWF0ZVBsdWdpbklubmVyUGFuZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gQ3JlYXRlUGx1Z2luSW5uZXJQYW5lbChlbGVtKSB7XG4gICAgICBDS0VkaXRvclV0aWxpdHkuQ2xlYXJBTExQbHVnaW5Jbm5lclBhbmVsKCk7XG4gICAgICB2YXIgcGx1Z2luSW5uZXJQYW5lbCA9IG5ldyBDS0VESVRPUi5kb20uZWxlbWVudCgnZGl2Jyk7XG4gICAgICBwbHVnaW5Jbm5lclBhbmVsLmFkZENsYXNzKFwicGx1Z2luSW5uZXJQYW5lbFdyYXBcIik7XG4gICAgICBlbGVtLmFwcGVuZChwbHVnaW5Jbm5lclBhbmVsKTtcbiAgICAgIHZhciBzZWxlY3RBbGxCdXR0b24gPSBuZXcgQ0tFRElUT1IuZG9tLmVsZW1lbnQoJ2RpdicpO1xuICAgICAgc2VsZWN0QWxsQnV0dG9uLmFkZENsYXNzKFwiYnV0dG9uXCIpO1xuICAgICAgc2VsZWN0QWxsQnV0dG9uLmFkZENsYXNzKFwic2VsZWN0LWltZ1wiKTtcbiAgICAgIHNlbGVjdEFsbEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgJ+mAieS4rScpO1xuICAgICAgcGx1Z2luSW5uZXJQYW5lbC5hcHBlbmQoc2VsZWN0QWxsQnV0dG9uKTtcbiAgICAgIHNlbGVjdEFsbEJ1dHRvbi5vbignY2xpY2snLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgYWxlcnQoXCLmmoLkuI3mlK/mjIEhXCIpO1xuICAgICAgICB2YXIgZG9tRXZlbnQgPSBldi5kYXRhO1xuICAgICAgICBkb21FdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBkb21FdmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIH0pO1xuICAgICAgdmFyIGRlbEJ1dHRvbiA9IG5ldyBDS0VESVRPUi5kb20uZWxlbWVudCgnZGl2Jyk7XG4gICAgICBkZWxCdXR0b24uYWRkQ2xhc3MoXCJidXR0b25cIik7XG4gICAgICBkZWxCdXR0b24uYWRkQ2xhc3MoXCJkZWwtaW1nXCIpO1xuICAgICAgZGVsQnV0dG9uLnNldEF0dHJpYnV0ZSgndGl0bGUnLCAn5Yig6ZmkJyk7XG4gICAgICBwbHVnaW5Jbm5lclBhbmVsLmFwcGVuZChkZWxCdXR0b24pO1xuICAgICAgZGVsQnV0dG9uLm9uKCdjbGljaycsIGZ1bmN0aW9uIChldikge1xuICAgICAgICBlbGVtLnJlbW92ZSgpO1xuICAgICAgICB2YXIgZG9tRXZlbnQgPSBldi5kYXRhO1xuICAgICAgICBkb21FdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBkb21FdmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIH0pO1xuICAgICAgdmFyIGNvcHlJZEJ1dHRvbiA9IG5ldyBDS0VESVRPUi5kb20uZWxlbWVudCgnZGl2Jyk7XG4gICAgICBjb3B5SWRCdXR0b24uYWRkQ2xhc3MoXCJidXR0b25cIik7XG4gICAgICBjb3B5SWRCdXR0b24uYWRkQ2xhc3MoXCJjb3B5LWlkLWltZ1wiKTtcbiAgICAgIGNvcHlJZEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgJ+WkjeWItklEJyk7XG4gICAgICBwbHVnaW5Jbm5lclBhbmVsLmFwcGVuZChjb3B5SWRCdXR0b24pO1xuICAgICAgY29weUlkQnV0dG9uLm9uKCdjbGljaycsIGZ1bmN0aW9uIChldikge1xuICAgICAgICB2YXIgaWQgPSBlbGVtLmdldEF0dHJpYnV0ZShcImlkXCIpO1xuICAgICAgICBCYXNlVXRpbGl0eS5Db3B5VmFsdWVDbGlwYm9hcmQoaWQpO1xuICAgICAgICB2YXIgZG9tRXZlbnQgPSBldi5kYXRhO1xuICAgICAgICBkb21FdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBkb21FdmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJDbGVhckFMTFBsdWdpbklubmVyUGFuZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gQ2xlYXJBTExQbHVnaW5Jbm5lclBhbmVsKCkge1xuICAgICAgdmFyIG9sZERlbEJ1dHRvbnMgPSBDS0VkaXRvclV0aWxpdHkuR2V0Q0tFZGl0b3JJbnN0KCkuZG9jdW1lbnQuZmluZChcIi5wbHVnaW5Jbm5lclBhbmVsV3JhcFwiKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvbGREZWxCdXR0b25zLmNvdW50KCk7IGkrKykge1xuICAgICAgICBvbGREZWxCdXR0b25zLmdldEl0ZW0oaSkucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIlNpbmdsZUVsZW1CaW5kRGVmYXVsdEV2ZW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIFNpbmdsZUVsZW1CaW5kRGVmYXVsdEV2ZW50KGVsZW0pIHtcbiAgICAgIHZhciBzaW5nbGVOYW1lID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJzaW5nbGVuYW1lXCIpO1xuICAgICAgdmFyIGlubmVySHRtbCA9IGVsZW0uZ2V0SHRtbCgpO1xuICAgICAgaW5uZXJIdG1sID0gaW5uZXJIdG1sLnJlcGxhY2UoLzxiciBcXC8+L2csIFwiXCIpO1xuXG4gICAgICBpZiAoaW5uZXJIdG1sLmluZGV4T2YoXCI8XCIpIDwgMCkge1xuICAgICAgICBpZiAoc2luZ2xlTmFtZSkge1xuICAgICAgICAgIGVsZW0ub24oJ2NsaWNrJywgZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzKTtcbiAgICAgICAgICAgIENLRWRpdG9yVXRpbGl0eS5HZXRDS0VkaXRvckluc3QoKS5nZXRTZWxlY3Rpb24oKS5zZWxlY3RFbGVtZW50KHRoaXMpO1xuICAgICAgICAgICAgQ0tFZGl0b3JVdGlsaXR5LlNldFNlbGVjdGVkRWxlbSh0aGlzLmdldE91dGVySHRtbCgpKTtcbiAgICAgICAgICAgIHZhciBkb21FdmVudCA9IGV2LmRhdGE7XG4gICAgICAgICAgICBkb21FdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZG9tRXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiQUxMRWxlbUJpbmREZWZhdWx0RXZlbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gQUxMRWxlbUJpbmREZWZhdWx0RXZlbnQoKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIuWPlua2iOS9v+eUqOeCueWHu+i/m+ihjOWFg+e0oOmAieaLqeWSjOWIoOmZpOeahOWKn+iDvSzov4Hnp7vkuLpzZWxlY3Rpb25DaGFuZ2Xkuovku7bov5vooYwhXCIpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDS0VkaXRvclV0aWxpdHk7XG59KCk7XG5cbl9kZWZpbmVQcm9wZXJ0eShDS0VkaXRvclV0aWxpdHksIFwiXyRDS0VkaXRvclNlbGVjdEVsZW1cIiwgbnVsbCk7XG5cbl9kZWZpbmVQcm9wZXJ0eShDS0VkaXRvclV0aWxpdHksIFwiX0xhc3RTZWxlY3RlZFRlbXBIVE1MXCIsIG51bGwpO1xuXG5fZGVmaW5lUHJvcGVydHkoQ0tFZGl0b3JVdGlsaXR5LCBcIl9DS0VkaXRvckluc3RcIiwgbnVsbCk7XG5cbl9kZWZpbmVQcm9wZXJ0eShDS0VkaXRvclV0aWxpdHksIFwiX1RoZW1lVm9cIiwgbnVsbCk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxudmFyIEhUTUxFZGl0b3JVdGlsaXR5ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBIVE1MRWRpdG9yVXRpbGl0eSgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSFRNTEVkaXRvclV0aWxpdHkpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEhUTUxFZGl0b3JVdGlsaXR5LCBudWxsLCBbe1xuICAgIGtleTogXCJHZXRIVE1MRWRpdG9ySW5zdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRIVE1MRWRpdG9ySW5zdCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9IVE1MRWRpdG9ySW5zdDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiU2V0SFRNTEVkaXRvckhUTUxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gU2V0SFRNTEVkaXRvckhUTUwoaHRtbCkge1xuICAgICAgaWYgKCFTdHJpbmdVdGlsaXR5LklzTnVsbE9yRW1wdHkoaHRtbCkpIHtcbiAgICAgICAgdGhpcy5HZXRIVE1MRWRpdG9ySW5zdCgpLnNldFZhbHVlKGh0bWwpO1xuICAgICAgICBDb2RlTWlycm9yLmNvbW1hbmRzW1wic2VsZWN0QWxsXCJdKHRoaXMuR2V0SFRNTEVkaXRvckluc3QoKSk7XG4gICAgICAgIHZhciByYW5nZSA9IHtcbiAgICAgICAgICBmcm9tOiB0aGlzLkdldEhUTUxFZGl0b3JJbnN0KCkuZ2V0Q3Vyc29yKHRydWUpLFxuICAgICAgICAgIHRvOiB0aGlzLkdldEhUTUxFZGl0b3JJbnN0KCkuZ2V0Q3Vyc29yKGZhbHNlKVxuICAgICAgICB9O1xuICAgICAgICA7XG4gICAgICAgIHRoaXMuR2V0SFRNTEVkaXRvckluc3QoKS5hdXRvRm9ybWF0UmFuZ2UocmFuZ2UuZnJvbSwgcmFuZ2UudG8pO1xuICAgICAgICB2YXIgYTEgPSB7XG4gICAgICAgICAgbGluZTogMCxcbiAgICAgICAgICBjaDogMlxuICAgICAgICB9O1xuICAgICAgICB0aGlzLkdldEhUTUxFZGl0b3JJbnN0KCkuZ2V0RG9jKCkuZWFjaExpbmUoZnVuY3Rpb24gKGxpbmUpIHt9KTtcbiAgICAgICAgdmFyIHNlbGVjdGVkRWxlbSA9IENLRWRpdG9yVXRpbGl0eS5HZXRTZWxlY3RlZEVsZW0oKTtcbiAgICAgICAgdmFyIHNlYXJjaEhUTUwgPSBcIlwiO1xuXG4gICAgICAgIGlmIChzZWxlY3RlZEVsZW0pIHtcbiAgICAgICAgICBzZWFyY2hIVE1MID0gc2VsZWN0ZWRFbGVtLm91dGVySFRNTCgpLnNwbGl0KFwiPlwiKVswXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBjdXJzb3IgPSB0aGlzLkdldEhUTUxFZGl0b3JJbnN0KCkuZ2V0U2VhcmNoQ3Vyc29yKHNlYXJjaEhUTUwpO1xuICAgICAgICBjdXJzb3IuZmluZE5leHQoKTtcblxuICAgICAgICBpZiAoY3Vyc29yLmZyb20oKSAmJiBjdXJzb3IudG8oKSkge1xuICAgICAgICAgIHRoaXMuR2V0SFRNTEVkaXRvckluc3QoKS5nZXREb2MoKS5zZXRTZWxlY3Rpb24oY3Vyc29yLmZyb20oKSwgY3Vyc29yLnRvKCkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIkdldEh0bWxFZGl0b3JIVE1MXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIEdldEh0bWxFZGl0b3JIVE1MKCkge1xuICAgICAgcmV0dXJuIHRoaXMuR2V0SFRNTEVkaXRvckluc3QoKS5nZXRWYWx1ZSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJJbml0aWFsaXplSFRNTENvZGVEZXNpZ25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gSW5pdGlhbGl6ZUhUTUxDb2RlRGVzaWduKCkge1xuICAgICAgdmFyIG1peGVkTW9kZSA9IHtcbiAgICAgICAgbmFtZTogXCJodG1sbWl4ZWRcIixcbiAgICAgICAgc2NyaXB0VHlwZXM6IFt7XG4gICAgICAgICAgbWF0Y2hlczogL1xcL3gtaGFuZGxlYmFycy10ZW1wbGF0ZXxcXC94LW11c3RhY2hlL2ksXG4gICAgICAgICAgbW9kZTogbnVsbFxuICAgICAgICB9LCB7XG4gICAgICAgICAgbWF0Y2hlczogLyh0ZXh0fGFwcGxpY2F0aW9uKVxcLyh4LSk/dmIoYXxzY3JpcHQpL2ksXG4gICAgICAgICAgbW9kZTogXCJ2YnNjcmlwdFwiXG4gICAgICAgIH1dXG4gICAgICB9O1xuICAgICAgdGhpcy5fSFRNTEVkaXRvckluc3QgPSBDb2RlTWlycm9yLmZyb21UZXh0QXJlYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlRleHRBcmVhSFRNTEVkaXRvclwiKSwge1xuICAgICAgICBtb2RlOiBtaXhlZE1vZGUsXG4gICAgICAgIHNlbGVjdGlvblBvaW50ZXI6IHRydWUsXG4gICAgICAgIHRoZW1lOiBcIm1vbm9rYWlcIixcbiAgICAgICAgZm9sZEd1dHRlcjogdHJ1ZSxcbiAgICAgICAgZ3V0dGVyczogW1wiQ29kZU1pcnJvci1saW5lbnVtYmVyc1wiLCBcIkNvZGVNaXJyb3ItZm9sZGd1dHRlclwiXSxcbiAgICAgICAgbGluZU51bWJlcnM6IHRydWUsXG4gICAgICAgIGxpbmVXcmFwcGluZzogdHJ1ZVxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuX0hUTUxFZGl0b3JJbnN0LnNldFNpemUoXCIxMDAlXCIsIFBhZ2VTdHlsZVV0aWxpdHkuR2V0UGFnZUhlaWdodCgpIC0gODUpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBIVE1MRWRpdG9yVXRpbGl0eTtcbn0oKTtcblxuX2RlZmluZVByb3BlcnR5KEhUTUxFZGl0b3JVdGlsaXR5LCBcIl9IVE1MRWRpdG9ySW5zdFwiLCBudWxsKTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgSnNFZGl0b3JVdGlsaXR5ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBKc0VkaXRvclV0aWxpdHkoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEpzRWRpdG9yVXRpbGl0eSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoSnNFZGl0b3JVdGlsaXR5LCBudWxsLCBbe1xuICAgIGtleTogXCJfR2V0TmV3Rm9ybUpzU3RyaW5nXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9HZXROZXdGb3JtSnNTdHJpbmcoKSB7XG4gICAgICByZXR1cm4gXCI8c2NyaXB0PnZhciBGb3JtUGFnZU9iamVjdEluc3RhbmNlPXtcIiArIFwiZGF0YTp7XCIgKyBcInVzZXJFbnRpdHk6e30sXCIgKyBcIm9yZ2FuRW50aXR5Ont9LFwiICsgXCJmb3JtUE86W10sXCIgKyBcImZvcm1SZWNvcmRDb21wbGV4UE86W10sXCIgKyBcIndlYkZvcm1SVFBhcmFzOnt9LFwiICsgXCJjb25maWc6W11cIiArIFwifSxcIiArIFwicGFnZVJlYWR5OmZ1bmN0aW9uKCl7fSxcIiArIFwiYmluZFJlY29yZERhdGFSZWFkeTpmdW5jdGlvbigpe30sXCIgKyBcInZhbGlkYXRlRXZlcnlGcm9tQ29udHJvbDpmdW5jdGlvbih2YWxpZGF0ZVJlc3VsdCl7cmV0dXJuIHZhbGlkYXRlUmVzdWx0O31cIiArIFwifTwvc2NyaXB0PlwiO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJHZXRKc0VkaXRvckluc3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gR2V0SnNFZGl0b3JJbnN0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX0pzRWRpdG9ySW5zdDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiU2V0SnNFZGl0b3JKc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBTZXRKc0VkaXRvckpzKGpzKSB7XG4gICAgICB0aGlzLkdldEpzRWRpdG9ySW5zdCgpLnNldFZhbHVlKGpzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiR2V0SnNFZGl0b3JKc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBHZXRKc0VkaXRvckpzKCkge1xuICAgICAgcmV0dXJuIHRoaXMuR2V0SnNFZGl0b3JJbnN0KCkuZ2V0VmFsdWUoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiSW5pdGlhbGl6ZUpzQ29kZURlc2lnblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBJbml0aWFsaXplSnNDb2RlRGVzaWduKHN0YXR1cykge1xuICAgICAgdGhpcy5fSnNFZGl0b3JJbnN0ID0gQ29kZU1pcnJvci5mcm9tVGV4dEFyZWEoJChcIiNUZXh0QXJlYUpzRWRpdG9yXCIpWzBdLCB7XG4gICAgICAgIG1vZGU6IFwiYXBwbGljYXRpb24vbGQranNvblwiLFxuICAgICAgICBsaW5lTnVtYmVyczogdHJ1ZSxcbiAgICAgICAgbGluZVdyYXBwaW5nOiB0cnVlLFxuICAgICAgICBleHRyYUtleXM6IHtcbiAgICAgICAgICBcIkN0cmwtUVwiOiBmdW5jdGlvbiBDdHJsUShjbSkge1xuICAgICAgICAgICAgY20uZm9sZENvZGUoY20uZ2V0Q3Vyc29yKCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZm9sZEd1dHRlcjogdHJ1ZSxcbiAgICAgICAgc21hcnRJbmRlbnQ6IHRydWUsXG4gICAgICAgIG1hdGNoQnJhY2tldHM6IHRydWUsXG4gICAgICAgIHRoZW1lOiBcIm1vbm9rYWlcIixcbiAgICAgICAgZ3V0dGVyczogW1wiQ29kZU1pcnJvci1saW5lbnVtYmVyc1wiLCBcIkNvZGVNaXJyb3ItZm9sZGd1dHRlclwiXVxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuX0pzRWRpdG9ySW5zdC5zZXRTaXplKFwiMTAwJVwiLCBQYWdlU3R5bGVVdGlsaXR5LkdldFBhZ2VIZWlnaHQoKSAtIDg1KTtcblxuICAgICAgaWYgKHN0YXR1cyA9PSBcImFkZFwiKSB7XG4gICAgICAgIHRoaXMuU2V0SnNFZGl0b3JKcyh0aGlzLl9HZXROZXdGb3JtSnNTdHJpbmcoKSk7XG4gICAgICAgIENvZGVNaXJyb3IuY29tbWFuZHNbXCJzZWxlY3RBbGxcIl0odGhpcy5HZXRKc0VkaXRvckluc3QoKSk7XG4gICAgICAgIHZhciByYW5nZSA9IHtcbiAgICAgICAgICBmcm9tOiB0aGlzLkdldEpzRWRpdG9ySW5zdCgpLmdldEN1cnNvcih0cnVlKSxcbiAgICAgICAgICB0bzogdGhpcy5HZXRKc0VkaXRvckluc3QoKS5nZXRDdXJzb3IoZmFsc2UpXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuR2V0SnNFZGl0b3JJbnN0KCkuYXV0b0Zvcm1hdFJhbmdlKHJhbmdlLmZyb20sIHJhbmdlLnRvKTtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSnNFZGl0b3JVdGlsaXR5O1xufSgpO1xuXG5fZGVmaW5lUHJvcGVydHkoSnNFZGl0b3JVdGlsaXR5LCBcIl9Kc0VkaXRvckluc3RcIiwgbnVsbCk7Il19
