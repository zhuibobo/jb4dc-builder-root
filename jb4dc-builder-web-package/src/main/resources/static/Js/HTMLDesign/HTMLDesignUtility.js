"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var CKEditorPluginUtility=function(){function s(){_classCallCheck(this,s)}return _createClass(s,null,[{key:"AddPluginsServerConfig",value:function(e,t,i,n,o,r,l,a,s,u,d,c,m,f){this.PluginsServerConfig[e]={SingleName:e,ToolbarLocation:t,ToolbarLabel:i,ClientResolve:n,ServerResolve:o,ClientResolveJs:r,DialogWidth:l,DialogHeight:a,IsJBuild4DCData:s,ControlCategory:u,ServerDynamicBind:d,ShowRemoveButton:c,ShowInEditorToolbar:m,EnableChildControls:f}}},{key:"_UseServerConfigCoverEmptyPluginProp",value:function(e){var t=this.PluginsServerConfig[e.SingleName];if(t){for(var i in e)"function"!=typeof e[i]&&(""!=e[i]&&null!=e[i]||t[i]&&(e[i]=t[i]));return e}return null}},{key:"GetGeneralPluginInstance",value:function(e,t){var i={SingleName:e,DialogName:"",DialogWidth:null,DialogHeight:null,DialogPageUrl:BaseUtility.AppendTimeStampUrl("Dialog.html"),DialogTitle:"DIV",ToolbarCommand:"",ToolbarIcon:"Icon.png",ToolbarLabel:"",ToolbarLocation:"",IFrameWindow:null,IFrameExecuteActionName:"Insert",DesignModalInputCss:"",ClientResolve:"",ServerResolve:"",IsJBuild4DCData:"",ControlCategory:"",ServerDynamicBind:"",ShowRemoveButton:"",ShowInEditorToolbar:"",EnableChildControls:""};return i=$.extend(!0,{},i,t),null!=(i=s._UseServerConfigCoverEmptyPluginProp(i))?(i.DialogName=i.SingleName,i.ToolbarCommand="JBuild4DC.FormDesign.Plugins."+i.SingleName,i.DialogSettingTitle=i.ToolbarLabel+"Web控件",{Setting:i}):{}}},{key:"GetEnableChildControls",value:function(e){return this.Plugins[e].Setting.EnableChildControls}},{key:"GetPlugins",value:function(){return this.Plugins}},{key:"RegGeneralPluginToEditor",value:function(t,e,i,n){CKEDITOR.dialog.addIframe(i.DialogName,i.DialogSettingTitle,e+i.DialogPageUrl,i.DialogWidth,i.DialogHeight,function(){var e=document.getElementById(this._.frameId);i.IFrameWindow=e,s.SetElemPropsInEditDialog(i.IFrameWindow,i.IFrameExecuteActionName)},{onOk:function(){var e=i.IFrameWindow.contentWindow.DialogApp.getControlProps();if(0==e.success)return!1;n(t,i,e,i.IFrameWindow.contentWindow),i.IFrameExecuteActionName=s.DialogExecuteInsertActionName},onCancel:function(){i.IFrameExecuteActionName=s.DialogExecuteInsertActionName}}),t.addCommand(i.ToolbarCommand,new CKEDITOR.dialogCommand(i.DialogName)),"true"==i.ShowInEditorToolbar&&t.ui.addButton(i.SingleName,{label:i.ToolbarLabel,icon:e+i.ToolbarIcon,command:i.ToolbarCommand,toolbar:i.ToolbarLocation}),t.on("doubleclick",function(e){i.IFrameExecuteActionName=s.DialogExecuteEditActionName,s.OnCKWysiwygElemDBClickEvent(e,i)})}},{key:"OnCKWysiwygElemDBClickEvent",value:function(e,t){var i=e.data.element;"true"==i.getAttribute("runtime_auto_remove")&&(i=e.data.element.getParent()),i.getAttribute("singleName")==t.SingleName&&(CKEditorUtility.SetSelectedElem(i.getOuterHtml()),e.data.dialog=t.DialogName)}},{key:"SerializePropsToElem",value:function(e,t,i){if(e.setAttribute("jbuild4dc_custom","true"),e.setAttribute("singlename",i.SingleName),e.setAttribute("is_jbuild4dc_data",i.IsJBuild4DCData),e.setAttribute("control_category",i.ControlCategory),e.setAttribute("show_remove_button",i.ShowRemoveButton),t.baseInfo)for(var n in t.baseInfo)"readonly"==n?"readonly"==t.baseInfo[n]?e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]):e.removeAttribute("readonly"):"disabled"==n?"disabled"==t.baseInfo[n]?e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]):e.removeAttribute("disabled"):e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]);if(t.bindToField)for(var n in t.bindToField)e.setAttribute(n.toLocaleLowerCase(),t.bindToField[n]);if(t.defaultValue)for(var n in t.defaultValue)e.setAttribute(n.toLocaleLowerCase(),t.defaultValue[n]);if(t.validateRules&&t.validateRules.rules&&0<t.validateRules.rules.length&&e.setAttribute("validaterules",encodeURIComponent(JsonUtility.JsonToString(t.validateRules))),t.normalProps)for(var n in t.normalProps)e.setAttribute(n.toLocaleLowerCase(),t.normalProps[n]);if(t.bindToSearchField)for(var n in t.bindToSearchField)e.setAttribute(n.toLocaleLowerCase(),t.bindToSearchField[n]);return e}},{key:"DeserializePropsFromElem",value:function(e){var t={},o=$(e);function i(e,t){var i={};for(var n in this.DefaultProps[t])o.attr(n)?i[n]=o.attr(n):i[n]=this.DefaultProps[t][n];return e[t]=i,e}return t=i.call(this,t,"baseInfo"),t=i.call(this,t,"bindToField"),t=i.call(this,t,"defaultValue"),t=i.call(this,t,"bindToSearchField"),o.attr("validateRules")&&(t.validateRules=JsonUtility.StringToJson(decodeURIComponent(o.attr("validateRules")))),t}},{key:"BuildGeneralElemToCKWysiwyg",value:function(e,t,i,n){if(this.ValidateBuildEnable(e,t,i,n))if(t.IFrameExecuteActionName==s.DialogExecuteInsertActionName){var o=CKEDITOR.dom.element.createFromHtml(e);this.SerializePropsToElem(o,i,t),CKEditorUtility.GetCKEditorInst().insertElement(o),CKEditorUtility.SingleElemBindDefaultEvent(o)}else{var r=CKEditorUtility.GetSelectedCKEditorElem();if(r){var l=new CKEDITOR.dom.element.createFromHtml(r.getOuterHtml());if("InputControl"==l.getAttribute("control_category")){var a=$(e).text();l.setText(a)}r.copyAttributes(l,{temp:"temp"}),this.SerializePropsToElem(l,i,t),l.replace(r),CKEditorUtility.SingleElemBindDefaultEvent(l)}}}},{key:"ValidateBuildEnable",value:function(e,t,i,n){return!0}},{key:"ValidateSerializeControlDialogCompletedEnable",value:function(e){return"true"==e.baseInfo.serialize&&""==e.bindToField.fieldName?(DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"序列化的控件必须绑定字段!",null),{success:!1}):e}},{key:"SetElemPropsInEditDialog",value:function(e,t){var i=CKEditorUtility.GetCKEditorInst().getSelection().getStartElement(),n=null;if(i&&(n=i.getParents()),e.contentWindow.DialogApp.ready(t,i,n),t==this.DialogExecuteEditActionName){var o=CKEditorUtility.GetSelectedElem().outerHTML(),r=this.DeserializePropsFromElem(o);e.contentWindow.DialogApp.setControlProps($(o),r)}}},{key:"GetControlDescText",value:function(e,t){return"["+e.ToolbarLabel+"] 绑定:["+t.bindToField.tableCaption+"-"+t.bindToField.fieldCaption+"]"}},{key:"GetSearchControlDescText",value:function(e,t){return"["+e.ToolbarLabel+"] 绑定:["+t.bindToSearchField.columnCaption+"]("+t.bindToSearchField.columnOperator+")"}},{key:"GetAutoRemoveTipLabel",value:function(e){return e||(e="双击编辑该部件"),'<div runtime_auto_remove="true" class="wysiwyg-auto-remove-tip">'+e+"</div>"}},{key:"TryGetListButtonsInPluginPage",value:function(){var i=[],e=CKEditorUtility.GetCKEditorHTMLInPluginPage();return $(e).find("[buttoncaption]").each(function(){var e=$(this).attr("buttoncaption"),t=$(this).attr("id");i.push({buttonCaption:e,buttonId:t})}),i}},{key:"TryGetDataSetId",value:function(e,t){if(e)for(var i=t.length-1;i--;0<=i)if(null!=t[i].getAttribute("datasetid")&&""!=t[i].getAttribute("datasetid"))return t[i].getAttribute("datasetid");return this.dataSetId?null:window.parent.listDesign.listResourceEntity.listDatasetId}}]),s}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(CKEditorPluginUtility,"PluginsServerConfig",{}),_defineProperty(CKEditorPluginUtility,"Plugins",{}),_defineProperty(CKEditorPluginUtility,"DefaultProps",{bindToField:{tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},validateRules:{msg:"",rules:[]},baseInfo:{id:"",serialize:"true",name:"",className:"",placeholder:"",custReadonly:"noreadonly",custDisabled:"nodisabled",style:"",desc:""},bindToSearchField:{columnTitle:"",columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",columnOperator:"匹配"}}),_defineProperty(CKEditorPluginUtility,"DialogExecuteEditActionName","Edit"),_defineProperty(CKEditorPluginUtility,"DialogExecuteInsertActionName","Insert");var CKEditorUtility=function(){function S(){_classCallCheck(this,S)}return _createClass(S,null,[{key:"SetSelectedElem",value:function(e){this._$CKEditorSelectElem=$(e)}},{key:"GetSelectedElem",value:function(){return this._$CKEditorSelectElem&&0<this._$CKEditorSelectElem.length?this._$CKEditorSelectElem:null}},{key:"GetSelectedCKEditorElem",value:function(){if(this.GetSelectedElem()){var e=this.GetSelectedElem().attr("id");return this.GetCKEditorInst().document.getById(e)}return null}},{key:"GetCKEditorInst",value:function(){return this._CKEditorInst}},{key:"SetCKEditorInst",value:function(e){this._CKEditorInst=e}},{key:"GetCKEditorHTML",value:function(){return this.ClearALLForDivElemButton(),this.GetCKEditorInst().getData()}},{key:"SetCKEditorHTML",value:function(e){this.GetCKEditorInst().setData(e),window.setTimeout(function(){S.ALLElemBindDefaultEvent()},500)}},{key:"GetCKEditorHTMLInPluginPage",value:function(){return window.parent.CKEditorUtility.GetCKEditorHTML()}},{key:"InitializeCKEditor",value:function(e,t,i,n,o,r){for(var l=new Array,a=0;a<t.length;a++){var s=t[a],u=s.singleName,d=s.toolbarLocation,c=s.text,m=s.serverResolve,f=s.clientResolve,g=s.clientResolveJs,E=s.dialogWidth,C=s.dialogHeight,v=s.isJBuild4DCData,y=s.controlCategory,h=s.serverDynamicBind,b=s.showRemoveButton,p=s.showInEditorToolbar,T=s.enableChildControls,I=u+"Plugin.js",D=o+u+"/";CKEDITOR.plugins.addExternal(u,D,I),l.push(u),CKEditorPluginUtility.AddPluginsServerConfig(u,d,c,f,m,g,E,C,v,y,h,b,p,T)}this.SetThemeVo(r);var P=BaseUtility.AppendTimeStampUrl(n);CKEDITOR.replace(e,{customConfig:P,extraPlugins:l.join(",")}),CKEDITOR.instances.html_design.on("beforePaste",function(e){}),CKEDITOR.instances.html_design.on("paste",function(t){var i=t.data.dataValue;try{var e=$(i);e.find(".del-button").remove(),1==e.find("div").length&&(t.data.dataValue=e.find("div").attr("id","ct_copy_"+StringUtility.Timestamp()).outerHTML())}catch(e){console.log("黏贴异常,还原HTML"),t.data.dataValue=i}}),CKEDITOR.instances.html_design.on("afterPaste",function(e){S.ALLElemBindDefaultEvent()}),CKEDITOR.instances.html_design.on("insertElement",function(e){}),CKEDITOR.instances.html_design.on("insertHtml",function(e){}),CKEDITOR.instances.html_design.on("selectionChange",function(e){e.data.selection.getSelectedElement();for(var t="",i=0;i<e.data.path.elements.length;i++){var n=e.data.path.elements[i].getAttribute("singlename");if(n){t=n;break}}t&&(console.log(CKEditorPluginUtility.Plugins),S.DisplayPluginControls(CKEditorPluginUtility.GetEnableChildControls(t)))}),this.SetCKEditorInst(CKEDITOR.instances.html_design),CKEDITOR.on("instanceReady",function(e){"function"==typeof i&&i()})}},{key:"DisplayPluginControls",value:function(e){if($(".cke_button").show(),"*"!=e){console.log(e);var t=CKEditorPluginUtility.GetPlugins();for(var i in t){var n=t[i].Setting.SingleName;$(".cke_button__"+StringUtility.ToLowerCase(n)).hide()}for(var o=e.split(";"),r=0;r<o.length;r++){n=o[r];$(".cke_button__"+StringUtility.ToLowerCase(n)).show()}}}},{key:"GetThemeVo",value:function(){return this._ThemeVo}},{key:"SetThemeVo",value:function(e){this._ThemeVo=e,this.ResetRootElemTheme(e)}},{key:"ResetRootElemTheme",value:function(e){if(this.GetCKEditorInst()){var t=this.GetCKEditorHTML();if(null!=t&&""!=t){var i=$(t);if(0<i.length){var n=i.attr("class").split(/\s+/);$.each(n,function(e,t){0<=t.indexOf("html-design-theme-")&&i.removeClass(t)}),i.addClass(e.rootElemClass),this.SetCKEditorHTML(i.outerHTML())}}}}},{key:"ClearALLForDivElemButton",value:function(){for(var e=S.GetCKEditorInst().document.find(".del-button"),t=0;t<e.count();t++)e.getItem(t).remove()}},{key:"SingleElemBindDefaultEvent",value:function(i){"true"==i.getAttribute("show_remove_button")&&i.on("click",function(){S.GetCKEditorInst().getSelection().selectElement(this),S.SetSelectedElem(this.getOuterHtml()),S.ClearALLForDivElemButton();var e=new CKEDITOR.dom.element("div");e.addClass("del-button"),i.append(e),e.on("click",function(e){i.remove();var t=e.data;t.preventDefault(),t.stopPropagation()})})}},{key:"ALLElemBindDefaultEvent",value:function(){for(var e=S.GetCKEditorInst().document.getBody().getElementsByTag("*"),t=0;t<e.count();++t){var i=e.getItem(t);this.SingleElemBindDefaultEvent(i)}}}]),S}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(CKEditorUtility,"_$CKEditorSelectElem",null),_defineProperty(CKEditorUtility,"_CKEditorInst",null),_defineProperty(CKEditorUtility,"_ThemeVo",null);var HTMLEditorUtility=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"GetHTMLEditorInst",value:function(){return this._HTMLEditorInst}},{key:"SetHTMLEditorHTML",value:function(e){if(!StringUtility.IsNullOrEmpty(e)){this.GetHTMLEditorInst().setValue(e),CodeMirror.commands.selectAll(this.GetHTMLEditorInst());var t={from:this.GetHTMLEditorInst().getCursor(!0),to:this.GetHTMLEditorInst().getCursor(!1)};this.GetHTMLEditorInst().autoFormatRange(t.from,t.to);this.GetHTMLEditorInst().getDoc().eachLine(function(e){});var i=CKEditorUtility.GetSelectedElem(),n="";i&&(n=i.outerHTML().split(">")[0]);var o=this.GetHTMLEditorInst().getSearchCursor(n);o.findNext(),o.from()&&o.to()&&this.GetHTMLEditorInst().getDoc().setSelection(o.from(),o.to())}}},{key:"GetHtmlEditorHTML",value:function(){return this.GetHTMLEditorInst().getValue()}},{key:"InitializeHTMLCodeDesign",value:function(){this._HTMLEditorInst=CodeMirror.fromTextArea(document.getElementById("TextAreaHTMLEditor"),{mode:{name:"htmlmixed",scriptTypes:[{matches:/\/x-handlebars-template|\/x-mustache/i,mode:null},{matches:/(text|application)\/(x-)?vb(a|script)/i,mode:"vbscript"}]},selectionPointer:!0,theme:"monokai",foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],lineNumbers:!0,lineWrapping:!0}),this._HTMLEditorInst.setSize("100%",PageStyleUtility.GetWindowHeight()-85)}}]),e}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(HTMLEditorUtility,"_HTMLEditorInst",null);var JsEditorUtility=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"_GetNewFormJsString",value:function(){return"<script>var FormPageObjectInstance={data:{userEntity:{},formEntity:[],config:[]},pageReady:function(){},bindRecordDataReady:function(){},validateEveryFromControl:function(controlObj){}}<\/script>"}},{key:"GetJsEditorInst",value:function(){return this._JsEditorInst}},{key:"SetJsEditorJs",value:function(e){this.GetJsEditorInst().setValue(e)}},{key:"GetJsEditorJs",value:function(){return this.GetJsEditorInst().getValue()}},{key:"InitializeJsCodeDesign",value:function(e){if(this._JsEditorInst=CodeMirror.fromTextArea($("#TextAreaJsEditor")[0],{mode:"application/ld+json",lineNumbers:!0,lineWrapping:!0,extraKeys:{"Ctrl-Q":function(e){e.foldCode(e.getCursor())}},foldGutter:!0,smartIndent:!0,matchBrackets:!0,theme:"monokai",gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"]}),this._JsEditorInst.setSize("100%",PageStyleUtility.GetWindowHeight()-85),"add"==e){this.SetJsEditorJs(this._GetNewFormJsString()),CodeMirror.commands.selectAll(this.GetJsEditorInst());var t={from:this.GetJsEditorInst().getCursor(!0),to:this.GetJsEditorInst().getCursor(!1)};this.GetJsEditorInst().autoFormatRange(t.from,t.to)}}}]),e}();_defineProperty(JsEditorUtility,"_JsEditorInst",null);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
