"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var CKEditorPluginUtility=function(){function s(){_classCallCheck(this,s)}return _createClass(s,null,[{key:"AddPluginsServerConfig",value:function(e,t,i,n,o,r,a,l,s,u,d,c,m,f){this.PluginsServerConfig[e]={SingleName:e,ToolbarLocation:t,ToolbarLabel:i,ClientResolve:n,ServerResolve:o,ClientResolveJs:r,DialogWidth:a,DialogHeight:l,IsJBuild4DCData:s,ControlCategory:u,ServerDynamicBind:d,ShowRemoveButton:c,ShowInEditorToolbar:m,EnableChildControls:f}}},{key:"_UseServerConfigCoverEmptyPluginProp",value:function(e){var t=this.PluginsServerConfig[e.SingleName];if(t){for(var i in e)"function"!=typeof e[i]&&(""!=e[i]&&null!=e[i]||t[i]&&(e[i]=t[i]));return e}return null}},{key:"GetGeneralPluginInstance",value:function(e,t){var i={SingleName:e,DialogName:"",DialogWidth:null,DialogHeight:null,DialogPageUrl:BaseUtility.AppendTimeStampUrl("Dialog.html"),DialogTitle:"DIV",ToolbarCommand:"",ToolbarIcon:"Icon.png",ToolbarLabel:"",ToolbarLocation:"",IFrameWindow:null,IFrameExecuteActionName:"Insert",DesignModalInputCss:"",ClientResolve:"",ServerResolve:"",IsJBuild4DCData:"",ControlCategory:"",ServerDynamicBind:"",ShowRemoveButton:"",ShowInEditorToolbar:"",EnableChildControls:""};return i=$.extend(!0,{},i,t),null!=(i=s._UseServerConfigCoverEmptyPluginProp(i))?(i.DialogName=i.SingleName,i.ToolbarCommand="JBuild4DC.FormDesign.Plugins."+i.SingleName,i.DialogSettingTitle=i.ToolbarLabel+"Web控件",{Setting:i}):{}}},{key:"GetEnableChildControls",value:function(e){return this.Plugins[e].Setting.EnableChildControls}},{key:"GetPlugins",value:function(){return this.Plugins}},{key:"RegGeneralPluginToEditor",value:function(t,e,i,n){CKEDITOR.dialog.addIframe(i.DialogName,i.DialogSettingTitle,e+i.DialogPageUrl,i.DialogWidth,i.DialogHeight,function(){var e=document.getElementById(this._.frameId);i.IFrameWindow=e,s.SetElemPropsInEditDialog(i.IFrameWindow,i.IFrameExecuteActionName)},{onOk:function(){var e=i.IFrameWindow.contentWindow.DialogApp.getControlProps();if(0==e.success)return!1;n(t,i,e,i.IFrameWindow.contentWindow),i.IFrameExecuteActionName=s.DialogExecuteInsertActionName},onCancel:function(){i.IFrameExecuteActionName=s.DialogExecuteInsertActionName}}),t.addCommand(i.ToolbarCommand,new CKEDITOR.dialogCommand(i.DialogName)),"true"==i.ShowInEditorToolbar&&t.ui.addButton(i.SingleName,{label:i.ToolbarLabel,icon:e+i.ToolbarIcon,command:i.ToolbarCommand,toolbar:i.ToolbarLocation}),t.on("doubleclick",function(e){s.OnCKWysiwygElemDBClickEvent(e,i)})}},{key:"OnCKWysiwygElemDBClickEvent",value:function(e,t){var i=e.data.element;"true"==i.getAttribute("runtime_auto_remove")&&(i=e.data.element.getParent()),i.getAttribute("singleName")==t.SingleName&&(CKEditorUtility.SetSelectedElem(i.getOuterHtml()),e.data.dialog=t.DialogName,t.IFrameExecuteActionName=s.DialogExecuteEditActionName)}},{key:"SerializePropsToElem",value:function(e,t,i){if(e.setAttribute("jbuild4dc_custom","true"),e.setAttribute("singlename",i.SingleName),e.setAttribute("is_jbuild4dc_data",i.IsJBuild4DCData),e.setAttribute("control_category",i.ControlCategory),e.setAttribute("show_remove_button",i.ShowRemoveButton),t.baseInfo)for(var n in t.baseInfo)"readonly"==n?"readonly"==t.baseInfo[n]?e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]):e.removeAttribute("readonly"):"disabled"==n?"disabled"==t.baseInfo[n]?e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]):e.removeAttribute("disabled"):e.setAttribute(n.toLocaleLowerCase(),t.baseInfo[n]);if(t.bindToField)for(var n in t.bindToField)e.setAttribute(n.toLocaleLowerCase(),t.bindToField[n]);if(t.defaultValue)for(var n in t.defaultValue)e.setAttribute(n.toLocaleLowerCase(),t.defaultValue[n]);if(t.validateRules&&t.validateRules.rules&&0<t.validateRules.rules.length&&e.setAttribute("validaterules",encodeURIComponent(JsonUtility.JsonToString(t.validateRules))),t.normalProps)for(var n in t.normalProps)e.setAttribute(n.toLocaleLowerCase(),t.normalProps[n]);if(t.bindToSearchField)for(var n in t.bindToSearchField)e.setAttribute(n.toLocaleLowerCase(),t.bindToSearchField[n]);if(t.normalDataSource)for(var n in t.normalDataSource)e.setAttribute(n.toLocaleLowerCase(),t.normalDataSource[n]);return e}},{key:"DeserializePropsFromElem",value:function(e){var t={},o=$(e);function i(e,t){var i={};for(var n in this.DefaultProps[t])o.attr(n)?i[n]=o.attr(n):i[n]=this.DefaultProps[t][n];return e[t]=i,e}return t=i.call(this,t,"baseInfo"),t=i.call(this,t,"bindToField"),t=i.call(this,t,"defaultValue"),t=i.call(this,t,"bindToSearchField"),t=i.call(this,t,"normalDataSource"),o.attr("validateRules")&&(t.validateRules=JsonUtility.StringToJson(decodeURIComponent(o.attr("validateRules")))),t}},{key:"BuildGeneralElemToCKWysiwyg",value:function(e,t,i,n){if(this.ValidateBuildEnable(e,t,i,n))if(console.log("IFrameExecuteActionName:"+t.IFrameExecuteActionName),t.IFrameExecuteActionName==s.DialogExecuteInsertActionName){var o=CKEDITOR.dom.element.createFromHtml(e);this.SerializePropsToElem(o,i,t),CKEditorUtility.GetCKEditorInst().insertElement(o),CKEditorUtility.SingleElemBindDefaultEvent(o)}else{var r=CKEditorUtility.GetSelectedCKEditorElem();if(r){var a=new CKEDITOR.dom.element.createFromHtml(r.getOuterHtml());if("InputControl"==a.getAttribute("control_category")){var l=$(e).text();a.setText(l)}r.copyAttributes(a,{temp:"temp"}),this.SerializePropsToElem(a,i,t),a.replace(r),CKEditorUtility.SingleElemBindDefaultEvent(a)}}}},{key:"ValidateBuildEnable",value:function(e,t,i,n){return!0}},{key:"ValidateSerializeControlDialogCompletedEnable",value:function(e){return"true"==e.baseInfo.serialize&&""==e.bindToField.fieldName?(DialogUtility.Alert(window,DialogUtility.DialogAlertId,{},"序列化的控件必须绑定字段!",null),{success:!1}):e}},{key:"SetElemPropsInEditDialog",value:function(e,t){var i=CKEditorUtility.GetCKEditorInst().getSelection().getStartElement(),n=null;if(i&&(n=i.getParents()),e.contentWindow.DialogApp.ready(t,i,n),t==this.DialogExecuteEditActionName){var o=CKEditorUtility.GetSelectedElem().outerHTML(),r=this.DeserializePropsFromElem(o);e.contentWindow.DialogApp.setControlProps($(o),r)}}},{key:"GetControlDescText",value:function(e,t){console.log(t);var i="类型:【"+e.ToolbarLabel+"】<br />绑定:【"+t.bindToField.tableCaption+"-"+t.bindToField.fieldCaption+"】";if(t.defaultValue&&t.defaultValue.defaultText&&(i+="<br />默认:【"+t.defaultValue.defaultType+":"+t.defaultValue.defaultText+"】"),t.validateRules&&t.validateRules.rules&&0<t.validateRules.rules.length){i+="<br />验证:【";for(var n=0;n<t.validateRules.rules.length;n++)i+=t.validateRules.rules[n].validateType+";";i=StringUtility.RemoveLastChar(i),i+="】"}return i}},{key:"GetSearchControlDescText",value:function(e,t){return"["+e.ToolbarLabel+"] 绑定:["+t.bindToSearchField.columnCaption+"]("+t.bindToSearchField.columnOperator+")"}},{key:"GetAutoRemoveTipLabel",value:function(e){return e||(e="双击编辑该部件"),'<div runtime_auto_remove="true" class="wysiwyg-auto-remove-tip">'+e+"</div>"}},{key:"TryGetListButtonsInPluginPage",value:function(){var i=[],e=CKEditorUtility.GetCKEditorHTMLInPluginPage();return $(e).find("[buttoncaption]").each(function(){var e=$(this).attr("buttoncaption"),t=$(this).attr("id");i.push({buttonCaption:e,buttonId:t})}),i}},{key:"TryGetDataSetId",value:function(e,t){if(e)for(var i=t.length-1;i--;0<=i)if(null!=t[i].getAttribute("datasetid")&&""!=t[i].getAttribute("datasetid"))return t[i].getAttribute("datasetid");return this.dataSetId?null:window.parent.listDesign.listResourceEntity.listDatasetId}},{key:"TemplateAddDefProp",value:function(e,t,i,n,o){e.attr("classname",""),e.attr("control_category","ContainerControl"),e.attr("custdisabled","nodisabled"),e.attr("custreadonly","noreadonly"),e.attr("desc",""),e.attr("id",t),e.attr("is_jbuild4dc_data","false"),e.attr("jbuild4dc_custom","true"),e.attr("name",t),e.attr("placeholder",""),e.attr("serialize","false"),e.attr("show_remove_button",i),e.attr("singlename",n),e.attr("style",""),e.attr("status",o)}}]),s}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(CKEditorPluginUtility,"PluginsServerConfig",{}),_defineProperty(CKEditorPluginUtility,"Plugins",{}),_defineProperty(CKEditorPluginUtility,"DefaultProps",{bindToField:{relationId:"",tableId:"",tableName:"",tableCaption:"",fieldName:"",fieldCaption:"",fieldDataType:"",fieldLength:""},defaultValue:{defaultType:"",defaultValue:"",defaultText:""},validateRules:{msg:"",rules:[]},baseInfo:{id:"",serialize:"true",name:"",className:"",placeholder:"",custReadonly:"noreadonly",custDisabled:"nodisabled",style:"",desc:"",status:"enable"},bindToSearchField:{columnTitle:"",columnTableName:"",columnName:"",columnCaption:"",columnDataTypeName:"",columnOperator:"匹配"},normalDataSource:{defaultIsNull:"true",sqlDataSource:"",dictionaryIdDataSource:"",restDataSource:"",staticDataSource:""}}),_defineProperty(CKEditorPluginUtility,"DialogExecuteEditActionName","Edit"),_defineProperty(CKEditorPluginUtility,"DialogExecuteInsertActionName","Insert");var CKEditorUtility=function(){function D(){_classCallCheck(this,D)}return _createClass(D,null,[{key:"SetSelectedElem",value:function(e){this._$CKEditorSelectElem=$(e)}},{key:"GetSelectedElem",value:function(){return this._$CKEditorSelectElem&&0<this._$CKEditorSelectElem.length?this._$CKEditorSelectElem:null}},{key:"GetSelectedCKEditorElem",value:function(){if(this.GetSelectedElem()){var e=this.GetSelectedElem().attr("id");return this.GetCKEditorInst().document.getById(e)}return null}},{key:"SetLastSelectedTempHTML",value:function(e){this._LastSelectedTempHTML=e}},{key:"GetLastSelectedTempHTML",value:function(){return this._LastSelectedTempHTML}},{key:"TryGetIdFromLastSelectedTempHTML",value:function(e){return this._LastSelectedTempHTML&&$(e).attr("name")==$(this.GetLastSelectedTempHTML()).attr("name")?$(this.GetLastSelectedTempHTML()).attr("id"):""}},{key:"GetCKEditorInst",value:function(){return this._CKEditorInst}},{key:"SetCKEditorInst",value:function(e){this._CKEditorInst=e}},{key:"GetCKEditorHTML",value:function(){return this.ClearALLForDivElemButton(),this.ClearALLPluginInnerPanel(),this.GetCKEditorInst().getData()}},{key:"SetCKEditorHTML",value:function(e){this.GetCKEditorInst().setData(e),window.setTimeout(function(){D.ALLElemBindDefaultEvent()},500)}},{key:"GetCKEditorHTMLInPluginPage",value:function(){return window.parent.CKEditorUtility.GetCKEditorHTML()}},{key:"InitializeCKEditor",value:function(e,t,i,n,o,r){for(var a=new Array,l=0;l<t.length;l++){var s=t[l],u=s.singleName,d=s.toolbarLocation,c=s.text,m=s.serverResolve,f=s.clientResolve,g=s.clientResolveJs,C=s.dialogWidth,v=s.dialogHeight,E=s.isJBuild4DCData,y=s.controlCategory,p=s.serverDynamicBind,h=s.showRemoveButton,b=s.showInEditorToolbar,T=s.enableChildControls,I=u+"Plugin.js",S=o+u+"/";CKEDITOR.plugins.addExternal(u,S,I),a.push(u),CKEditorPluginUtility.AddPluginsServerConfig(u,d,c,f,m,g,C,v,E,y,p,h,b,T)}this.SetThemeVo(r);var P=BaseUtility.AppendTimeStampUrl(n);CKEDITOR.replace(e,{customConfig:P,extraPlugins:a.join(",")}),CKEDITOR.instances.html_design.on("beforePaste",function(e){}),CKEDITOR.instances.html_design.on("paste",function(t){var i=t.data.dataValue;console.log(i);try{var e=$(i);if(e.find(".pluginInnerPanelWrap").remove(),1==e.find("div").length){var n=$(e.find("div").eq(0)),o=D.TryGetIdFromLastSelectedTempHTML(n);if(console.log(o),o)D.GetCKEditorInst().document.getById(o)&&(o="ct_copy_"+StringUtility.Timestamp());else o="ct_copy_"+StringUtility.Timestamp();t.data.dataValue=n.attr("id",o).outerHTML()}}catch(e){console.log("黏贴异常,还原HTML"),t.data.dataValue=i}}),CKEDITOR.instances.html_design.on("afterPaste",function(e){}),CKEDITOR.instances.html_design.on("insertElement",function(e){}),CKEDITOR.instances.html_design.on("insertHtml",function(e){}),CKEDITOR.instances.html_design.on("selectionChange",function(e){for(var t=e.data.selection.getSelectedElement(),i="",n=0;n<e.data.path.elements.length;n++){var o=(t=e.data.path.elements[n]).getAttribute("singlename"),r=t.getHtml();if(o){i=o,D.SetSelectedElem(t.getOuterHtml()),D.SetLastSelectedTempHTML(t.getOuterHtml());var a=t.getHtml();(a=a.replace(/<br \/>/g,"").replace(/<br>/g,"")).indexOf("<")<0&&(console.log(t),D.GetCKEditorInst().getSelection().selectElement(t)),"WFDCT_Template"!=i&&D.CreatePluginInnerPanel(t);break}if("td"==t.getName()&&"&nbsp;"==r){D.GetCKEditorInst().getSelection().selectElement(t.getChild(0));break}}i&&D.DisplayPluginControls(CKEditorPluginUtility.GetEnableChildControls(i))}),this.SetCKEditorInst(CKEDITOR.instances.html_design),CKEDITOR.on("instanceReady",function(e){"function"==typeof i&&i()})}},{key:"DisplayPluginControls",value:function(e){if($(".cke_button").show(),"*"!=e){var t=CKEditorPluginUtility.GetPlugins();for(var i in t){var n=t[i].Setting.SingleName;$(".cke_button__"+StringUtility.ToLowerCase(n)).hide()}for(var o=e.split(";"),r=0;r<o.length;r++){n=o[r];$(".cke_button__"+StringUtility.ToLowerCase(n)).show()}}}},{key:"GetThemeVo",value:function(){return this._ThemeVo}},{key:"SetThemeVo",value:function(e){this._ThemeVo=e,this.ResetRootElemTheme(e)}},{key:"ResetRootElemTheme",value:function(e){if(this.GetCKEditorInst()){var t=this.GetCKEditorHTML();if(null!=t&&""!=t){var i=$(t);if(0<i.length){var n=i.attr("class").split(/\s+/);$.each(n,function(e,t){0<=t.indexOf("html-design-theme-")&&i.removeClass(t)}),i.addClass(e.rootElemClass),this.SetCKEditorHTML(i.outerHTML())}}}}},{key:"ClearALLForDivElemButton",value:function(){for(var e=D.GetCKEditorInst().document.find(".del-button"),t=0;t<e.count();t++)e.getItem(t).remove()}},{key:"CreatePluginInnerPanel",value:function(i){D.ClearALLPluginInnerPanel();var e=new CKEDITOR.dom.element("div");e.addClass("pluginInnerPanelWrap"),i.append(e);var t=new CKEDITOR.dom.element("div");t.addClass("button"),t.addClass("select-img"),t.setAttribute("title","选中"),e.append(t),t.on("click",function(e){alert("暂不支持!");var t=e.data;t.preventDefault(),t.stopPropagation()});var n=new CKEDITOR.dom.element("div");n.addClass("button"),n.addClass("del-img"),n.setAttribute("title","删除"),e.append(n),n.on("click",function(e){i.remove();var t=e.data;t.preventDefault(),t.stopPropagation()});var o=new CKEDITOR.dom.element("div");o.addClass("button"),o.addClass("copy-id-img"),o.setAttribute("title","复制ID"),e.append(o),o.on("click",function(e){alert("暂不支持!");var t=e.data;t.preventDefault(),t.stopPropagation()})}},{key:"ClearALLPluginInnerPanel",value:function(){for(var e=D.GetCKEditorInst().document.find(".pluginInnerPanelWrap"),t=0;t<e.count();t++)e.getItem(t).remove()}},{key:"SingleElemBindDefaultEvent",value:function(e){var t=e.getAttribute("singlename"),i=e.getHtml();(i=i.replace(/<br \/>/g,"")).indexOf("<")<0&&t&&e.on("click",function(e){console.log(this),D.GetCKEditorInst().getSelection().selectElement(this),D.SetSelectedElem(this.getOuterHtml());var t=e.data;t.preventDefault(),t.stopPropagation()})}},{key:"ALLElemBindDefaultEvent",value:function(){console.log("取消使用点击进行元素选择和删除的功能,迁移为selectionChange事件进行!")}}]),D}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(CKEditorUtility,"_$CKEditorSelectElem",null),_defineProperty(CKEditorUtility,"_LastSelectedTempHTML",null),_defineProperty(CKEditorUtility,"_CKEditorInst",null),_defineProperty(CKEditorUtility,"_ThemeVo",null);var HTMLEditorUtility=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"GetHTMLEditorInst",value:function(){return this._HTMLEditorInst}},{key:"SetHTMLEditorHTML",value:function(e){if(!StringUtility.IsNullOrEmpty(e)){this.GetHTMLEditorInst().setValue(e),CodeMirror.commands.selectAll(this.GetHTMLEditorInst());var t={from:this.GetHTMLEditorInst().getCursor(!0),to:this.GetHTMLEditorInst().getCursor(!1)};this.GetHTMLEditorInst().autoFormatRange(t.from,t.to);this.GetHTMLEditorInst().getDoc().eachLine(function(e){});var i=CKEditorUtility.GetSelectedElem(),n="";i&&(n=i.outerHTML().split(">")[0]);var o=this.GetHTMLEditorInst().getSearchCursor(n);o.findNext(),o.from()&&o.to()&&this.GetHTMLEditorInst().getDoc().setSelection(o.from(),o.to())}}},{key:"GetHtmlEditorHTML",value:function(){return this.GetHTMLEditorInst().getValue()}},{key:"InitializeHTMLCodeDesign",value:function(){this._HTMLEditorInst=CodeMirror.fromTextArea(document.getElementById("TextAreaHTMLEditor"),{mode:{name:"htmlmixed",scriptTypes:[{matches:/\/x-handlebars-template|\/x-mustache/i,mode:null},{matches:/(text|application)\/(x-)?vb(a|script)/i,mode:"vbscript"}]},selectionPointer:!0,theme:"monokai",foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],lineNumbers:!0,lineWrapping:!0}),this._HTMLEditorInst.setSize("100%",PageStyleUtility.GetWindowHeight()-85)}}]),e}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),e}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}_defineProperty(HTMLEditorUtility,"_HTMLEditorInst",null);var JsEditorUtility=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"_GetNewFormJsString",value:function(){return"<script>var FormPageObjectInstance={data:{userEntity:{},formEntity:[],config:[]},pageReady:function(){},bindRecordDataReady:function(){},validateEveryFromControl:function(controlObj){}}<\/script>"}},{key:"GetJsEditorInst",value:function(){return this._JsEditorInst}},{key:"SetJsEditorJs",value:function(e){this.GetJsEditorInst().setValue(e)}},{key:"GetJsEditorJs",value:function(){return this.GetJsEditorInst().getValue()}},{key:"InitializeJsCodeDesign",value:function(e){if(this._JsEditorInst=CodeMirror.fromTextArea($("#TextAreaJsEditor")[0],{mode:"application/ld+json",lineNumbers:!0,lineWrapping:!0,extraKeys:{"Ctrl-Q":function(e){e.foldCode(e.getCursor())}},foldGutter:!0,smartIndent:!0,matchBrackets:!0,theme:"monokai",gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"]}),this._JsEditorInst.setSize("100%",PageStyleUtility.GetWindowHeight()-85),"add"==e){this.SetJsEditorJs(this._GetNewFormJsString()),CodeMirror.commands.selectAll(this.GetJsEditorInst());var t={from:this.GetJsEditorInst().getCursor(!0),to:this.GetJsEditorInst().getCursor(!1)};this.GetJsEditorInst().autoFormatRange(t.from,t.to)}}}]),e}();_defineProperty(JsEditorUtility,"_JsEditorInst",null);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
